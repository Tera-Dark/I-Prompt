{"ast":null,"code":"import { PAINTING_STYLES } from '../constants/data';\n\n/**\r\n * 本地提示词增强服务 - AI服务的降级备份\r\n */\nclass LocalPromptService {\n  constructor() {\n    this.qualityTags = [\"masterpiece, best quality, ultra detailed, extremely detailed\", \"8k wallpaper, highly detailed, professional quality\", \"absurdres, incredible detail, finely detailed\", \"amazing quality, ultra high res, detailed background\"];\n    this.lightingEffects = [\"cinematic lighting, dramatic lighting\", \"soft lighting, natural lighting\", \"studio lighting, professional lighting\", \"golden hour lighting, warm lighting\"];\n    this.compositionTags = [\"perfect composition, rule of thirds\", \"dynamic angle, interesting composition\", \"centered composition, balanced layout\", \"artistic composition, visual harmony\"];\n  }\n\n  /**\r\n   * 检测关键词并添加相关标签\r\n   */\n  detectKeywords(input) {\n    const enhancements = [];\n\n    // 人物相关关键词\n    if (/女孩|男孩|人物|角色|美女|帅哥|少女|boy|girl|character|人/i.test(input)) {\n      enhancements.push(\"beautiful detailed eyes, detailed face, perfect anatomy\");\n    }\n\n    // 场景相关关键词\n    if (/风景|森林|海边|城市|建筑|landscape|forest|ocean|city|building|场景/i.test(input)) {\n      enhancements.push(\"wide shot, scenic view, atmospheric perspective\");\n    }\n\n    // 动物相关\n    if (/猫|狗|鸟|动物|cat|dog|bird|animal/i.test(input)) {\n      enhancements.push(\"detailed fur, expressive eyes, natural pose\");\n    }\n\n    // 食物相关\n    if (/食物|美食|料理|食品|food|dish|cuisine/i.test(input)) {\n      enhancements.push(\"appetizing, detailed texture, professional food photography\");\n    }\n    return enhancements;\n  }\n\n  /**\r\n   * 生成本地增强提示词\r\n   */\n  generatePrompt(input, style = '') {\n    try {\n      let enhancedPrompt = input;\n\n      // 添加风格\n      if (style) {\n        const styleData = PAINTING_STYLES.find(s => s.name === style);\n        if (styleData) {\n          enhancedPrompt += \", \" + styleData.prompt;\n        }\n      }\n\n      // 检测关键词并添加相关标签\n      const keywordEnhancements = this.detectKeywords(input);\n      if (keywordEnhancements.length > 0) {\n        enhancedPrompt += \", \" + keywordEnhancements.join(\", \");\n      }\n\n      // 随机添加质量、光照和构图标签\n      const randomQuality = this.qualityTags[Math.floor(Math.random() * this.qualityTags.length)];\n      const randomLighting = this.lightingEffects[Math.floor(Math.random() * this.lightingEffects.length)];\n      const randomComposition = this.compositionTags[Math.floor(Math.random() * this.compositionTags.length)];\n      const finalPrompt = `${enhancedPrompt}, ${randomQuality}, ${randomLighting}, ${randomComposition}`;\n      return {\n        content: finalPrompt,\n        source: 'local'\n      };\n    } catch (error) {\n      console.error('本地生成失败:', error);\n      throw new Error('本地生成服务异常');\n    }\n  }\n\n  /**\r\n   * 翻译常见中文词汇\r\n   */\n  translateCommonWords(text) {\n    const translations = {\n      '女孩': 'girl',\n      '男孩': 'boy',\n      '美女': 'beautiful woman',\n      '帅哥': 'handsome man',\n      '猫': 'cat',\n      '狗': 'dog',\n      '花': 'flower',\n      '树': 'tree',\n      '房子': 'house',\n      '汽车': 'car',\n      '天空': 'sky',\n      '海洋': 'ocean',\n      '森林': 'forest',\n      '城市': 'city',\n      '夜晚': 'night',\n      '白天': 'day',\n      '阳光': 'sunlight',\n      '月亮': 'moon',\n      '星星': 'stars'\n    };\n    let translatedText = text;\n    Object.entries(translations).forEach(([chinese, english]) => {\n      const regex = new RegExp(chinese, 'g');\n      translatedText = translatedText.replace(regex, english);\n    });\n    return translatedText;\n  }\n}\nexport default new LocalPromptService();","map":{"version":3,"names":["PAINTING_STYLES","LocalPromptService","constructor","qualityTags","lightingEffects","compositionTags","detectKeywords","input","enhancements","test","push","generatePrompt","style","enhancedPrompt","styleData","find","s","name","prompt","keywordEnhancements","length","join","randomQuality","Math","floor","random","randomLighting","randomComposition","finalPrompt","content","source","error","console","Error","translateCommonWords","text","translations","translatedText","Object","entries","forEach","chinese","english","regex","RegExp","replace"],"sources":["C:/Users/wjx19/Documents/GitHub/AI-Art-Station/src/services/localPromptService.js"],"sourcesContent":["import { PAINTING_STYLES } from '../constants/data';\r\n\r\n/**\r\n * 本地提示词增强服务 - AI服务的降级备份\r\n */\r\nclass LocalPromptService {\r\n  constructor() {\r\n    this.qualityTags = [\r\n      \"masterpiece, best quality, ultra detailed, extremely detailed\",\r\n      \"8k wallpaper, highly detailed, professional quality\",\r\n      \"absurdres, incredible detail, finely detailed\",\r\n      \"amazing quality, ultra high res, detailed background\"\r\n    ];\r\n\r\n    this.lightingEffects = [\r\n      \"cinematic lighting, dramatic lighting\",\r\n      \"soft lighting, natural lighting\",\r\n      \"studio lighting, professional lighting\",\r\n      \"golden hour lighting, warm lighting\"\r\n    ];\r\n\r\n    this.compositionTags = [\r\n      \"perfect composition, rule of thirds\",\r\n      \"dynamic angle, interesting composition\",\r\n      \"centered composition, balanced layout\",\r\n      \"artistic composition, visual harmony\"\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * 检测关键词并添加相关标签\r\n   */\r\n  detectKeywords(input) {\r\n    const enhancements = [];\r\n\r\n    // 人物相关关键词\r\n    if (/女孩|男孩|人物|角色|美女|帅哥|少女|boy|girl|character|人/i.test(input)) {\r\n      enhancements.push(\"beautiful detailed eyes, detailed face, perfect anatomy\");\r\n    }\r\n    \r\n    // 场景相关关键词\r\n    if (/风景|森林|海边|城市|建筑|landscape|forest|ocean|city|building|场景/i.test(input)) {\r\n      enhancements.push(\"wide shot, scenic view, atmospheric perspective\");\r\n    }\r\n\r\n    // 动物相关\r\n    if (/猫|狗|鸟|动物|cat|dog|bird|animal/i.test(input)) {\r\n      enhancements.push(\"detailed fur, expressive eyes, natural pose\");\r\n    }\r\n\r\n    // 食物相关\r\n    if (/食物|美食|料理|食品|food|dish|cuisine/i.test(input)) {\r\n      enhancements.push(\"appetizing, detailed texture, professional food photography\");\r\n    }\r\n\r\n    return enhancements;\r\n  }\r\n\r\n  /**\r\n   * 生成本地增强提示词\r\n   */\r\n  generatePrompt(input, style = '') {\r\n    try {\r\n      let enhancedPrompt = input;\r\n      \r\n      // 添加风格\r\n      if (style) {\r\n        const styleData = PAINTING_STYLES.find(s => s.name === style);\r\n        if (styleData) {\r\n          enhancedPrompt += \", \" + styleData.prompt;\r\n        }\r\n      }\r\n      \r\n      // 检测关键词并添加相关标签\r\n      const keywordEnhancements = this.detectKeywords(input);\r\n      if (keywordEnhancements.length > 0) {\r\n        enhancedPrompt += \", \" + keywordEnhancements.join(\", \");\r\n      }\r\n      \r\n      // 随机添加质量、光照和构图标签\r\n      const randomQuality = this.qualityTags[Math.floor(Math.random() * this.qualityTags.length)];\r\n      const randomLighting = this.lightingEffects[Math.floor(Math.random() * this.lightingEffects.length)];\r\n      const randomComposition = this.compositionTags[Math.floor(Math.random() * this.compositionTags.length)];\r\n      \r\n      const finalPrompt = `${enhancedPrompt}, ${randomQuality}, ${randomLighting}, ${randomComposition}`;\r\n      \r\n      return { content: finalPrompt, source: 'local' };\r\n      \r\n    } catch (error) {\r\n      console.error('本地生成失败:', error);\r\n      throw new Error('本地生成服务异常');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 翻译常见中文词汇\r\n   */\r\n  translateCommonWords(text) {\r\n    const translations = {\r\n      '女孩': 'girl',\r\n      '男孩': 'boy', \r\n      '美女': 'beautiful woman',\r\n      '帅哥': 'handsome man',\r\n      '猫': 'cat',\r\n      '狗': 'dog',\r\n      '花': 'flower',\r\n      '树': 'tree',\r\n      '房子': 'house',\r\n      '汽车': 'car',\r\n      '天空': 'sky',\r\n      '海洋': 'ocean',\r\n      '森林': 'forest',\r\n      '城市': 'city',\r\n      '夜晚': 'night',\r\n      '白天': 'day',\r\n      '阳光': 'sunlight',\r\n      '月亮': 'moon',\r\n      '星星': 'stars'\r\n    };\r\n\r\n    let translatedText = text;\r\n    Object.entries(translations).forEach(([chinese, english]) => {\r\n      const regex = new RegExp(chinese, 'g');\r\n      translatedText = translatedText.replace(regex, english);\r\n    });\r\n\r\n    return translatedText;\r\n  }\r\n}\r\n\r\nexport default new LocalPromptService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}