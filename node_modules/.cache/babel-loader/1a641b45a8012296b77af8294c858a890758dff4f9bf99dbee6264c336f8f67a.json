{"ast":null,"code":"import{APP_CONFIG,ERROR_MESSAGES}from'../constants/config';/**\n * 验证输入文本\n * @param {string} text - 输入文本\n * @returns {Object} 验证结果\n */export const validateInput=text=>{const errors=[];if(!text||text.trim().length===0){errors.push(ERROR_MESSAGES.VALIDATION.EMPTY_INPUT);}else if(text.trim().length<APP_CONFIG.MIN_INPUT_LENGTH){errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_SHORT);}else if(text.length>APP_CONFIG.MAX_INPUT_LENGTH){errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_LONG);}return{isValid:errors.length===0,errors};};/**\n * 验证图片文件\n * @param {File} file - 文件对象\n * @returns {Object} 验证结果\n */export const validateImageFile=file=>{const errors=[];if(!file){errors.push(ERROR_MESSAGES.VALIDATION.NO_FILE_SELECTED);return{isValid:false,errors};}// 检查文件大小\nif(file.size>APP_CONFIG.FILE_UPLOAD.MAX_SIZE){errors.push(ERROR_MESSAGES.VALIDATION.FILE_TOO_LARGE);}// 检查文件类型\nif(!APP_CONFIG.FILE_UPLOAD.ALLOWED_TYPES.includes(file.type)){errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);}// 检查文件扩展名\nconst fileName=file.name.toLowerCase();const hasValidExtension=APP_CONFIG.FILE_UPLOAD.ALLOWED_EXTENSIONS.some(ext=>fileName.endsWith(ext));if(!hasValidExtension){errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);}return{isValid:errors.length===0,errors};};/**\n * 验证API密钥\n * @param {string} apiKey - API密钥\n * @returns {boolean} 是否有效\n */export const validateApiKey=apiKey=>{if(!apiKey||typeof apiKey!=='string'){return false;}// 检查格式（假设API密钥是以 sk- 开头的字符串）\nreturn apiKey.startsWith('sk-')&&apiKey.length>10;};/**\n * 验证URL\n * @param {string} url - URL字符串\n * @returns {boolean} 是否有效\n */export const validateUrl=url=>{try{new URL(url);return true;}catch(_unused){return false;}};/**\n * 清理和格式化提示词\n * @param {string} prompt - 原始提示词\n * @returns {string} 清理后的提示词\n */export const cleanPrompt=prompt=>{if(!prompt||typeof prompt!=='string'){return'';}return prompt.trim().replace(/\\s+/g,' ')// 多个空格替换为单个空格\n.replace(/[，。！？；：]/g,',')// 中文标点替换为英文逗号\n.replace(/,+/g,',')// 多个逗号替换为单个逗号\n.replace(/^,|,$/g,'');// 移除首尾逗号\n};/**\n * 验证邮箱格式\n * @param {string} email 邮箱地址\n * @returns {boolean} 是否有效\n */export const validateEmail=email=>{const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return emailRegex.test(email);};","map":{"version":3,"names":["APP_CONFIG","ERROR_MESSAGES","validateInput","text","errors","trim","length","push","VALIDATION","EMPTY_INPUT","MIN_INPUT_LENGTH","INPUT_TOO_SHORT","MAX_INPUT_LENGTH","INPUT_TOO_LONG","isValid","validateImageFile","file","NO_FILE_SELECTED","size","FILE_UPLOAD","MAX_SIZE","FILE_TOO_LARGE","ALLOWED_TYPES","includes","type","INVALID_FILE_TYPE","fileName","name","toLowerCase","hasValidExtension","ALLOWED_EXTENSIONS","some","ext","endsWith","validateApiKey","apiKey","startsWith","validateUrl","url","URL","_unused","cleanPrompt","prompt","replace","validateEmail","email","emailRegex","test"],"sources":["C:/Users/wjx19/Documents/GitHub/I-Prompt/src/utils/validation.js"],"sourcesContent":["import { APP_CONFIG, ERROR_MESSAGES } from '../constants/config';\n\n/**\n * 验证输入文本\n * @param {string} text - 输入文本\n * @returns {Object} 验证结果\n */\nexport const validateInput = (text) => {\n  const errors = [];\n  \n  if (!text || text.trim().length === 0) {\n    errors.push(ERROR_MESSAGES.VALIDATION.EMPTY_INPUT);\n  } else if (text.trim().length < APP_CONFIG.MIN_INPUT_LENGTH) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_SHORT);\n  } else if (text.length > APP_CONFIG.MAX_INPUT_LENGTH) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_LONG);\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * 验证图片文件\n * @param {File} file - 文件对象\n * @returns {Object} 验证结果\n */\nexport const validateImageFile = (file) => {\n  const errors = [];\n  \n  if (!file) {\n    errors.push(ERROR_MESSAGES.VALIDATION.NO_FILE_SELECTED);\n    return { isValid: false, errors };\n  }\n  \n  // 检查文件大小\n  if (file.size > APP_CONFIG.FILE_UPLOAD.MAX_SIZE) {\n    errors.push(ERROR_MESSAGES.VALIDATION.FILE_TOO_LARGE);\n  }\n  \n  // 检查文件类型\n  if (!APP_CONFIG.FILE_UPLOAD.ALLOWED_TYPES.includes(file.type)) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);\n  }\n  \n  // 检查文件扩展名\n  const fileName = file.name.toLowerCase();\n  const hasValidExtension = APP_CONFIG.FILE_UPLOAD.ALLOWED_EXTENSIONS.some(ext => \n    fileName.endsWith(ext)\n  );\n  \n  if (!hasValidExtension) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * 验证API密钥\n * @param {string} apiKey - API密钥\n * @returns {boolean} 是否有效\n */\nexport const validateApiKey = (apiKey) => {\n  if (!apiKey || typeof apiKey !== 'string') {\n    return false;\n  }\n  \n  // 检查格式（假设API密钥是以 sk- 开头的字符串）\n  return apiKey.startsWith('sk-') && apiKey.length > 10;\n};\n\n/**\n * 验证URL\n * @param {string} url - URL字符串\n * @returns {boolean} 是否有效\n */\nexport const validateUrl = (url) => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * 清理和格式化提示词\n * @param {string} prompt - 原始提示词\n * @returns {string} 清理后的提示词\n */\nexport const cleanPrompt = (prompt) => {\n  if (!prompt || typeof prompt !== 'string') {\n    return '';\n  }\n  \n  return prompt\n    .trim()\n    .replace(/\\s+/g, ' ') // 多个空格替换为单个空格\n    .replace(/[，。！？；：]/g, ',') // 中文标点替换为英文逗号\n    .replace(/,+/g, ',') // 多个逗号替换为单个逗号\n    .replace(/^,|,$/g, ''); // 移除首尾逗号\n};\n\n/**\n * 验证邮箱格式\n * @param {string} email 邮箱地址\n * @returns {boolean} 是否有效\n */\nexport const validateEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}