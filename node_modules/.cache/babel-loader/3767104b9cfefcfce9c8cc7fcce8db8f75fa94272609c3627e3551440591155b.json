{"ast":null,"code":"/**\r\n * 阿里云翻译服务\r\n * 使用阿里云机器翻译免费API\r\n */\n\n// 阿里云翻译API配置\nconst ALI_TRANSLATE_CONFIG = {\n  // 使用阿里云免费翻译API\n  BASE_URL: 'https://fanyi.sogou.com/reventondc/synthesis',\n  // 备用API - 有道翻译\n  YOUDAO_URL: 'https://fanyi.youdao.com/translate_o',\n  // 百度翻译\n  BAIDU_URL: 'https://fanyi-api.baidu.com/api/trans/vip/translate'\n};\n\n/**\r\n * 检测文本语言\r\n * @param {string} text - 要检测的文本\r\n * @returns {string} - 'zh' 或 'en'\r\n */\nexport function detectLanguage(text) {\n  // 检测中文字符\n  const chineseRegex = /[\\u4e00-\\u9fa5]/;\n  return chineseRegex.test(text) ? 'zh' : 'en';\n}\n\n/**\r\n * 专业AI绘画词典\r\n */\nconst AI_ART_DICTIONARY = {\n  // 英文到中文 - 质量类\n  'masterpiece': '杰作',\n  'best quality': '最佳质量',\n  'ultra detailed': '超详细',\n  'high resolution': '高分辨率',\n  'professional': '专业级',\n  '8k wallpaper': '8K壁纸',\n  '4k': '4K',\n  'hdr': 'HDR',\n  'award winning': '获奖作品',\n  'trending': '热门',\n  'perfect': '完美',\n  'stunning': '惊艳',\n  // 人物类\n  'beautiful girl': '美丽女孩',\n  'cute girl': '可爱女孩',\n  'handsome boy': '英俊男孩',\n  'pretty woman': '漂亮女性',\n  'strong man': '强壮男性',\n  'elegant lady': '优雅女士',\n  'cute': '可爱',\n  'kawaii': '萌',\n  'beautiful': '美丽',\n  'handsome': '英俊',\n  'pretty': '漂亮',\n  'gorgeous': '华丽',\n  'charming': '迷人',\n  'lovely': '可爱',\n  // 年龄相关\n  'child': '儿童',\n  'teenager': '青少年',\n  'young adult': '青年',\n  'adult': '成年人',\n  'mature': '成熟',\n  'elderly': '老年',\n  'teen': '青少年',\n  'young': '年轻',\n  // 风格类\n  'anime style': '动漫风格',\n  'realistic': '写实',\n  'photorealistic': '照片级写实',\n  'oil painting': '油画',\n  'watercolor': '水彩',\n  'digital art': '数字艺术',\n  'sketch': '素描',\n  'cartoon': '卡通',\n  'manga': '漫画',\n  'pixel art': '像素艺术',\n  'vector art': '矢量艺术',\n  // 光照类\n  'cinematic lighting': '电影级光照',\n  'soft lighting': '柔和光照',\n  'dramatic lighting': '戏剧性光照',\n  'golden hour': '黄金时刻',\n  'natural lighting': '自然光照',\n  'studio lighting': '摄影棚光照',\n  'neon lights': '霓虹灯',\n  'candlelight': '烛光',\n  'sunlight': '阳光',\n  'moonlight': '月光',\n  'backlight': '背光',\n  'rim lighting': '轮廓光',\n  // 构图类\n  'perfect composition': '完美构图',\n  'dynamic pose': '动态姿势',\n  'close-up': '特写',\n  'wide shot': '远景',\n  'rule of thirds': '三分法则',\n  'bird eye view': '鸟瞰视角',\n  'portrait': '肖像',\n  'full body': '全身',\n  'upper body': '上半身',\n  'face focus': '面部特写',\n  // 效果类\n  'depth of field': '景深',\n  'bokeh': '虚化',\n  'sharp focus': '锐利对焦',\n  'motion blur': '运动模糊',\n  'lens flare': '镜头光晕',\n  'chromatic aberration': '色差',\n  'film grain': '胶片颗粒',\n  'vignette': '暗角',\n  // 职业类\n  'actor': '演员',\n  'teacher': '教师',\n  'scientist': '科学家',\n  'artist': '艺术家',\n  'doctor': '医生',\n  'student': '学生',\n  'nurse': '护士',\n  'police': '警察',\n  'businessman': '商人',\n  'chef': '厨师',\n  'musician': '音乐家',\n  'photographer': '摄影师',\n  'writer': '作家',\n  'soldier': '士兵',\n  // 表情动作类\n  'smile': '微笑',\n  'happy': '开心',\n  'sad': '悲伤',\n  'angry': '愤怒',\n  'surprised': '惊讶',\n  'confused': '困惑',\n  'shy': '害羞',\n  'crying': '哭泣',\n  'laughing': '大笑',\n  'serious': '严肃',\n  'standing': '站立',\n  'sitting': '坐着',\n  'lying': '躺着',\n  'walking': '行走',\n  'running': '奔跑',\n  'dancing': '跳舞',\n  'jumping': '跳跃',\n  'waving': '挥手',\n  'pointing': '指向',\n  // 场景类\n  'bedroom': '卧室',\n  'classroom': '教室',\n  'office': '办公室',\n  'kitchen': '厨房',\n  'bathroom': '浴室',\n  'library': '图书馆',\n  'cafe': '咖啡厅',\n  'restaurant': '餐厅',\n  'hospital': '医院',\n  'school': '学校',\n  'park': '公园',\n  'beach': '海滩',\n  'forest': '森林',\n  'mountain': '山脉',\n  'city': '城市',\n  'street': '街道',\n  'garden': '花园',\n  'field': '田野',\n  'desert': '沙漠',\n  // 服装类\n  'school uniform': '校服',\n  'casual wear': '休闲装',\n  'formal wear': '正装',\n  'business suit': '商务套装',\n  'dress': '连衣裙',\n  'skirt': '裙子',\n  'shirt': '衬衫',\n  't-shirt': 'T恤',\n  'sweater': '毛衣',\n  'jacket': '夹克',\n  'pants': '裤子',\n  'jeans': '牛仔裤',\n  // 配饰类\n  'glasses': '眼镜',\n  'hat': '帽子',\n  'earrings': '耳环',\n  'necklace': '项链',\n  'bracelet': '手镯',\n  'ring': '戒指',\n  'bag': '包包',\n  'bow': '蝴蝶结',\n  'ribbon': '丝带',\n  // 中文到英文对照\n  '杰作': 'masterpiece',\n  '最佳质量': 'best quality',\n  '超详细': 'ultra detailed',\n  '高分辨率': 'high resolution',\n  '专业级': 'professional',\n  '8K壁纸': '8k wallpaper',\n  '4K': '4k',\n  'HDR': 'hdr',\n  '获奖作品': 'award winning',\n  '热门': 'trending',\n  '完美': 'perfect',\n  '惊艳': 'stunning',\n  '美丽女孩': 'beautiful girl',\n  '可爱女孩': 'cute girl',\n  '英俊男孩': 'handsome boy',\n  '漂亮女性': 'pretty woman',\n  '强壮男性': 'strong man',\n  '优雅女士': 'elegant lady',\n  '可爱': 'cute',\n  '萌': 'kawaii',\n  '美丽': 'beautiful',\n  '英俊': 'handsome',\n  '漂亮': 'pretty',\n  '华丽': 'gorgeous',\n  '迷人': 'charming',\n  '儿童': 'child',\n  '青少年': 'teenager',\n  '青年': 'young adult',\n  '成年人': 'adult',\n  '成熟': 'mature',\n  '老年': 'elderly',\n  '年轻': 'young',\n  '动漫风格': 'anime style',\n  '写实': 'realistic',\n  '照片级写实': 'photorealistic',\n  '油画': 'oil painting',\n  '水彩': 'watercolor',\n  '数字艺术': 'digital art',\n  '素描': 'sketch',\n  '卡通': 'cartoon',\n  '漫画': 'manga',\n  '像素艺术': 'pixel art',\n  '矢量艺术': 'vector art',\n  '电影级光照': 'cinematic lighting',\n  '柔和光照': 'soft lighting',\n  '戏剧性光照': 'dramatic lighting',\n  '黄金时刻': 'golden hour',\n  '自然光照': 'natural lighting',\n  '摄影棚光照': 'studio lighting',\n  '霓虹灯': 'neon lights',\n  '烛光': 'candlelight',\n  '阳光': 'sunlight',\n  '月光': 'moonlight',\n  '背光': 'backlight',\n  '轮廓光': 'rim lighting',\n  '完美构图': 'perfect composition',\n  '动态姿势': 'dynamic pose',\n  '特写': 'close-up',\n  '远景': 'wide shot',\n  '三分法则': 'rule of thirds',\n  '鸟瞰视角': 'bird eye view',\n  '肖像': 'portrait',\n  '全身': 'full body',\n  '上半身': 'upper body',\n  '面部特写': 'face focus',\n  '景深': 'depth of field',\n  '虚化': 'bokeh',\n  '锐利对焦': 'sharp focus',\n  '运动模糊': 'motion blur',\n  '镜头光晕': 'lens flare',\n  '色差': 'chromatic aberration',\n  '胶片颗粒': 'film grain',\n  '暗角': 'vignette',\n  '演员': 'actor',\n  '教师': 'teacher',\n  '科学家': 'scientist',\n  '艺术家': 'artist',\n  '医生': 'doctor',\n  '学生': 'student',\n  '护士': 'nurse',\n  '警察': 'police',\n  '商人': 'businessman',\n  '厨师': 'chef',\n  '音乐家': 'musician',\n  '摄影师': 'photographer',\n  '作家': 'writer',\n  '士兵': 'soldier',\n  '微笑': 'smile',\n  '开心': 'happy',\n  '悲伤': 'sad',\n  '愤怒': 'angry',\n  '惊讶': 'surprised',\n  '困惑': 'confused',\n  '害羞': 'shy',\n  '哭泣': 'crying',\n  '大笑': 'laughing',\n  '严肃': 'serious',\n  '站立': 'standing',\n  '坐着': 'sitting',\n  '躺着': 'lying',\n  '行走': 'walking',\n  '奔跑': 'running',\n  '跳舞': 'dancing',\n  '跳跃': 'jumping',\n  '挥手': 'waving',\n  '指向': 'pointing',\n  '卧室': 'bedroom',\n  '教室': 'classroom',\n  '办公室': 'office',\n  '厨房': 'kitchen',\n  '浴室': 'bathroom',\n  '图书馆': 'library',\n  '咖啡厅': 'cafe',\n  '餐厅': 'restaurant',\n  '医院': 'hospital',\n  '学校': 'school',\n  '公园': 'park',\n  '海滩': 'beach',\n  '森林': 'forest',\n  '山脉': 'mountain',\n  '城市': 'city',\n  '街道': 'street',\n  '花园': 'garden',\n  '田野': 'field',\n  '沙漠': 'desert',\n  '校服': 'school uniform',\n  '休闲装': 'casual wear',\n  '正装': 'formal wear',\n  '商务套装': 'business suit',\n  '连衣裙': 'dress',\n  '裙子': 'skirt',\n  '衬衫': 'shirt',\n  'T恤': 't-shirt',\n  '毛衣': 'sweater',\n  '夹克': 'jacket',\n  '裤子': 'pants',\n  '牛仔裤': 'jeans',\n  '眼镜': 'glasses',\n  '帽子': 'hat',\n  '耳环': 'earrings',\n  '项链': 'necklace',\n  '手镯': 'bracelet',\n  '戒指': 'ring',\n  '包包': 'bag',\n  '蝴蝶结': 'bow',\n  '丝带': 'ribbon'\n};\n\n/**\r\n * 智能翻译单个标签\r\n * @param {string} tag - 要翻译的标签\r\n * @param {string} targetLang - 目标语言\r\n * @returns {string} - 翻译结果\r\n */\nfunction translateSingleTag(tag, targetLang) {\n  const trimmedTag = tag.trim();\n\n  // 处理权重标记 (text:1.2)\n  const weightMatch = trimmedTag.match(/^(.+?):([0-9.]+)$/);\n  if (weightMatch) {\n    const text = weightMatch[1];\n    const weight = weightMatch[2];\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\n    return `${translatedText}:${weight}`;\n  }\n\n  // 处理双括号权重 ((text))\n  const doubleBracketMatch = trimmedTag.match(/^\\(\\((.+?)\\)\\)$/);\n  if (doubleBracketMatch) {\n    const text = doubleBracketMatch[1];\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\n    return `((${translatedText}))`;\n  }\n\n  // 处理单括号权重 (text)\n  const singleBracketMatch = trimmedTag.match(/^\\((.+?)\\)$/);\n  if (singleBracketMatch) {\n    const text = singleBracketMatch[1];\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\n    return `(${translatedText})`;\n  }\n\n  // 处理方括号权重 [text]\n  const squareBracketMatch = trimmedTag.match(/^\\[(.+?)\\]$/);\n  if (squareBracketMatch) {\n    const text = squareBracketMatch[1];\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\n    return `[${translatedText}]`;\n  }\n\n  // 普通翻译\n  return AI_ART_DICTIONARY[trimmedTag.toLowerCase()] || trimmedTag;\n}\n\n/**\r\n * 主翻译函数\r\n * @param {string} text - 要翻译的文本\r\n * @param {string} targetLang - 目标语言，可选 'auto', 'zh', 'en'\r\n * @returns {Promise<string>} - 翻译结果\r\n */\nexport async function translateText(text, targetLang = 'auto') {\n  if (!text || !text.trim()) {\n    return '';\n  }\n  const sourceLang = detectLanguage(text);\n\n  // 自动检测目标语言\n  if (targetLang === 'auto') {\n    targetLang = sourceLang === 'zh' ? 'en' : 'zh';\n  }\n\n  // 如果源语言和目标语言相同，直接返回\n  if (sourceLang === targetLang) {\n    return text;\n  }\n  try {\n    // 分割成标签进行翻译\n    const tags = text.split(/[,，]+/).map(tag => tag.trim()).filter(tag => tag);\n    const translatedTags = tags.map(tag => translateSingleTag(tag, targetLang));\n    return translatedTags.join(', ');\n  } catch (error) {\n    console.error('翻译失败:', error);\n    return text; // 翻译失败时返回原文\n  }\n}\n\n/**\r\n * 翻译单个标签\r\n * @param {string} tag - 要翻译的标签\r\n * @returns {Promise<string>} - 翻译结果\r\n */\nexport async function translateTag(tag) {\n  return translateSingleTag(tag.trim(), 'auto');\n}\n\n/**\r\n * 批量翻译标签\r\n * @param {string[]} tags - 要翻译的标签数组\r\n * @returns {Promise<string[]>} - 翻译结果数组\r\n */\nexport async function translateTags(tags) {\n  return tags.map(tag => translateSingleTag(tag.trim(), 'auto'));\n}\nexport default {\n  translateText,\n  translateTag,\n  translateTags,\n  detectLanguage\n};","map":{"version":3,"names":["ALI_TRANSLATE_CONFIG","BASE_URL","YOUDAO_URL","BAIDU_URL","detectLanguage","text","chineseRegex","test","AI_ART_DICTIONARY","translateSingleTag","tag","targetLang","trimmedTag","trim","weightMatch","match","weight","translatedText","toLowerCase","doubleBracketMatch","singleBracketMatch","squareBracketMatch","translateText","sourceLang","tags","split","map","filter","translatedTags","join","error","console","translateTag","translateTags"],"sources":["C:/Users/wjx19/Documents/GitHub/I-Prompt/src/services/aliTranslationService.js"],"sourcesContent":["/**\r\n * 阿里云翻译服务\r\n * 使用阿里云机器翻译免费API\r\n */\r\n\r\n// 阿里云翻译API配置\r\nconst ALI_TRANSLATE_CONFIG = {\r\n  // 使用阿里云免费翻译API\r\n  BASE_URL: 'https://fanyi.sogou.com/reventondc/synthesis',\r\n  // 备用API - 有道翻译\r\n  YOUDAO_URL: 'https://fanyi.youdao.com/translate_o',\r\n  // 百度翻译\r\n  BAIDU_URL: 'https://fanyi-api.baidu.com/api/trans/vip/translate'\r\n};\r\n\r\n/**\r\n * 检测文本语言\r\n * @param {string} text - 要检测的文本\r\n * @returns {string} - 'zh' 或 'en'\r\n */\r\nexport function detectLanguage(text) {\r\n  // 检测中文字符\r\n  const chineseRegex = /[\\u4e00-\\u9fa5]/;\r\n  return chineseRegex.test(text) ? 'zh' : 'en';\r\n}\r\n\r\n/**\r\n * 专业AI绘画词典\r\n */\r\nconst AI_ART_DICTIONARY = {\r\n  // 英文到中文 - 质量类\r\n  'masterpiece': '杰作',\r\n  'best quality': '最佳质量',\r\n  'ultra detailed': '超详细',\r\n  'high resolution': '高分辨率',\r\n  'professional': '专业级',\r\n  '8k wallpaper': '8K壁纸',\r\n  '4k': '4K',\r\n  'hdr': 'HDR',\r\n  'award winning': '获奖作品',\r\n  'trending': '热门',\r\n  'perfect': '完美',\r\n  'stunning': '惊艳',\r\n  \r\n  // 人物类\r\n  'beautiful girl': '美丽女孩',\r\n  'cute girl': '可爱女孩',\r\n  'handsome boy': '英俊男孩',\r\n  'pretty woman': '漂亮女性',\r\n  'strong man': '强壮男性',\r\n  'elegant lady': '优雅女士',\r\n  'cute': '可爱',\r\n  'kawaii': '萌',\r\n  'beautiful': '美丽',\r\n  'handsome': '英俊',\r\n  'pretty': '漂亮',\r\n  'gorgeous': '华丽',\r\n  'charming': '迷人',\r\n  'lovely': '可爱',\r\n  \r\n  // 年龄相关\r\n  'child': '儿童',\r\n  'teenager': '青少年',\r\n  'young adult': '青年',\r\n  'adult': '成年人',\r\n  'mature': '成熟',\r\n  'elderly': '老年',\r\n  'teen': '青少年',\r\n  'young': '年轻',\r\n  \r\n  // 风格类\r\n  'anime style': '动漫风格',\r\n  'realistic': '写实',\r\n  'photorealistic': '照片级写实',\r\n  'oil painting': '油画',\r\n  'watercolor': '水彩',\r\n  'digital art': '数字艺术',\r\n  'sketch': '素描',\r\n  'cartoon': '卡通',\r\n  'manga': '漫画',\r\n  'pixel art': '像素艺术',\r\n  'vector art': '矢量艺术',\r\n  \r\n  // 光照类\r\n  'cinematic lighting': '电影级光照',\r\n  'soft lighting': '柔和光照',\r\n  'dramatic lighting': '戏剧性光照',\r\n  'golden hour': '黄金时刻',\r\n  'natural lighting': '自然光照',\r\n  'studio lighting': '摄影棚光照',\r\n  'neon lights': '霓虹灯',\r\n  'candlelight': '烛光',\r\n  'sunlight': '阳光',\r\n  'moonlight': '月光',\r\n  'backlight': '背光',\r\n  'rim lighting': '轮廓光',\r\n  \r\n  // 构图类\r\n  'perfect composition': '完美构图',\r\n  'dynamic pose': '动态姿势',\r\n  'close-up': '特写',\r\n  'wide shot': '远景',\r\n  'rule of thirds': '三分法则',\r\n  'bird eye view': '鸟瞰视角',\r\n  'portrait': '肖像',\r\n  'full body': '全身',\r\n  'upper body': '上半身',\r\n  'face focus': '面部特写',\r\n  \r\n  // 效果类\r\n  'depth of field': '景深',\r\n  'bokeh': '虚化',\r\n  'sharp focus': '锐利对焦',\r\n  'motion blur': '运动模糊',\r\n  'lens flare': '镜头光晕',\r\n  'chromatic aberration': '色差',\r\n  'film grain': '胶片颗粒',\r\n  'vignette': '暗角',\r\n  \r\n  // 职业类\r\n  'actor': '演员',\r\n  'teacher': '教师',\r\n  'scientist': '科学家',\r\n  'artist': '艺术家',\r\n  'doctor': '医生',\r\n  'student': '学生',\r\n  'nurse': '护士',\r\n  'police': '警察',\r\n  'businessman': '商人',\r\n  'chef': '厨师',\r\n  'musician': '音乐家',\r\n  'photographer': '摄影师',\r\n  'writer': '作家',\r\n  'soldier': '士兵',\r\n  \r\n  // 表情动作类\r\n  'smile': '微笑',\r\n  'happy': '开心',\r\n  'sad': '悲伤',\r\n  'angry': '愤怒',\r\n  'surprised': '惊讶',\r\n  'confused': '困惑',\r\n  'shy': '害羞',\r\n  'crying': '哭泣',\r\n  'laughing': '大笑',\r\n  'serious': '严肃',\r\n  'standing': '站立',\r\n  'sitting': '坐着',\r\n  'lying': '躺着',\r\n  'walking': '行走',\r\n  'running': '奔跑',\r\n  'dancing': '跳舞',\r\n  'jumping': '跳跃',\r\n  'waving': '挥手',\r\n  'pointing': '指向',\r\n  \r\n  // 场景类\r\n  'bedroom': '卧室',\r\n  'classroom': '教室',\r\n  'office': '办公室',\r\n  'kitchen': '厨房',\r\n  'bathroom': '浴室',\r\n  'library': '图书馆',\r\n  'cafe': '咖啡厅',\r\n  'restaurant': '餐厅',\r\n  'hospital': '医院',\r\n  'school': '学校',\r\n  'park': '公园',\r\n  'beach': '海滩',\r\n  'forest': '森林',\r\n  'mountain': '山脉',\r\n  'city': '城市',\r\n  'street': '街道',\r\n  'garden': '花园',\r\n  'field': '田野',\r\n  'desert': '沙漠',\r\n  \r\n  // 服装类\r\n  'school uniform': '校服',\r\n  'casual wear': '休闲装',\r\n  'formal wear': '正装',\r\n  'business suit': '商务套装',\r\n  'dress': '连衣裙',\r\n  'skirt': '裙子',\r\n  'shirt': '衬衫',\r\n  't-shirt': 'T恤',\r\n  'sweater': '毛衣',\r\n  'jacket': '夹克',\r\n  'pants': '裤子',\r\n  'jeans': '牛仔裤',\r\n  \r\n  // 配饰类\r\n  'glasses': '眼镜',\r\n  'hat': '帽子',\r\n  'earrings': '耳环',\r\n  'necklace': '项链',\r\n  'bracelet': '手镯',\r\n  'ring': '戒指',\r\n  'bag': '包包',\r\n  'bow': '蝴蝶结',\r\n  'ribbon': '丝带',\r\n  \r\n  // 中文到英文对照\r\n  '杰作': 'masterpiece',\r\n  '最佳质量': 'best quality',\r\n  '超详细': 'ultra detailed',\r\n  '高分辨率': 'high resolution',\r\n  '专业级': 'professional',\r\n  '8K壁纸': '8k wallpaper',\r\n  '4K': '4k',\r\n  'HDR': 'hdr',\r\n  '获奖作品': 'award winning',\r\n  '热门': 'trending',\r\n  '完美': 'perfect',\r\n  '惊艳': 'stunning',\r\n  \r\n  '美丽女孩': 'beautiful girl',\r\n  '可爱女孩': 'cute girl',\r\n  '英俊男孩': 'handsome boy',\r\n  '漂亮女性': 'pretty woman',\r\n  '强壮男性': 'strong man',\r\n  '优雅女士': 'elegant lady',\r\n  '可爱': 'cute',\r\n  '萌': 'kawaii',\r\n  '美丽': 'beautiful',\r\n  '英俊': 'handsome',\r\n  '漂亮': 'pretty',\r\n  '华丽': 'gorgeous',\r\n  '迷人': 'charming',\r\n  \r\n  '儿童': 'child',\r\n  '青少年': 'teenager',\r\n  '青年': 'young adult',\r\n  '成年人': 'adult',\r\n  '成熟': 'mature',\r\n  '老年': 'elderly',\r\n  '年轻': 'young',\r\n  \r\n  '动漫风格': 'anime style',\r\n  '写实': 'realistic',\r\n  '照片级写实': 'photorealistic',\r\n  '油画': 'oil painting',\r\n  '水彩': 'watercolor',\r\n  '数字艺术': 'digital art',\r\n  '素描': 'sketch',\r\n  '卡通': 'cartoon',\r\n  '漫画': 'manga',\r\n  '像素艺术': 'pixel art',\r\n  '矢量艺术': 'vector art',\r\n  \r\n  '电影级光照': 'cinematic lighting',\r\n  '柔和光照': 'soft lighting',\r\n  '戏剧性光照': 'dramatic lighting',\r\n  '黄金时刻': 'golden hour',\r\n  '自然光照': 'natural lighting',\r\n  '摄影棚光照': 'studio lighting',\r\n  '霓虹灯': 'neon lights',\r\n  '烛光': 'candlelight',\r\n  '阳光': 'sunlight',\r\n  '月光': 'moonlight',\r\n  '背光': 'backlight',\r\n  '轮廓光': 'rim lighting',\r\n  \r\n  '完美构图': 'perfect composition',\r\n  '动态姿势': 'dynamic pose',\r\n  '特写': 'close-up',\r\n  '远景': 'wide shot',\r\n  '三分法则': 'rule of thirds',\r\n  '鸟瞰视角': 'bird eye view',\r\n  '肖像': 'portrait',\r\n  '全身': 'full body',\r\n  '上半身': 'upper body',\r\n  '面部特写': 'face focus',\r\n  \r\n  '景深': 'depth of field',\r\n  '虚化': 'bokeh',\r\n  '锐利对焦': 'sharp focus',\r\n  '运动模糊': 'motion blur',\r\n  '镜头光晕': 'lens flare',\r\n  '色差': 'chromatic aberration',\r\n  '胶片颗粒': 'film grain',\r\n  '暗角': 'vignette',\r\n  \r\n  '演员': 'actor',\r\n  '教师': 'teacher',\r\n  '科学家': 'scientist',\r\n  '艺术家': 'artist',\r\n  '医生': 'doctor',\r\n  '学生': 'student',\r\n  '护士': 'nurse',\r\n  '警察': 'police',\r\n  '商人': 'businessman',\r\n  '厨师': 'chef',\r\n  '音乐家': 'musician',\r\n  '摄影师': 'photographer',\r\n  '作家': 'writer',\r\n  '士兵': 'soldier',\r\n  \r\n  '微笑': 'smile',\r\n  '开心': 'happy',\r\n  '悲伤': 'sad',\r\n  '愤怒': 'angry',\r\n  '惊讶': 'surprised',\r\n  '困惑': 'confused',\r\n  '害羞': 'shy',\r\n  '哭泣': 'crying',\r\n  '大笑': 'laughing',\r\n  '严肃': 'serious',\r\n  '站立': 'standing',\r\n  '坐着': 'sitting',\r\n  '躺着': 'lying',\r\n  '行走': 'walking',\r\n  '奔跑': 'running',\r\n  '跳舞': 'dancing',\r\n  '跳跃': 'jumping',\r\n  '挥手': 'waving',\r\n  '指向': 'pointing',\r\n  \r\n  '卧室': 'bedroom',\r\n  '教室': 'classroom',\r\n  '办公室': 'office',\r\n  '厨房': 'kitchen',\r\n  '浴室': 'bathroom',\r\n  '图书馆': 'library',\r\n  '咖啡厅': 'cafe',\r\n  '餐厅': 'restaurant',\r\n  '医院': 'hospital',\r\n  '学校': 'school',\r\n  '公园': 'park',\r\n  '海滩': 'beach',\r\n  '森林': 'forest',\r\n  '山脉': 'mountain',\r\n  '城市': 'city',\r\n  '街道': 'street',\r\n  '花园': 'garden',\r\n  '田野': 'field',\r\n  '沙漠': 'desert',\r\n  \r\n  '校服': 'school uniform',\r\n  '休闲装': 'casual wear',\r\n  '正装': 'formal wear',\r\n  '商务套装': 'business suit',\r\n  '连衣裙': 'dress',\r\n  '裙子': 'skirt',\r\n  '衬衫': 'shirt',\r\n  'T恤': 't-shirt',\r\n  '毛衣': 'sweater',\r\n  '夹克': 'jacket',\r\n  '裤子': 'pants',\r\n  '牛仔裤': 'jeans',\r\n  \r\n  '眼镜': 'glasses',\r\n  '帽子': 'hat',\r\n  '耳环': 'earrings',\r\n  '项链': 'necklace',\r\n  '手镯': 'bracelet',\r\n  '戒指': 'ring',\r\n  '包包': 'bag',\r\n  '蝴蝶结': 'bow',\r\n  '丝带': 'ribbon'\r\n};\r\n\r\n/**\r\n * 智能翻译单个标签\r\n * @param {string} tag - 要翻译的标签\r\n * @param {string} targetLang - 目标语言\r\n * @returns {string} - 翻译结果\r\n */\r\nfunction translateSingleTag(tag, targetLang) {\r\n  const trimmedTag = tag.trim();\r\n  \r\n  // 处理权重标记 (text:1.2)\r\n  const weightMatch = trimmedTag.match(/^(.+?):([0-9.]+)$/);\r\n  if (weightMatch) {\r\n    const text = weightMatch[1];\r\n    const weight = weightMatch[2];\r\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\r\n    return `${translatedText}:${weight}`;\r\n  }\r\n  \r\n  // 处理双括号权重 ((text))\r\n  const doubleBracketMatch = trimmedTag.match(/^\\(\\((.+?)\\)\\)$/);\r\n  if (doubleBracketMatch) {\r\n    const text = doubleBracketMatch[1];\r\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\r\n    return `((${translatedText}))`;\r\n  }\r\n  \r\n  // 处理单括号权重 (text)\r\n  const singleBracketMatch = trimmedTag.match(/^\\((.+?)\\)$/);\r\n  if (singleBracketMatch) {\r\n    const text = singleBracketMatch[1];\r\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\r\n    return `(${translatedText})`;\r\n  }\r\n  \r\n  // 处理方括号权重 [text]\r\n  const squareBracketMatch = trimmedTag.match(/^\\[(.+?)\\]$/);\r\n  if (squareBracketMatch) {\r\n    const text = squareBracketMatch[1];\r\n    const translatedText = AI_ART_DICTIONARY[text.toLowerCase()] || text;\r\n    return `[${translatedText}]`;\r\n  }\r\n  \r\n  // 普通翻译\r\n  return AI_ART_DICTIONARY[trimmedTag.toLowerCase()] || trimmedTag;\r\n}\r\n\r\n/**\r\n * 主翻译函数\r\n * @param {string} text - 要翻译的文本\r\n * @param {string} targetLang - 目标语言，可选 'auto', 'zh', 'en'\r\n * @returns {Promise<string>} - 翻译结果\r\n */\r\nexport async function translateText(text, targetLang = 'auto') {\r\n  if (!text || !text.trim()) {\r\n    return '';\r\n  }\r\n\r\n  const sourceLang = detectLanguage(text);\r\n  \r\n  // 自动检测目标语言\r\n  if (targetLang === 'auto') {\r\n    targetLang = sourceLang === 'zh' ? 'en' : 'zh';\r\n  }\r\n  \r\n  // 如果源语言和目标语言相同，直接返回\r\n  if (sourceLang === targetLang) {\r\n    return text;\r\n  }\r\n\r\n  try {\r\n    // 分割成标签进行翻译\r\n    const tags = text.split(/[,，]+/).map(tag => tag.trim()).filter(tag => tag);\r\n    const translatedTags = tags.map(tag => translateSingleTag(tag, targetLang));\r\n    \r\n    return translatedTags.join(', ');\r\n  } catch (error) {\r\n    console.error('翻译失败:', error);\r\n    return text; // 翻译失败时返回原文\r\n  }\r\n}\r\n\r\n/**\r\n * 翻译单个标签\r\n * @param {string} tag - 要翻译的标签\r\n * @returns {Promise<string>} - 翻译结果\r\n */\r\nexport async function translateTag(tag) {\r\n  return translateSingleTag(tag.trim(), 'auto');\r\n}\r\n\r\n/**\r\n * 批量翻译标签\r\n * @param {string[]} tags - 要翻译的标签数组\r\n * @returns {Promise<string[]>} - 翻译结果数组\r\n */\r\nexport async function translateTags(tags) {\r\n  return tags.map(tag => translateSingleTag(tag.trim(), 'auto'));\r\n}\r\n\r\nexport default {\r\n  translateText,\r\n  translateTag,\r\n  translateTags,\r\n  detectLanguage\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}