{"ast":null,"code":"import { APP_CONFIG, ERROR_MESSAGES } from '../constants/config';\n\n/**\n * 验证输入文本\n * @param {string} text - 输入文本\n * @returns {Object} 验证结果\n */\nexport const validateInput = text => {\n  const errors = [];\n  if (!text || text.trim().length === 0) {\n    errors.push(ERROR_MESSAGES.VALIDATION.EMPTY_INPUT);\n  } else if (text.trim().length < APP_CONFIG.MIN_INPUT_LENGTH) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_SHORT);\n  } else if (text.length > APP_CONFIG.MAX_INPUT_LENGTH) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_LONG);\n  }\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * 验证图片文件\n * @param {File} file - 文件对象\n * @returns {Object} 验证结果\n */\nexport const validateImageFile = file => {\n  const errors = [];\n  if (!file) {\n    errors.push(ERROR_MESSAGES.VALIDATION.NO_FILE_SELECTED);\n    return {\n      isValid: false,\n      errors\n    };\n  }\n\n  // 检查文件大小\n  if (file.size > APP_CONFIG.FILE_UPLOAD.MAX_SIZE) {\n    errors.push(ERROR_MESSAGES.VALIDATION.FILE_TOO_LARGE);\n  }\n\n  // 检查文件类型\n  if (!APP_CONFIG.FILE_UPLOAD.ALLOWED_TYPES.includes(file.type)) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);\n  }\n\n  // 检查文件扩展名\n  const fileName = file.name.toLowerCase();\n  const hasValidExtension = APP_CONFIG.FILE_UPLOAD.ALLOWED_EXTENSIONS.some(ext => fileName.endsWith(ext));\n  if (!hasValidExtension) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);\n  }\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * 验证API密钥\n * @param {string} apiKey - API密钥\n * @returns {boolean} 是否有效\n */\nexport const validateApiKey = apiKey => {\n  if (!apiKey || typeof apiKey !== 'string') {\n    return false;\n  }\n\n  // 检查格式（假设API密钥是以 sk- 开头的字符串）\n  return apiKey.startsWith('sk-') && apiKey.length > 10;\n};\n\n/**\n * 验证URL\n * @param {string} url - URL字符串\n * @returns {boolean} 是否有效\n */\nexport const validateUrl = url => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * 清理和格式化提示词\n * @param {string} prompt - 原始提示词\n * @returns {string} 清理后的提示词\n */\nexport const cleanPrompt = prompt => {\n  if (!prompt || typeof prompt !== 'string') {\n    return '';\n  }\n  return prompt.trim().replace(/\\s+/g, ' ') // 多个空格替换为单个空格\n  .replace(/[，。！？；：]/g, ',') // 中文标点替换为英文逗号\n  .replace(/,+/g, ',') // 多个逗号替换为单个逗号\n  .replace(/^,|,$/g, ''); // 移除首尾逗号\n};\n\n/**\n * 验证邮箱格式\n * @param {string} email 邮箱地址\n * @returns {boolean} 是否有效\n */\nexport const validateEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};","map":{"version":3,"names":["APP_CONFIG","ERROR_MESSAGES","validateInput","text","errors","trim","length","push","VALIDATION","EMPTY_INPUT","MIN_INPUT_LENGTH","INPUT_TOO_SHORT","MAX_INPUT_LENGTH","INPUT_TOO_LONG","isValid","validateImageFile","file","NO_FILE_SELECTED","size","FILE_UPLOAD","MAX_SIZE","FILE_TOO_LARGE","ALLOWED_TYPES","includes","type","INVALID_FILE_TYPE","fileName","name","toLowerCase","hasValidExtension","ALLOWED_EXTENSIONS","some","ext","endsWith","validateApiKey","apiKey","startsWith","validateUrl","url","URL","cleanPrompt","prompt","replace","validateEmail","email","emailRegex","test"],"sources":["C:/Users/wjx19/Documents/GitHub/I-Prompt/src/utils/validation.js"],"sourcesContent":["import { APP_CONFIG, ERROR_MESSAGES } from '../constants/config';\n\n/**\n * 验证输入文本\n * @param {string} text - 输入文本\n * @returns {Object} 验证结果\n */\nexport const validateInput = (text) => {\n  const errors = [];\n  \n  if (!text || text.trim().length === 0) {\n    errors.push(ERROR_MESSAGES.VALIDATION.EMPTY_INPUT);\n  } else if (text.trim().length < APP_CONFIG.MIN_INPUT_LENGTH) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_SHORT);\n  } else if (text.length > APP_CONFIG.MAX_INPUT_LENGTH) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INPUT_TOO_LONG);\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * 验证图片文件\n * @param {File} file - 文件对象\n * @returns {Object} 验证结果\n */\nexport const validateImageFile = (file) => {\n  const errors = [];\n  \n  if (!file) {\n    errors.push(ERROR_MESSAGES.VALIDATION.NO_FILE_SELECTED);\n    return { isValid: false, errors };\n  }\n  \n  // 检查文件大小\n  if (file.size > APP_CONFIG.FILE_UPLOAD.MAX_SIZE) {\n    errors.push(ERROR_MESSAGES.VALIDATION.FILE_TOO_LARGE);\n  }\n  \n  // 检查文件类型\n  if (!APP_CONFIG.FILE_UPLOAD.ALLOWED_TYPES.includes(file.type)) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);\n  }\n  \n  // 检查文件扩展名\n  const fileName = file.name.toLowerCase();\n  const hasValidExtension = APP_CONFIG.FILE_UPLOAD.ALLOWED_EXTENSIONS.some(ext => \n    fileName.endsWith(ext)\n  );\n  \n  if (!hasValidExtension) {\n    errors.push(ERROR_MESSAGES.VALIDATION.INVALID_FILE_TYPE);\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * 验证API密钥\n * @param {string} apiKey - API密钥\n * @returns {boolean} 是否有效\n */\nexport const validateApiKey = (apiKey) => {\n  if (!apiKey || typeof apiKey !== 'string') {\n    return false;\n  }\n  \n  // 检查格式（假设API密钥是以 sk- 开头的字符串）\n  return apiKey.startsWith('sk-') && apiKey.length > 10;\n};\n\n/**\n * 验证URL\n * @param {string} url - URL字符串\n * @returns {boolean} 是否有效\n */\nexport const validateUrl = (url) => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * 清理和格式化提示词\n * @param {string} prompt - 原始提示词\n * @returns {string} 清理后的提示词\n */\nexport const cleanPrompt = (prompt) => {\n  if (!prompt || typeof prompt !== 'string') {\n    return '';\n  }\n  \n  return prompt\n    .trim()\n    .replace(/\\s+/g, ' ') // 多个空格替换为单个空格\n    .replace(/[，。！？；：]/g, ',') // 中文标点替换为英文逗号\n    .replace(/,+/g, ',') // 多个逗号替换为单个逗号\n    .replace(/^,|,$/g, ''); // 移除首尾逗号\n};\n\n/**\n * 验证邮箱格式\n * @param {string} email 邮箱地址\n * @returns {boolean} 是否有效\n */\nexport const validateEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}