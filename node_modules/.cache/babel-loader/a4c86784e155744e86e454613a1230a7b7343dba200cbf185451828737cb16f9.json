{"ast":null,"code":"/**\n * 复制文本到剪贴板\n * @param {string} text - 要复制的文本\n * @returns {Promise<boolean>} 复制是否成功\n */export const copyToClipboard=async text=>{try{// 优先使用现代 Clipboard API\nif(navigator.clipboard&&window.isSecureContext){await navigator.clipboard.writeText(text);return true;}// 降级方案：使用 execCommand\nconst textArea=document.createElement('textarea');textArea.value=text;textArea.style.position='fixed';textArea.style.opacity='0';textArea.style.pointerEvents='none';document.body.appendChild(textArea);textArea.focus();textArea.select();const success=document.execCommand('copy');document.body.removeChild(textArea);return success;}catch(error){console.error('复制失败:',error);return false;}};/**\n * 从剪贴板读取文本\n * @returns {Promise<string|null>} 剪贴板中的文本\n */export const readFromClipboard=async()=>{try{if(navigator.clipboard&&window.isSecureContext){const text=await navigator.clipboard.readText();return text;}return null;}catch(error){console.error('读取剪贴板失败:',error);return null;}};","map":{"version":3,"names":["copyToClipboard","text","navigator","clipboard","window","isSecureContext","writeText","textArea","document","createElement","value","style","position","opacity","pointerEvents","body","appendChild","focus","select","success","execCommand","removeChild","error","console","readFromClipboard","readText"],"sources":["C:/Users/wjx19/Documents/GitHub/I-Prompt/src/utils/clipboard.js"],"sourcesContent":["/**\n * 复制文本到剪贴板\n * @param {string} text - 要复制的文本\n * @returns {Promise<boolean>} 复制是否成功\n */\nexport const copyToClipboard = async (text) => {\n  try {\n    // 优先使用现代 Clipboard API\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return true;\n    }\n    \n    // 降级方案：使用 execCommand\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    textArea.style.position = 'fixed';\n    textArea.style.opacity = '0';\n    textArea.style.pointerEvents = 'none';\n    document.body.appendChild(textArea);\n    \n    textArea.focus();\n    textArea.select();\n    \n    const success = document.execCommand('copy');\n    document.body.removeChild(textArea);\n    \n    return success;\n  } catch (error) {\n    console.error('复制失败:', error);\n    return false;\n  }\n};\n\n/**\n * 从剪贴板读取文本\n * @returns {Promise<string|null>} 剪贴板中的文本\n */\nexport const readFromClipboard = async () => {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      const text = await navigator.clipboard.readText();\n      return text;\n    }\n    return null;\n  } catch (error) {\n    console.error('读取剪贴板失败:', error);\n    return null;\n  }\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,eAAe,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC7C,GAAI,CACF;AACA,GAAIC,SAAS,CAACC,SAAS,EAAIC,MAAM,CAACC,eAAe,CAAE,CACjD,KAAM,CAAAH,SAAS,CAACC,SAAS,CAACG,SAAS,CAACL,IAAI,CAAC,CACzC,MAAO,KAAI,CACb,CAEA;AACA,KAAM,CAAAM,QAAQ,CAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CACnDF,QAAQ,CAACG,KAAK,CAAGT,IAAI,CACrBM,QAAQ,CAACI,KAAK,CAACC,QAAQ,CAAG,OAAO,CACjCL,QAAQ,CAACI,KAAK,CAACE,OAAO,CAAG,GAAG,CAC5BN,QAAQ,CAACI,KAAK,CAACG,aAAa,CAAG,MAAM,CACrCN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,QAAQ,CAAC,CAEnCA,QAAQ,CAACU,KAAK,CAAC,CAAC,CAChBV,QAAQ,CAACW,MAAM,CAAC,CAAC,CAEjB,KAAM,CAAAC,OAAO,CAAGX,QAAQ,CAACY,WAAW,CAAC,MAAM,CAAC,CAC5CZ,QAAQ,CAACO,IAAI,CAACM,WAAW,CAACd,QAAQ,CAAC,CAEnC,MAAO,CAAAY,OAAO,CAChB,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,OAAO,CAAEA,KAAK,CAAC,CAC7B,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAE,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACF,GAAItB,SAAS,CAACC,SAAS,EAAIC,MAAM,CAACC,eAAe,CAAE,CACjD,KAAM,CAAAJ,IAAI,CAAG,KAAM,CAAAC,SAAS,CAACC,SAAS,CAACsB,QAAQ,CAAC,CAAC,CACjD,MAAO,CAAAxB,IAAI,CACb,CACA,MAAO,KAAI,CACb,CAAE,MAAOqB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,UAAU,CAAEA,KAAK,CAAC,CAChC,MAAO,KAAI,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}