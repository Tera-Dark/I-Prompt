{"ast":null,"code":"/**\n * 复制文本到剪贴板\n * @param {string} text - 要复制的文本\n * @returns {Promise<boolean>} 复制是否成功\n */\nexport const copyToClipboard = async text => {\n  try {\n    // 优先使用现代 Clipboard API\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return true;\n    }\n\n    // 降级方案：使用 execCommand\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    textArea.style.position = 'fixed';\n    textArea.style.opacity = '0';\n    textArea.style.pointerEvents = 'none';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    const success = document.execCommand('copy');\n    document.body.removeChild(textArea);\n    return success;\n  } catch (error) {\n    console.error('复制失败:', error);\n    return false;\n  }\n};\n\n/**\n * 从剪贴板读取文本\n * @returns {Promise<string|null>} 剪贴板中的文本\n */\nexport const readFromClipboard = async () => {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      const text = await navigator.clipboard.readText();\n      return text;\n    }\n    return null;\n  } catch (error) {\n    console.error('读取剪贴板失败:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["copyToClipboard","text","navigator","clipboard","window","isSecureContext","writeText","textArea","document","createElement","value","style","position","opacity","pointerEvents","body","appendChild","focus","select","success","execCommand","removeChild","error","console","readFromClipboard","readText"],"sources":["C:/Users/wjx19/Documents/GitHub/I-Prompt/src/utils/clipboard.js"],"sourcesContent":["/**\n * 复制文本到剪贴板\n * @param {string} text - 要复制的文本\n * @returns {Promise<boolean>} 复制是否成功\n */\nexport const copyToClipboard = async (text) => {\n  try {\n    // 优先使用现代 Clipboard API\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return true;\n    }\n    \n    // 降级方案：使用 execCommand\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    textArea.style.position = 'fixed';\n    textArea.style.opacity = '0';\n    textArea.style.pointerEvents = 'none';\n    document.body.appendChild(textArea);\n    \n    textArea.focus();\n    textArea.select();\n    \n    const success = document.execCommand('copy');\n    document.body.removeChild(textArea);\n    \n    return success;\n  } catch (error) {\n    console.error('复制失败:', error);\n    return false;\n  }\n};\n\n/**\n * 从剪贴板读取文本\n * @returns {Promise<string|null>} 剪贴板中的文本\n */\nexport const readFromClipboard = async () => {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      const text = await navigator.clipboard.readText();\n      return text;\n    }\n    return null;\n  } catch (error) {\n    console.error('读取剪贴板失败:', error);\n    return null;\n  }\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACF;IACA,IAAIC,SAAS,CAACC,SAAS,IAAIC,MAAM,CAACC,eAAe,EAAE;MACjD,MAAMH,SAAS,CAACC,SAAS,CAACG,SAAS,CAACL,IAAI,CAAC;MACzC,OAAO,IAAI;IACb;;IAEA;IACA,MAAMM,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IACnDF,QAAQ,CAACG,KAAK,GAAGT,IAAI;IACrBM,QAAQ,CAACI,KAAK,CAACC,QAAQ,GAAG,OAAO;IACjCL,QAAQ,CAACI,KAAK,CAACE,OAAO,GAAG,GAAG;IAC5BN,QAAQ,CAACI,KAAK,CAACG,aAAa,GAAG,MAAM;IACrCN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,QAAQ,CAAC;IAEnCA,QAAQ,CAACU,KAAK,CAAC,CAAC;IAChBV,QAAQ,CAACW,MAAM,CAAC,CAAC;IAEjB,MAAMC,OAAO,GAAGX,QAAQ,CAACY,WAAW,CAAC,MAAM,CAAC;IAC5CZ,QAAQ,CAACO,IAAI,CAACM,WAAW,CAACd,QAAQ,CAAC;IAEnC,OAAOY,OAAO;EAChB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC7B,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,IAAItB,SAAS,CAACC,SAAS,IAAIC,MAAM,CAACC,eAAe,EAAE;MACjD,MAAMJ,IAAI,GAAG,MAAMC,SAAS,CAACC,SAAS,CAACsB,QAAQ,CAAC,CAAC;MACjD,OAAOxB,IAAI;IACb;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOqB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAChC,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}