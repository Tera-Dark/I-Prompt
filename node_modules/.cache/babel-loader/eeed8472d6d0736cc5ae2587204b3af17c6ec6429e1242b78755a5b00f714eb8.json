{"ast":null,"code":"/* piexifjs\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014, 2015 hMatoba(https://github.com/hMatoba)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\n\n(function () {\n  \"use strict\";\n\n  var that = {};\n  that.version = \"1.0.4\";\n  that.remove = function (jpeg) {\n    var b64 = false;\n    if (jpeg.slice(0, 2) == \"\\xff\\xd8\") {} else if (jpeg.slice(0, 23) == \"data:image/jpeg;base64,\" || jpeg.slice(0, 22) == \"data:image/jpg;base64,\") {\n      jpeg = atob(jpeg.split(\",\")[1]);\n      b64 = true;\n    } else {\n      throw new Error(\"Given data is not jpeg.\");\n    }\n    var segments = splitIntoSegments(jpeg);\n    var newSegments = segments.filter(function (seg) {\n      return !(seg.slice(0, 2) == \"\\xff\\xe1\" && seg.slice(4, 10) == \"Exif\\x00\\x00\");\n    });\n    var new_data = newSegments.join(\"\");\n    if (b64) {\n      new_data = \"data:image/jpeg;base64,\" + btoa(new_data);\n    }\n    return new_data;\n  };\n  that.insert = function (exif, jpeg) {\n    var b64 = false;\n    if (exif.slice(0, 6) != \"\\x45\\x78\\x69\\x66\\x00\\x00\") {\n      throw new Error(\"Given data is not exif.\");\n    }\n    if (jpeg.slice(0, 2) == \"\\xff\\xd8\") {} else if (jpeg.slice(0, 23) == \"data:image/jpeg;base64,\" || jpeg.slice(0, 22) == \"data:image/jpg;base64,\") {\n      jpeg = atob(jpeg.split(\",\")[1]);\n      b64 = true;\n    } else {\n      throw new Error(\"Given data is not jpeg.\");\n    }\n    var exifStr = \"\\xff\\xe1\" + pack(\">H\", [exif.length + 2]) + exif;\n    var segments = splitIntoSegments(jpeg);\n    var new_data = mergeSegments(segments, exifStr);\n    if (b64) {\n      new_data = \"data:image/jpeg;base64,\" + btoa(new_data);\n    }\n    return new_data;\n  };\n  that.load = function (data) {\n    var input_data;\n    if (typeof data == \"string\") {\n      if (data.slice(0, 2) == \"\\xff\\xd8\") {\n        input_data = data;\n      } else if (data.slice(0, 23) == \"data:image/jpeg;base64,\" || data.slice(0, 22) == \"data:image/jpg;base64,\") {\n        input_data = atob(data.split(\",\")[1]);\n      } else if (data.slice(0, 4) == \"Exif\") {\n        input_data = data.slice(6);\n      } else {\n        throw new Error(\"'load' gots invalid file data.\");\n      }\n    } else {\n      throw new Error(\"'load' gots invalid type argument.\");\n    }\n    var exifDict = {};\n    var exif_dict = {\n      \"0th\": {},\n      \"Exif\": {},\n      \"GPS\": {},\n      \"Interop\": {},\n      \"1st\": {},\n      \"thumbnail\": null\n    };\n    var exifReader = new ExifReader(input_data);\n    if (exifReader.tiftag === null) {\n      return exif_dict;\n    }\n    if (exifReader.tiftag.slice(0, 2) == \"\\x49\\x49\") {\n      exifReader.endian_mark = \"<\";\n    } else {\n      exifReader.endian_mark = \">\";\n    }\n    var pointer = unpack(exifReader.endian_mark + \"L\", exifReader.tiftag.slice(4, 8))[0];\n    exif_dict[\"0th\"] = exifReader.get_ifd(pointer, \"0th\");\n    var first_ifd_pointer = exif_dict[\"0th\"][\"first_ifd_pointer\"];\n    delete exif_dict[\"0th\"][\"first_ifd_pointer\"];\n    if (34665 in exif_dict[\"0th\"]) {\n      pointer = exif_dict[\"0th\"][34665];\n      exif_dict[\"Exif\"] = exifReader.get_ifd(pointer, \"Exif\");\n    }\n    if (34853 in exif_dict[\"0th\"]) {\n      pointer = exif_dict[\"0th\"][34853];\n      exif_dict[\"GPS\"] = exifReader.get_ifd(pointer, \"GPS\");\n    }\n    if (40965 in exif_dict[\"Exif\"]) {\n      pointer = exif_dict[\"Exif\"][40965];\n      exif_dict[\"Interop\"] = exifReader.get_ifd(pointer, \"Interop\");\n    }\n    if (first_ifd_pointer != \"\\x00\\x00\\x00\\x00\") {\n      pointer = unpack(exifReader.endian_mark + \"L\", first_ifd_pointer)[0];\n      exif_dict[\"1st\"] = exifReader.get_ifd(pointer, \"1st\");\n      if (513 in exif_dict[\"1st\"] && 514 in exif_dict[\"1st\"]) {\n        var end = exif_dict[\"1st\"][513] + exif_dict[\"1st\"][514];\n        var thumb = exifReader.tiftag.slice(exif_dict[\"1st\"][513], end);\n        exif_dict[\"thumbnail\"] = thumb;\n      }\n    }\n    return exif_dict;\n  };\n  that.dump = function (exif_dict_original) {\n    var TIFF_HEADER_LENGTH = 8;\n    var exif_dict = copy(exif_dict_original);\n    var header = \"Exif\\x00\\x00\\x4d\\x4d\\x00\\x2a\\x00\\x00\\x00\\x08\";\n    var exif_is = false;\n    var gps_is = false;\n    var interop_is = false;\n    var first_is = false;\n    var zeroth_ifd, exif_ifd, interop_ifd, gps_ifd, first_ifd;\n    if (\"0th\" in exif_dict) {\n      zeroth_ifd = exif_dict[\"0th\"];\n    } else {\n      zeroth_ifd = {};\n    }\n    if (\"Exif\" in exif_dict && Object.keys(exif_dict[\"Exif\"]).length || \"Interop\" in exif_dict && Object.keys(exif_dict[\"Interop\"]).length) {\n      zeroth_ifd[34665] = 1;\n      exif_is = true;\n      exif_ifd = exif_dict[\"Exif\"];\n      if (\"Interop\" in exif_dict && Object.keys(exif_dict[\"Interop\"]).length) {\n        exif_ifd[40965] = 1;\n        interop_is = true;\n        interop_ifd = exif_dict[\"Interop\"];\n      } else if (Object.keys(exif_ifd).indexOf(that.ExifIFD.InteroperabilityTag.toString()) > -1) {\n        delete exif_ifd[40965];\n      }\n    } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.ExifTag.toString()) > -1) {\n      delete zeroth_ifd[34665];\n    }\n    if (\"GPS\" in exif_dict && Object.keys(exif_dict[\"GPS\"]).length) {\n      zeroth_ifd[that.ImageIFD.GPSTag] = 1;\n      gps_is = true;\n      gps_ifd = exif_dict[\"GPS\"];\n    } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.GPSTag.toString()) > -1) {\n      delete zeroth_ifd[that.ImageIFD.GPSTag];\n    }\n    if (\"1st\" in exif_dict && \"thumbnail\" in exif_dict && exif_dict[\"thumbnail\"] != null) {\n      first_is = true;\n      exif_dict[\"1st\"][513] = 1;\n      exif_dict[\"1st\"][514] = 1;\n      first_ifd = exif_dict[\"1st\"];\n    }\n    var zeroth_set = _dict_to_bytes(zeroth_ifd, \"0th\", 0);\n    var zeroth_length = zeroth_set[0].length + exif_is * 12 + gps_is * 12 + 4 + zeroth_set[1].length;\n    var exif_set,\n      exif_bytes = \"\",\n      exif_length = 0,\n      gps_set,\n      gps_bytes = \"\",\n      gps_length = 0,\n      interop_set,\n      interop_bytes = \"\",\n      interop_length = 0,\n      first_set,\n      first_bytes = \"\",\n      thumbnail;\n    if (exif_is) {\n      exif_set = _dict_to_bytes(exif_ifd, \"Exif\", zeroth_length);\n      exif_length = exif_set[0].length + interop_is * 12 + exif_set[1].length;\n    }\n    if (gps_is) {\n      gps_set = _dict_to_bytes(gps_ifd, \"GPS\", zeroth_length + exif_length);\n      gps_bytes = gps_set.join(\"\");\n      gps_length = gps_bytes.length;\n    }\n    if (interop_is) {\n      var offset = zeroth_length + exif_length + gps_length;\n      interop_set = _dict_to_bytes(interop_ifd, \"Interop\", offset);\n      interop_bytes = interop_set.join(\"\");\n      interop_length = interop_bytes.length;\n    }\n    if (first_is) {\n      var offset = zeroth_length + exif_length + gps_length + interop_length;\n      first_set = _dict_to_bytes(first_ifd, \"1st\", offset);\n      thumbnail = _get_thumbnail(exif_dict[\"thumbnail\"]);\n      if (thumbnail.length > 64000) {\n        throw new Error(\"Given thumbnail is too large. max 64kB\");\n      }\n    }\n    var exif_pointer = \"\",\n      gps_pointer = \"\",\n      interop_pointer = \"\",\n      first_ifd_pointer = \"\\x00\\x00\\x00\\x00\";\n    if (exif_is) {\n      var pointer_value = TIFF_HEADER_LENGTH + zeroth_length;\n      var pointer_str = pack(\">L\", [pointer_value]);\n      var key = 34665;\n      var key_str = pack(\">H\", [key]);\n      var type_str = pack(\">H\", [TYPES[\"Long\"]]);\n      var length_str = pack(\">L\", [1]);\n      exif_pointer = key_str + type_str + length_str + pointer_str;\n    }\n    if (gps_is) {\n      var pointer_value = TIFF_HEADER_LENGTH + zeroth_length + exif_length;\n      var pointer_str = pack(\">L\", [pointer_value]);\n      var key = 34853;\n      var key_str = pack(\">H\", [key]);\n      var type_str = pack(\">H\", [TYPES[\"Long\"]]);\n      var length_str = pack(\">L\", [1]);\n      gps_pointer = key_str + type_str + length_str + pointer_str;\n    }\n    if (interop_is) {\n      var pointer_value = TIFF_HEADER_LENGTH + zeroth_length + exif_length + gps_length;\n      var pointer_str = pack(\">L\", [pointer_value]);\n      var key = 40965;\n      var key_str = pack(\">H\", [key]);\n      var type_str = pack(\">H\", [TYPES[\"Long\"]]);\n      var length_str = pack(\">L\", [1]);\n      interop_pointer = key_str + type_str + length_str + pointer_str;\n    }\n    if (first_is) {\n      var pointer_value = TIFF_HEADER_LENGTH + zeroth_length + exif_length + gps_length + interop_length;\n      first_ifd_pointer = pack(\">L\", [pointer_value]);\n      var thumbnail_pointer = pointer_value + first_set[0].length + 24 + 4 + first_set[1].length;\n      var thumbnail_p_bytes = \"\\x02\\x01\\x00\\x04\\x00\\x00\\x00\\x01\" + pack(\">L\", [thumbnail_pointer]);\n      var thumbnail_length_bytes = \"\\x02\\x02\\x00\\x04\\x00\\x00\\x00\\x01\" + pack(\">L\", [thumbnail.length]);\n      first_bytes = first_set[0] + thumbnail_p_bytes + thumbnail_length_bytes + \"\\x00\\x00\\x00\\x00\" + first_set[1] + thumbnail;\n    }\n    var zeroth_bytes = zeroth_set[0] + exif_pointer + gps_pointer + first_ifd_pointer + zeroth_set[1];\n    if (exif_is) {\n      exif_bytes = exif_set[0] + interop_pointer + exif_set[1];\n    }\n    return header + zeroth_bytes + exif_bytes + gps_bytes + interop_bytes + first_bytes;\n  };\n  function copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  function _get_thumbnail(jpeg) {\n    var segments = splitIntoSegments(jpeg);\n    while (\"\\xff\\xe0\" <= segments[1].slice(0, 2) && segments[1].slice(0, 2) <= \"\\xff\\xef\") {\n      segments = [segments[0]].concat(segments.slice(2));\n    }\n    return segments.join(\"\");\n  }\n  function _pack_byte(array) {\n    return pack(\">\" + nStr(\"B\", array.length), array);\n  }\n  function _pack_short(array) {\n    return pack(\">\" + nStr(\"H\", array.length), array);\n  }\n  function _pack_long(array) {\n    return pack(\">\" + nStr(\"L\", array.length), array);\n  }\n  function _value_to_bytes(raw_value, value_type, offset) {\n    var four_bytes_over = \"\";\n    var value_str = \"\";\n    var length, new_value, num, den;\n    if (value_type == \"Byte\") {\n      length = raw_value.length;\n      if (length <= 4) {\n        value_str = _pack_byte(raw_value) + nStr(\"\\x00\", 4 - length);\n      } else {\n        value_str = pack(\">L\", [offset]);\n        four_bytes_over = _pack_byte(raw_value);\n      }\n    } else if (value_type == \"Short\") {\n      length = raw_value.length;\n      if (length <= 2) {\n        value_str = _pack_short(raw_value) + nStr(\"\\x00\\x00\", 2 - length);\n      } else {\n        value_str = pack(\">L\", [offset]);\n        four_bytes_over = _pack_short(raw_value);\n      }\n    } else if (value_type == \"Long\") {\n      length = raw_value.length;\n      if (length <= 1) {\n        value_str = _pack_long(raw_value);\n      } else {\n        value_str = pack(\">L\", [offset]);\n        four_bytes_over = _pack_long(raw_value);\n      }\n    } else if (value_type == \"Ascii\") {\n      new_value = raw_value + \"\\x00\";\n      length = new_value.length;\n      if (length > 4) {\n        value_str = pack(\">L\", [offset]);\n        four_bytes_over = new_value;\n      } else {\n        value_str = new_value + nStr(\"\\x00\", 4 - length);\n      }\n    } else if (value_type == \"Rational\") {\n      if (typeof raw_value[0] == \"number\") {\n        length = 1;\n        num = raw_value[0];\n        den = raw_value[1];\n        new_value = pack(\">L\", [num]) + pack(\">L\", [den]);\n      } else {\n        length = raw_value.length;\n        new_value = \"\";\n        for (var n = 0; n < length; n++) {\n          num = raw_value[n][0];\n          den = raw_value[n][1];\n          new_value += pack(\">L\", [num]) + pack(\">L\", [den]);\n        }\n      }\n      value_str = pack(\">L\", [offset]);\n      four_bytes_over = new_value;\n    } else if (value_type == \"SRational\") {\n      if (typeof raw_value[0] == \"number\") {\n        length = 1;\n        num = raw_value[0];\n        den = raw_value[1];\n        new_value = pack(\">l\", [num]) + pack(\">l\", [den]);\n      } else {\n        length = raw_value.length;\n        new_value = \"\";\n        for (var n = 0; n < length; n++) {\n          num = raw_value[n][0];\n          den = raw_value[n][1];\n          new_value += pack(\">l\", [num]) + pack(\">l\", [den]);\n        }\n      }\n      value_str = pack(\">L\", [offset]);\n      four_bytes_over = new_value;\n    } else if (value_type == \"Undefined\") {\n      length = raw_value.length;\n      if (length > 4) {\n        value_str = pack(\">L\", [offset]);\n        four_bytes_over = raw_value;\n      } else {\n        value_str = raw_value + nStr(\"\\x00\", 4 - length);\n      }\n    }\n    var length_str = pack(\">L\", [length]);\n    return [length_str, value_str, four_bytes_over];\n  }\n  function _dict_to_bytes(ifd_dict, ifd, ifd_offset) {\n    var TIFF_HEADER_LENGTH = 8;\n    var tag_count = Object.keys(ifd_dict).length;\n    var entry_header = pack(\">H\", [tag_count]);\n    var entries_length;\n    if ([\"0th\", \"1st\"].indexOf(ifd) > -1) {\n      entries_length = 2 + tag_count * 12 + 4;\n    } else {\n      entries_length = 2 + tag_count * 12;\n    }\n    var entries = \"\";\n    var values = \"\";\n    var key;\n    for (var key in ifd_dict) {\n      if (typeof key == \"string\") {\n        key = parseInt(key);\n      }\n      if (ifd == \"0th\" && [34665, 34853].indexOf(key) > -1) {\n        continue;\n      } else if (ifd == \"Exif\" && key == 40965) {\n        continue;\n      } else if (ifd == \"1st\" && [513, 514].indexOf(key) > -1) {\n        continue;\n      }\n      var raw_value = ifd_dict[key];\n      var key_str = pack(\">H\", [key]);\n      var value_type = TAGS[ifd][key][\"type\"];\n      var type_str = pack(\">H\", [TYPES[value_type]]);\n      if (typeof raw_value == \"number\") {\n        raw_value = [raw_value];\n      }\n      var offset = TIFF_HEADER_LENGTH + entries_length + ifd_offset + values.length;\n      var b = _value_to_bytes(raw_value, value_type, offset);\n      var length_str = b[0];\n      var value_str = b[1];\n      var four_bytes_over = b[2];\n      entries += key_str + type_str + length_str + value_str;\n      values += four_bytes_over;\n    }\n    return [entry_header + entries, values];\n  }\n  function ExifReader(data) {\n    var segments, app1;\n    if (data.slice(0, 2) == \"\\xff\\xd8\") {\n      // JPEG\n      segments = splitIntoSegments(data);\n      app1 = getExifSeg(segments);\n      if (app1) {\n        this.tiftag = app1.slice(10);\n      } else {\n        this.tiftag = null;\n      }\n    } else if ([\"\\x49\\x49\", \"\\x4d\\x4d\"].indexOf(data.slice(0, 2)) > -1) {\n      // TIFF\n      this.tiftag = data;\n    } else if (data.slice(0, 4) == \"Exif\") {\n      // Exif\n      this.tiftag = data.slice(6);\n    } else {\n      throw new Error(\"Given file is neither JPEG nor TIFF.\");\n    }\n  }\n  ExifReader.prototype = {\n    get_ifd: function (pointer, ifd_name) {\n      var ifd_dict = {};\n      var tag_count = unpack(this.endian_mark + \"H\", this.tiftag.slice(pointer, pointer + 2))[0];\n      var offset = pointer + 2;\n      var t;\n      if ([\"0th\", \"1st\"].indexOf(ifd_name) > -1) {\n        t = \"Image\";\n      } else {\n        t = ifd_name;\n      }\n      for (var x = 0; x < tag_count; x++) {\n        pointer = offset + 12 * x;\n        var tag = unpack(this.endian_mark + \"H\", this.tiftag.slice(pointer, pointer + 2))[0];\n        var value_type = unpack(this.endian_mark + \"H\", this.tiftag.slice(pointer + 2, pointer + 4))[0];\n        var value_num = unpack(this.endian_mark + \"L\", this.tiftag.slice(pointer + 4, pointer + 8))[0];\n        var value = this.tiftag.slice(pointer + 8, pointer + 12);\n        var v_set = [value_type, value_num, value];\n        if (tag in TAGS[t]) {\n          ifd_dict[tag] = this.convert_value(v_set);\n        }\n      }\n      if (ifd_name == \"0th\") {\n        pointer = offset + 12 * tag_count;\n        ifd_dict[\"first_ifd_pointer\"] = this.tiftag.slice(pointer, pointer + 4);\n      }\n      return ifd_dict;\n    },\n    convert_value: function (val) {\n      var data = null;\n      var t = val[0];\n      var length = val[1];\n      var value = val[2];\n      var pointer;\n      if (t == 1) {\n        // BYTE\n        if (length > 4) {\n          pointer = unpack(this.endian_mark + \"L\", value)[0];\n          data = unpack(this.endian_mark + nStr(\"B\", length), this.tiftag.slice(pointer, pointer + length));\n        } else {\n          data = unpack(this.endian_mark + nStr(\"B\", length), value.slice(0, length));\n        }\n      } else if (t == 2) {\n        // ASCII\n        if (length > 4) {\n          pointer = unpack(this.endian_mark + \"L\", value)[0];\n          data = this.tiftag.slice(pointer, pointer + length - 1);\n        } else {\n          data = value.slice(0, length - 1);\n        }\n      } else if (t == 3) {\n        // SHORT\n        if (length > 2) {\n          pointer = unpack(this.endian_mark + \"L\", value)[0];\n          data = unpack(this.endian_mark + nStr(\"H\", length), this.tiftag.slice(pointer, pointer + length * 2));\n        } else {\n          data = unpack(this.endian_mark + nStr(\"H\", length), value.slice(0, length * 2));\n        }\n      } else if (t == 4) {\n        // LONG\n        if (length > 1) {\n          pointer = unpack(this.endian_mark + \"L\", value)[0];\n          data = unpack(this.endian_mark + nStr(\"L\", length), this.tiftag.slice(pointer, pointer + length * 4));\n        } else {\n          data = unpack(this.endian_mark + nStr(\"L\", length), value);\n        }\n      } else if (t == 5) {\n        // RATIONAL\n        pointer = unpack(this.endian_mark + \"L\", value)[0];\n        if (length > 1) {\n          data = [];\n          for (var x = 0; x < length; x++) {\n            data.push([unpack(this.endian_mark + \"L\", this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0], unpack(this.endian_mark + \"L\", this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]]);\n          }\n        } else {\n          data = [unpack(this.endian_mark + \"L\", this.tiftag.slice(pointer, pointer + 4))[0], unpack(this.endian_mark + \"L\", this.tiftag.slice(pointer + 4, pointer + 8))[0]];\n        }\n      } else if (t == 7) {\n        // UNDEFINED BYTES\n        if (length > 4) {\n          pointer = unpack(this.endian_mark + \"L\", value)[0];\n          data = this.tiftag.slice(pointer, pointer + length);\n        } else {\n          data = value.slice(0, length);\n        }\n      } else if (t == 9) {\n        // SLONG\n        if (length > 1) {\n          pointer = unpack(this.endian_mark + \"L\", value)[0];\n          data = unpack(this.endian_mark + nStr(\"l\", length), this.tiftag.slice(pointer, pointer + length * 4));\n        } else {\n          data = unpack(this.endian_mark + nStr(\"l\", length), value);\n        }\n      } else if (t == 10) {\n        // SRATIONAL\n        pointer = unpack(this.endian_mark + \"L\", value)[0];\n        if (length > 1) {\n          data = [];\n          for (var x = 0; x < length; x++) {\n            data.push([unpack(this.endian_mark + \"l\", this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0], unpack(this.endian_mark + \"l\", this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]]);\n          }\n        } else {\n          data = [unpack(this.endian_mark + \"l\", this.tiftag.slice(pointer, pointer + 4))[0], unpack(this.endian_mark + \"l\", this.tiftag.slice(pointer + 4, pointer + 8))[0]];\n        }\n      } else {\n        throw new Error(\"Exif might be wrong. Got incorrect value \" + \"type to decode. type:\" + t);\n      }\n      if (data instanceof Array && data.length == 1) {\n        return data[0];\n      } else {\n        return data;\n      }\n    }\n  };\n  if (typeof window !== \"undefined\" && typeof window.btoa === \"function\") {\n    var btoa = window.btoa;\n  }\n  if (typeof btoa === \"undefined\") {\n    var btoa = function (input) {\n      var output = \"\";\n      var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n      var i = 0;\n      var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      while (i < input.length) {\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n        output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n      }\n      return output;\n    };\n  }\n  if (typeof window !== \"undefined\" && typeof window.atob === \"function\") {\n    var atob = window.atob;\n  }\n  if (typeof atob === \"undefined\") {\n    var atob = function (input) {\n      var output = \"\";\n      var chr1, chr2, chr3;\n      var enc1, enc2, enc3, enc4;\n      var i = 0;\n      var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n      while (i < input.length) {\n        enc1 = keyStr.indexOf(input.charAt(i++));\n        enc2 = keyStr.indexOf(input.charAt(i++));\n        enc3 = keyStr.indexOf(input.charAt(i++));\n        enc4 = keyStr.indexOf(input.charAt(i++));\n        chr1 = enc1 << 2 | enc2 >> 4;\n        chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n        chr3 = (enc3 & 3) << 6 | enc4;\n        output = output + String.fromCharCode(chr1);\n        if (enc3 != 64) {\n          output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n          output = output + String.fromCharCode(chr3);\n        }\n      }\n      return output;\n    };\n  }\n  function getImageSize(imageArray) {\n    var segments = slice2Segments(imageArray);\n    var seg,\n      width,\n      height,\n      SOF = [192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207];\n    for (var x = 0; x < segments.length; x++) {\n      seg = segments[x];\n      if (SOF.indexOf(seg[1]) >= 0) {\n        height = seg[5] * 256 + seg[6];\n        width = seg[7] * 256 + seg[8];\n        break;\n      }\n    }\n    return [width, height];\n  }\n  function pack(mark, array) {\n    if (!(array instanceof Array)) {\n      throw new Error(\"'pack' error. Got invalid type argument.\");\n    }\n    if (mark.length - 1 != array.length) {\n      throw new Error(\"'pack' error. \" + (mark.length - 1) + \" marks, \" + array.length + \" elements.\");\n    }\n    var littleEndian;\n    if (mark[0] == \"<\") {\n      littleEndian = true;\n    } else if (mark[0] == \">\") {\n      littleEndian = false;\n    } else {\n      throw new Error(\"\");\n    }\n    var packed = \"\";\n    var p = 1;\n    var val = null;\n    var c = null;\n    var valStr = null;\n    while (c = mark[p]) {\n      if (c.toLowerCase() == \"b\") {\n        val = array[p - 1];\n        if (c == \"b\" && val < 0) {\n          val += 0x100;\n        }\n        if (val > 0xff || val < 0) {\n          throw new Error(\"'pack' error.\");\n        } else {\n          valStr = String.fromCharCode(val);\n        }\n      } else if (c == \"H\") {\n        val = array[p - 1];\n        if (val > 0xffff || val < 0) {\n          throw new Error(\"'pack' error.\");\n        } else {\n          valStr = String.fromCharCode(Math.floor(val % 0x10000 / 0x100)) + String.fromCharCode(val % 0x100);\n          if (littleEndian) {\n            valStr = valStr.split(\"\").reverse().join(\"\");\n          }\n        }\n      } else if (c.toLowerCase() == \"l\") {\n        val = array[p - 1];\n        if (c == \"l\" && val < 0) {\n          val += 0x100000000;\n        }\n        if (val > 0xffffffff || val < 0) {\n          throw new Error(\"'pack' error.\");\n        } else {\n          valStr = String.fromCharCode(Math.floor(val / 0x1000000)) + String.fromCharCode(Math.floor(val % 0x1000000 / 0x10000)) + String.fromCharCode(Math.floor(val % 0x10000 / 0x100)) + String.fromCharCode(val % 0x100);\n          if (littleEndian) {\n            valStr = valStr.split(\"\").reverse().join(\"\");\n          }\n        }\n      } else {\n        throw new Error(\"'pack' error.\");\n      }\n      packed += valStr;\n      p += 1;\n    }\n    return packed;\n  }\n  function unpack(mark, str) {\n    if (typeof str != \"string\") {\n      throw new Error(\"'unpack' error. Got invalid type argument.\");\n    }\n    var l = 0;\n    for (var markPointer = 1; markPointer < mark.length; markPointer++) {\n      if (mark[markPointer].toLowerCase() == \"b\") {\n        l += 1;\n      } else if (mark[markPointer].toLowerCase() == \"h\") {\n        l += 2;\n      } else if (mark[markPointer].toLowerCase() == \"l\") {\n        l += 4;\n      } else {\n        throw new Error(\"'unpack' error. Got invalid mark.\");\n      }\n    }\n    if (l != str.length) {\n      throw new Error(\"'unpack' error. Mismatch between symbol and string length. \" + l + \":\" + str.length);\n    }\n    var littleEndian;\n    if (mark[0] == \"<\") {\n      littleEndian = true;\n    } else if (mark[0] == \">\") {\n      littleEndian = false;\n    } else {\n      throw new Error(\"'unpack' error.\");\n    }\n    var unpacked = [];\n    var strPointer = 0;\n    var p = 1;\n    var val = null;\n    var c = null;\n    var length = null;\n    var sliced = \"\";\n    while (c = mark[p]) {\n      if (c.toLowerCase() == \"b\") {\n        length = 1;\n        sliced = str.slice(strPointer, strPointer + length);\n        val = sliced.charCodeAt(0);\n        if (c == \"b\" && val >= 0x80) {\n          val -= 0x100;\n        }\n      } else if (c == \"H\") {\n        length = 2;\n        sliced = str.slice(strPointer, strPointer + length);\n        if (littleEndian) {\n          sliced = sliced.split(\"\").reverse().join(\"\");\n        }\n        val = sliced.charCodeAt(0) * 0x100 + sliced.charCodeAt(1);\n      } else if (c.toLowerCase() == \"l\") {\n        length = 4;\n        sliced = str.slice(strPointer, strPointer + length);\n        if (littleEndian) {\n          sliced = sliced.split(\"\").reverse().join(\"\");\n        }\n        val = sliced.charCodeAt(0) * 0x1000000 + sliced.charCodeAt(1) * 0x10000 + sliced.charCodeAt(2) * 0x100 + sliced.charCodeAt(3);\n        if (c == \"l\" && val >= 0x80000000) {\n          val -= 0x100000000;\n        }\n      } else {\n        throw new Error(\"'unpack' error. \" + c);\n      }\n      unpacked.push(val);\n      strPointer += length;\n      p += 1;\n    }\n    return unpacked;\n  }\n  function nStr(ch, num) {\n    var str = \"\";\n    for (var i = 0; i < num; i++) {\n      str += ch;\n    }\n    return str;\n  }\n  function splitIntoSegments(data) {\n    if (data.slice(0, 2) != \"\\xff\\xd8\") {\n      throw new Error(\"Given data isn't JPEG.\");\n    }\n    var head = 2;\n    var segments = [\"\\xff\\xd8\"];\n    while (true) {\n      if (data.slice(head, head + 2) == \"\\xff\\xda\") {\n        segments.push(data.slice(head));\n        break;\n      } else {\n        var length = unpack(\">H\", data.slice(head + 2, head + 4))[0];\n        var endPoint = head + length + 2;\n        segments.push(data.slice(head, endPoint));\n        head = endPoint;\n      }\n      if (head >= data.length) {\n        throw new Error(\"Wrong JPEG data.\");\n      }\n    }\n    return segments;\n  }\n  function getExifSeg(segments) {\n    var seg;\n    for (var i = 0; i < segments.length; i++) {\n      seg = segments[i];\n      if (seg.slice(0, 2) == \"\\xff\\xe1\" && seg.slice(4, 10) == \"Exif\\x00\\x00\") {\n        return seg;\n      }\n    }\n    return null;\n  }\n  function mergeSegments(segments, exif) {\n    var hasExifSegment = false;\n    var additionalAPP1ExifSegments = [];\n    segments.forEach(function (segment, i) {\n      // Replace first occurence of APP1:Exif segment\n      if (segment.slice(0, 2) == \"\\xff\\xe1\" && segment.slice(4, 10) == \"Exif\\x00\\x00\") {\n        if (!hasExifSegment) {\n          segments[i] = exif;\n          hasExifSegment = true;\n        } else {\n          additionalAPP1ExifSegments.unshift(i);\n        }\n      }\n    });\n\n    // Remove additional occurences of APP1:Exif segment\n    additionalAPP1ExifSegments.forEach(function (segmentIndex) {\n      segments.splice(segmentIndex, 1);\n    });\n    if (!hasExifSegment && exif) {\n      segments = [segments[0], exif].concat(segments.slice(1));\n    }\n    return segments.join(\"\");\n  }\n  function toHex(str) {\n    var hexStr = \"\";\n    for (var i = 0; i < str.length; i++) {\n      var h = str.charCodeAt(i);\n      var hex = (h < 10 ? \"0\" : \"\") + h.toString(16);\n      hexStr += hex + \" \";\n    }\n    return hexStr;\n  }\n  var TYPES = {\n    \"Byte\": 1,\n    \"Ascii\": 2,\n    \"Short\": 3,\n    \"Long\": 4,\n    \"Rational\": 5,\n    \"Undefined\": 7,\n    \"SLong\": 9,\n    \"SRational\": 10\n  };\n  var TAGS = {\n    'Image': {\n      11: {\n        'name': 'ProcessingSoftware',\n        'type': 'Ascii'\n      },\n      254: {\n        'name': 'NewSubfileType',\n        'type': 'Long'\n      },\n      255: {\n        'name': 'SubfileType',\n        'type': 'Short'\n      },\n      256: {\n        'name': 'ImageWidth',\n        'type': 'Long'\n      },\n      257: {\n        'name': 'ImageLength',\n        'type': 'Long'\n      },\n      258: {\n        'name': 'BitsPerSample',\n        'type': 'Short'\n      },\n      259: {\n        'name': 'Compression',\n        'type': 'Short'\n      },\n      262: {\n        'name': 'PhotometricInterpretation',\n        'type': 'Short'\n      },\n      263: {\n        'name': 'Threshholding',\n        'type': 'Short'\n      },\n      264: {\n        'name': 'CellWidth',\n        'type': 'Short'\n      },\n      265: {\n        'name': 'CellLength',\n        'type': 'Short'\n      },\n      266: {\n        'name': 'FillOrder',\n        'type': 'Short'\n      },\n      269: {\n        'name': 'DocumentName',\n        'type': 'Ascii'\n      },\n      270: {\n        'name': 'ImageDescription',\n        'type': 'Ascii'\n      },\n      271: {\n        'name': 'Make',\n        'type': 'Ascii'\n      },\n      272: {\n        'name': 'Model',\n        'type': 'Ascii'\n      },\n      273: {\n        'name': 'StripOffsets',\n        'type': 'Long'\n      },\n      274: {\n        'name': 'Orientation',\n        'type': 'Short'\n      },\n      277: {\n        'name': 'SamplesPerPixel',\n        'type': 'Short'\n      },\n      278: {\n        'name': 'RowsPerStrip',\n        'type': 'Long'\n      },\n      279: {\n        'name': 'StripByteCounts',\n        'type': 'Long'\n      },\n      282: {\n        'name': 'XResolution',\n        'type': 'Rational'\n      },\n      283: {\n        'name': 'YResolution',\n        'type': 'Rational'\n      },\n      284: {\n        'name': 'PlanarConfiguration',\n        'type': 'Short'\n      },\n      290: {\n        'name': 'GrayResponseUnit',\n        'type': 'Short'\n      },\n      291: {\n        'name': 'GrayResponseCurve',\n        'type': 'Short'\n      },\n      292: {\n        'name': 'T4Options',\n        'type': 'Long'\n      },\n      293: {\n        'name': 'T6Options',\n        'type': 'Long'\n      },\n      296: {\n        'name': 'ResolutionUnit',\n        'type': 'Short'\n      },\n      301: {\n        'name': 'TransferFunction',\n        'type': 'Short'\n      },\n      305: {\n        'name': 'Software',\n        'type': 'Ascii'\n      },\n      306: {\n        'name': 'DateTime',\n        'type': 'Ascii'\n      },\n      315: {\n        'name': 'Artist',\n        'type': 'Ascii'\n      },\n      316: {\n        'name': 'HostComputer',\n        'type': 'Ascii'\n      },\n      317: {\n        'name': 'Predictor',\n        'type': 'Short'\n      },\n      318: {\n        'name': 'WhitePoint',\n        'type': 'Rational'\n      },\n      319: {\n        'name': 'PrimaryChromaticities',\n        'type': 'Rational'\n      },\n      320: {\n        'name': 'ColorMap',\n        'type': 'Short'\n      },\n      321: {\n        'name': 'HalftoneHints',\n        'type': 'Short'\n      },\n      322: {\n        'name': 'TileWidth',\n        'type': 'Short'\n      },\n      323: {\n        'name': 'TileLength',\n        'type': 'Short'\n      },\n      324: {\n        'name': 'TileOffsets',\n        'type': 'Short'\n      },\n      325: {\n        'name': 'TileByteCounts',\n        'type': 'Short'\n      },\n      330: {\n        'name': 'SubIFDs',\n        'type': 'Long'\n      },\n      332: {\n        'name': 'InkSet',\n        'type': 'Short'\n      },\n      333: {\n        'name': 'InkNames',\n        'type': 'Ascii'\n      },\n      334: {\n        'name': 'NumberOfInks',\n        'type': 'Short'\n      },\n      336: {\n        'name': 'DotRange',\n        'type': 'Byte'\n      },\n      337: {\n        'name': 'TargetPrinter',\n        'type': 'Ascii'\n      },\n      338: {\n        'name': 'ExtraSamples',\n        'type': 'Short'\n      },\n      339: {\n        'name': 'SampleFormat',\n        'type': 'Short'\n      },\n      340: {\n        'name': 'SMinSampleValue',\n        'type': 'Short'\n      },\n      341: {\n        'name': 'SMaxSampleValue',\n        'type': 'Short'\n      },\n      342: {\n        'name': 'TransferRange',\n        'type': 'Short'\n      },\n      343: {\n        'name': 'ClipPath',\n        'type': 'Byte'\n      },\n      344: {\n        'name': 'XClipPathUnits',\n        'type': 'Long'\n      },\n      345: {\n        'name': 'YClipPathUnits',\n        'type': 'Long'\n      },\n      346: {\n        'name': 'Indexed',\n        'type': 'Short'\n      },\n      347: {\n        'name': 'JPEGTables',\n        'type': 'Undefined'\n      },\n      351: {\n        'name': 'OPIProxy',\n        'type': 'Short'\n      },\n      512: {\n        'name': 'JPEGProc',\n        'type': 'Long'\n      },\n      513: {\n        'name': 'JPEGInterchangeFormat',\n        'type': 'Long'\n      },\n      514: {\n        'name': 'JPEGInterchangeFormatLength',\n        'type': 'Long'\n      },\n      515: {\n        'name': 'JPEGRestartInterval',\n        'type': 'Short'\n      },\n      517: {\n        'name': 'JPEGLosslessPredictors',\n        'type': 'Short'\n      },\n      518: {\n        'name': 'JPEGPointTransforms',\n        'type': 'Short'\n      },\n      519: {\n        'name': 'JPEGQTables',\n        'type': 'Long'\n      },\n      520: {\n        'name': 'JPEGDCTables',\n        'type': 'Long'\n      },\n      521: {\n        'name': 'JPEGACTables',\n        'type': 'Long'\n      },\n      529: {\n        'name': 'YCbCrCoefficients',\n        'type': 'Rational'\n      },\n      530: {\n        'name': 'YCbCrSubSampling',\n        'type': 'Short'\n      },\n      531: {\n        'name': 'YCbCrPositioning',\n        'type': 'Short'\n      },\n      532: {\n        'name': 'ReferenceBlackWhite',\n        'type': 'Rational'\n      },\n      700: {\n        'name': 'XMLPacket',\n        'type': 'Byte'\n      },\n      18246: {\n        'name': 'Rating',\n        'type': 'Short'\n      },\n      18249: {\n        'name': 'RatingPercent',\n        'type': 'Short'\n      },\n      32781: {\n        'name': 'ImageID',\n        'type': 'Ascii'\n      },\n      33421: {\n        'name': 'CFARepeatPatternDim',\n        'type': 'Short'\n      },\n      33422: {\n        'name': 'CFAPattern',\n        'type': 'Byte'\n      },\n      33423: {\n        'name': 'BatteryLevel',\n        'type': 'Rational'\n      },\n      33432: {\n        'name': 'Copyright',\n        'type': 'Ascii'\n      },\n      33434: {\n        'name': 'ExposureTime',\n        'type': 'Rational'\n      },\n      34377: {\n        'name': 'ImageResources',\n        'type': 'Byte'\n      },\n      34665: {\n        'name': 'ExifTag',\n        'type': 'Long'\n      },\n      34675: {\n        'name': 'InterColorProfile',\n        'type': 'Undefined'\n      },\n      34853: {\n        'name': 'GPSTag',\n        'type': 'Long'\n      },\n      34857: {\n        'name': 'Interlace',\n        'type': 'Short'\n      },\n      34858: {\n        'name': 'TimeZoneOffset',\n        'type': 'Long'\n      },\n      34859: {\n        'name': 'SelfTimerMode',\n        'type': 'Short'\n      },\n      37387: {\n        'name': 'FlashEnergy',\n        'type': 'Rational'\n      },\n      37388: {\n        'name': 'SpatialFrequencyResponse',\n        'type': 'Undefined'\n      },\n      37389: {\n        'name': 'Noise',\n        'type': 'Undefined'\n      },\n      37390: {\n        'name': 'FocalPlaneXResolution',\n        'type': 'Rational'\n      },\n      37391: {\n        'name': 'FocalPlaneYResolution',\n        'type': 'Rational'\n      },\n      37392: {\n        'name': 'FocalPlaneResolutionUnit',\n        'type': 'Short'\n      },\n      37393: {\n        'name': 'ImageNumber',\n        'type': 'Long'\n      },\n      37394: {\n        'name': 'SecurityClassification',\n        'type': 'Ascii'\n      },\n      37395: {\n        'name': 'ImageHistory',\n        'type': 'Ascii'\n      },\n      37397: {\n        'name': 'ExposureIndex',\n        'type': 'Rational'\n      },\n      37398: {\n        'name': 'TIFFEPStandardID',\n        'type': 'Byte'\n      },\n      37399: {\n        'name': 'SensingMethod',\n        'type': 'Short'\n      },\n      40091: {\n        'name': 'XPTitle',\n        'type': 'Byte'\n      },\n      40092: {\n        'name': 'XPComment',\n        'type': 'Byte'\n      },\n      40093: {\n        'name': 'XPAuthor',\n        'type': 'Byte'\n      },\n      40094: {\n        'name': 'XPKeywords',\n        'type': 'Byte'\n      },\n      40095: {\n        'name': 'XPSubject',\n        'type': 'Byte'\n      },\n      50341: {\n        'name': 'PrintImageMatching',\n        'type': 'Undefined'\n      },\n      50706: {\n        'name': 'DNGVersion',\n        'type': 'Byte'\n      },\n      50707: {\n        'name': 'DNGBackwardVersion',\n        'type': 'Byte'\n      },\n      50708: {\n        'name': 'UniqueCameraModel',\n        'type': 'Ascii'\n      },\n      50709: {\n        'name': 'LocalizedCameraModel',\n        'type': 'Byte'\n      },\n      50710: {\n        'name': 'CFAPlaneColor',\n        'type': 'Byte'\n      },\n      50711: {\n        'name': 'CFALayout',\n        'type': 'Short'\n      },\n      50712: {\n        'name': 'LinearizationTable',\n        'type': 'Short'\n      },\n      50713: {\n        'name': 'BlackLevelRepeatDim',\n        'type': 'Short'\n      },\n      50714: {\n        'name': 'BlackLevel',\n        'type': 'Rational'\n      },\n      50715: {\n        'name': 'BlackLevelDeltaH',\n        'type': 'SRational'\n      },\n      50716: {\n        'name': 'BlackLevelDeltaV',\n        'type': 'SRational'\n      },\n      50717: {\n        'name': 'WhiteLevel',\n        'type': 'Short'\n      },\n      50718: {\n        'name': 'DefaultScale',\n        'type': 'Rational'\n      },\n      50719: {\n        'name': 'DefaultCropOrigin',\n        'type': 'Short'\n      },\n      50720: {\n        'name': 'DefaultCropSize',\n        'type': 'Short'\n      },\n      50721: {\n        'name': 'ColorMatrix1',\n        'type': 'SRational'\n      },\n      50722: {\n        'name': 'ColorMatrix2',\n        'type': 'SRational'\n      },\n      50723: {\n        'name': 'CameraCalibration1',\n        'type': 'SRational'\n      },\n      50724: {\n        'name': 'CameraCalibration2',\n        'type': 'SRational'\n      },\n      50725: {\n        'name': 'ReductionMatrix1',\n        'type': 'SRational'\n      },\n      50726: {\n        'name': 'ReductionMatrix2',\n        'type': 'SRational'\n      },\n      50727: {\n        'name': 'AnalogBalance',\n        'type': 'Rational'\n      },\n      50728: {\n        'name': 'AsShotNeutral',\n        'type': 'Short'\n      },\n      50729: {\n        'name': 'AsShotWhiteXY',\n        'type': 'Rational'\n      },\n      50730: {\n        'name': 'BaselineExposure',\n        'type': 'SRational'\n      },\n      50731: {\n        'name': 'BaselineNoise',\n        'type': 'Rational'\n      },\n      50732: {\n        'name': 'BaselineSharpness',\n        'type': 'Rational'\n      },\n      50733: {\n        'name': 'BayerGreenSplit',\n        'type': 'Long'\n      },\n      50734: {\n        'name': 'LinearResponseLimit',\n        'type': 'Rational'\n      },\n      50735: {\n        'name': 'CameraSerialNumber',\n        'type': 'Ascii'\n      },\n      50736: {\n        'name': 'LensInfo',\n        'type': 'Rational'\n      },\n      50737: {\n        'name': 'ChromaBlurRadius',\n        'type': 'Rational'\n      },\n      50738: {\n        'name': 'AntiAliasStrength',\n        'type': 'Rational'\n      },\n      50739: {\n        'name': 'ShadowScale',\n        'type': 'SRational'\n      },\n      50740: {\n        'name': 'DNGPrivateData',\n        'type': 'Byte'\n      },\n      50741: {\n        'name': 'MakerNoteSafety',\n        'type': 'Short'\n      },\n      50778: {\n        'name': 'CalibrationIlluminant1',\n        'type': 'Short'\n      },\n      50779: {\n        'name': 'CalibrationIlluminant2',\n        'type': 'Short'\n      },\n      50780: {\n        'name': 'BestQualityScale',\n        'type': 'Rational'\n      },\n      50781: {\n        'name': 'RawDataUniqueID',\n        'type': 'Byte'\n      },\n      50827: {\n        'name': 'OriginalRawFileName',\n        'type': 'Byte'\n      },\n      50828: {\n        'name': 'OriginalRawFileData',\n        'type': 'Undefined'\n      },\n      50829: {\n        'name': 'ActiveArea',\n        'type': 'Short'\n      },\n      50830: {\n        'name': 'MaskedAreas',\n        'type': 'Short'\n      },\n      50831: {\n        'name': 'AsShotICCProfile',\n        'type': 'Undefined'\n      },\n      50832: {\n        'name': 'AsShotPreProfileMatrix',\n        'type': 'SRational'\n      },\n      50833: {\n        'name': 'CurrentICCProfile',\n        'type': 'Undefined'\n      },\n      50834: {\n        'name': 'CurrentPreProfileMatrix',\n        'type': 'SRational'\n      },\n      50879: {\n        'name': 'ColorimetricReference',\n        'type': 'Short'\n      },\n      50931: {\n        'name': 'CameraCalibrationSignature',\n        'type': 'Byte'\n      },\n      50932: {\n        'name': 'ProfileCalibrationSignature',\n        'type': 'Byte'\n      },\n      50934: {\n        'name': 'AsShotProfileName',\n        'type': 'Byte'\n      },\n      50935: {\n        'name': 'NoiseReductionApplied',\n        'type': 'Rational'\n      },\n      50936: {\n        'name': 'ProfileName',\n        'type': 'Byte'\n      },\n      50937: {\n        'name': 'ProfileHueSatMapDims',\n        'type': 'Long'\n      },\n      50938: {\n        'name': 'ProfileHueSatMapData1',\n        'type': 'Float'\n      },\n      50939: {\n        'name': 'ProfileHueSatMapData2',\n        'type': 'Float'\n      },\n      50940: {\n        'name': 'ProfileToneCurve',\n        'type': 'Float'\n      },\n      50941: {\n        'name': 'ProfileEmbedPolicy',\n        'type': 'Long'\n      },\n      50942: {\n        'name': 'ProfileCopyright',\n        'type': 'Byte'\n      },\n      50964: {\n        'name': 'ForwardMatrix1',\n        'type': 'SRational'\n      },\n      50965: {\n        'name': 'ForwardMatrix2',\n        'type': 'SRational'\n      },\n      50966: {\n        'name': 'PreviewApplicationName',\n        'type': 'Byte'\n      },\n      50967: {\n        'name': 'PreviewApplicationVersion',\n        'type': 'Byte'\n      },\n      50968: {\n        'name': 'PreviewSettingsName',\n        'type': 'Byte'\n      },\n      50969: {\n        'name': 'PreviewSettingsDigest',\n        'type': 'Byte'\n      },\n      50970: {\n        'name': 'PreviewColorSpace',\n        'type': 'Long'\n      },\n      50971: {\n        'name': 'PreviewDateTime',\n        'type': 'Ascii'\n      },\n      50972: {\n        'name': 'RawImageDigest',\n        'type': 'Undefined'\n      },\n      50973: {\n        'name': 'OriginalRawFileDigest',\n        'type': 'Undefined'\n      },\n      50974: {\n        'name': 'SubTileBlockSize',\n        'type': 'Long'\n      },\n      50975: {\n        'name': 'RowInterleaveFactor',\n        'type': 'Long'\n      },\n      50981: {\n        'name': 'ProfileLookTableDims',\n        'type': 'Long'\n      },\n      50982: {\n        'name': 'ProfileLookTableData',\n        'type': 'Float'\n      },\n      51008: {\n        'name': 'OpcodeList1',\n        'type': 'Undefined'\n      },\n      51009: {\n        'name': 'OpcodeList2',\n        'type': 'Undefined'\n      },\n      51022: {\n        'name': 'OpcodeList3',\n        'type': 'Undefined'\n      }\n    },\n    'Exif': {\n      33434: {\n        'name': 'ExposureTime',\n        'type': 'Rational'\n      },\n      33437: {\n        'name': 'FNumber',\n        'type': 'Rational'\n      },\n      34850: {\n        'name': 'ExposureProgram',\n        'type': 'Short'\n      },\n      34852: {\n        'name': 'SpectralSensitivity',\n        'type': 'Ascii'\n      },\n      34855: {\n        'name': 'ISOSpeedRatings',\n        'type': 'Short'\n      },\n      34856: {\n        'name': 'OECF',\n        'type': 'Undefined'\n      },\n      34864: {\n        'name': 'SensitivityType',\n        'type': 'Short'\n      },\n      34865: {\n        'name': 'StandardOutputSensitivity',\n        'type': 'Long'\n      },\n      34866: {\n        'name': 'RecommendedExposureIndex',\n        'type': 'Long'\n      },\n      34867: {\n        'name': 'ISOSpeed',\n        'type': 'Long'\n      },\n      34868: {\n        'name': 'ISOSpeedLatitudeyyy',\n        'type': 'Long'\n      },\n      34869: {\n        'name': 'ISOSpeedLatitudezzz',\n        'type': 'Long'\n      },\n      36864: {\n        'name': 'ExifVersion',\n        'type': 'Undefined'\n      },\n      36867: {\n        'name': 'DateTimeOriginal',\n        'type': 'Ascii'\n      },\n      36868: {\n        'name': 'DateTimeDigitized',\n        'type': 'Ascii'\n      },\n      37121: {\n        'name': 'ComponentsConfiguration',\n        'type': 'Undefined'\n      },\n      37122: {\n        'name': 'CompressedBitsPerPixel',\n        'type': 'Rational'\n      },\n      37377: {\n        'name': 'ShutterSpeedValue',\n        'type': 'SRational'\n      },\n      37378: {\n        'name': 'ApertureValue',\n        'type': 'Rational'\n      },\n      37379: {\n        'name': 'BrightnessValue',\n        'type': 'SRational'\n      },\n      37380: {\n        'name': 'ExposureBiasValue',\n        'type': 'SRational'\n      },\n      37381: {\n        'name': 'MaxApertureValue',\n        'type': 'Rational'\n      },\n      37382: {\n        'name': 'SubjectDistance',\n        'type': 'Rational'\n      },\n      37383: {\n        'name': 'MeteringMode',\n        'type': 'Short'\n      },\n      37384: {\n        'name': 'LightSource',\n        'type': 'Short'\n      },\n      37385: {\n        'name': 'Flash',\n        'type': 'Short'\n      },\n      37386: {\n        'name': 'FocalLength',\n        'type': 'Rational'\n      },\n      37396: {\n        'name': 'SubjectArea',\n        'type': 'Short'\n      },\n      37500: {\n        'name': 'MakerNote',\n        'type': 'Undefined'\n      },\n      37510: {\n        'name': 'UserComment',\n        'type': 'Ascii'\n      },\n      37520: {\n        'name': 'SubSecTime',\n        'type': 'Ascii'\n      },\n      37521: {\n        'name': 'SubSecTimeOriginal',\n        'type': 'Ascii'\n      },\n      37522: {\n        'name': 'SubSecTimeDigitized',\n        'type': 'Ascii'\n      },\n      40960: {\n        'name': 'FlashpixVersion',\n        'type': 'Undefined'\n      },\n      40961: {\n        'name': 'ColorSpace',\n        'type': 'Short'\n      },\n      40962: {\n        'name': 'PixelXDimension',\n        'type': 'Long'\n      },\n      40963: {\n        'name': 'PixelYDimension',\n        'type': 'Long'\n      },\n      40964: {\n        'name': 'RelatedSoundFile',\n        'type': 'Ascii'\n      },\n      40965: {\n        'name': 'InteroperabilityTag',\n        'type': 'Long'\n      },\n      41483: {\n        'name': 'FlashEnergy',\n        'type': 'Rational'\n      },\n      41484: {\n        'name': 'SpatialFrequencyResponse',\n        'type': 'Undefined'\n      },\n      41486: {\n        'name': 'FocalPlaneXResolution',\n        'type': 'Rational'\n      },\n      41487: {\n        'name': 'FocalPlaneYResolution',\n        'type': 'Rational'\n      },\n      41488: {\n        'name': 'FocalPlaneResolutionUnit',\n        'type': 'Short'\n      },\n      41492: {\n        'name': 'SubjectLocation',\n        'type': 'Short'\n      },\n      41493: {\n        'name': 'ExposureIndex',\n        'type': 'Rational'\n      },\n      41495: {\n        'name': 'SensingMethod',\n        'type': 'Short'\n      },\n      41728: {\n        'name': 'FileSource',\n        'type': 'Undefined'\n      },\n      41729: {\n        'name': 'SceneType',\n        'type': 'Undefined'\n      },\n      41730: {\n        'name': 'CFAPattern',\n        'type': 'Undefined'\n      },\n      41985: {\n        'name': 'CustomRendered',\n        'type': 'Short'\n      },\n      41986: {\n        'name': 'ExposureMode',\n        'type': 'Short'\n      },\n      41987: {\n        'name': 'WhiteBalance',\n        'type': 'Short'\n      },\n      41988: {\n        'name': 'DigitalZoomRatio',\n        'type': 'Rational'\n      },\n      41989: {\n        'name': 'FocalLengthIn35mmFilm',\n        'type': 'Short'\n      },\n      41990: {\n        'name': 'SceneCaptureType',\n        'type': 'Short'\n      },\n      41991: {\n        'name': 'GainControl',\n        'type': 'Short'\n      },\n      41992: {\n        'name': 'Contrast',\n        'type': 'Short'\n      },\n      41993: {\n        'name': 'Saturation',\n        'type': 'Short'\n      },\n      41994: {\n        'name': 'Sharpness',\n        'type': 'Short'\n      },\n      41995: {\n        'name': 'DeviceSettingDescription',\n        'type': 'Undefined'\n      },\n      41996: {\n        'name': 'SubjectDistanceRange',\n        'type': 'Short'\n      },\n      42016: {\n        'name': 'ImageUniqueID',\n        'type': 'Ascii'\n      },\n      42032: {\n        'name': 'CameraOwnerName',\n        'type': 'Ascii'\n      },\n      42033: {\n        'name': 'BodySerialNumber',\n        'type': 'Ascii'\n      },\n      42034: {\n        'name': 'LensSpecification',\n        'type': 'Rational'\n      },\n      42035: {\n        'name': 'LensMake',\n        'type': 'Ascii'\n      },\n      42036: {\n        'name': 'LensModel',\n        'type': 'Ascii'\n      },\n      42037: {\n        'name': 'LensSerialNumber',\n        'type': 'Ascii'\n      },\n      42240: {\n        'name': 'Gamma',\n        'type': 'Rational'\n      }\n    },\n    'GPS': {\n      0: {\n        'name': 'GPSVersionID',\n        'type': 'Byte'\n      },\n      1: {\n        'name': 'GPSLatitudeRef',\n        'type': 'Ascii'\n      },\n      2: {\n        'name': 'GPSLatitude',\n        'type': 'Rational'\n      },\n      3: {\n        'name': 'GPSLongitudeRef',\n        'type': 'Ascii'\n      },\n      4: {\n        'name': 'GPSLongitude',\n        'type': 'Rational'\n      },\n      5: {\n        'name': 'GPSAltitudeRef',\n        'type': 'Byte'\n      },\n      6: {\n        'name': 'GPSAltitude',\n        'type': 'Rational'\n      },\n      7: {\n        'name': 'GPSTimeStamp',\n        'type': 'Rational'\n      },\n      8: {\n        'name': 'GPSSatellites',\n        'type': 'Ascii'\n      },\n      9: {\n        'name': 'GPSStatus',\n        'type': 'Ascii'\n      },\n      10: {\n        'name': 'GPSMeasureMode',\n        'type': 'Ascii'\n      },\n      11: {\n        'name': 'GPSDOP',\n        'type': 'Rational'\n      },\n      12: {\n        'name': 'GPSSpeedRef',\n        'type': 'Ascii'\n      },\n      13: {\n        'name': 'GPSSpeed',\n        'type': 'Rational'\n      },\n      14: {\n        'name': 'GPSTrackRef',\n        'type': 'Ascii'\n      },\n      15: {\n        'name': 'GPSTrack',\n        'type': 'Rational'\n      },\n      16: {\n        'name': 'GPSImgDirectionRef',\n        'type': 'Ascii'\n      },\n      17: {\n        'name': 'GPSImgDirection',\n        'type': 'Rational'\n      },\n      18: {\n        'name': 'GPSMapDatum',\n        'type': 'Ascii'\n      },\n      19: {\n        'name': 'GPSDestLatitudeRef',\n        'type': 'Ascii'\n      },\n      20: {\n        'name': 'GPSDestLatitude',\n        'type': 'Rational'\n      },\n      21: {\n        'name': 'GPSDestLongitudeRef',\n        'type': 'Ascii'\n      },\n      22: {\n        'name': 'GPSDestLongitude',\n        'type': 'Rational'\n      },\n      23: {\n        'name': 'GPSDestBearingRef',\n        'type': 'Ascii'\n      },\n      24: {\n        'name': 'GPSDestBearing',\n        'type': 'Rational'\n      },\n      25: {\n        'name': 'GPSDestDistanceRef',\n        'type': 'Ascii'\n      },\n      26: {\n        'name': 'GPSDestDistance',\n        'type': 'Rational'\n      },\n      27: {\n        'name': 'GPSProcessingMethod',\n        'type': 'Undefined'\n      },\n      28: {\n        'name': 'GPSAreaInformation',\n        'type': 'Undefined'\n      },\n      29: {\n        'name': 'GPSDateStamp',\n        'type': 'Ascii'\n      },\n      30: {\n        'name': 'GPSDifferential',\n        'type': 'Short'\n      },\n      31: {\n        'name': 'GPSHPositioningError',\n        'type': 'Rational'\n      }\n    },\n    'Interop': {\n      1: {\n        'name': 'InteroperabilityIndex',\n        'type': 'Ascii'\n      }\n    }\n  };\n  TAGS[\"0th\"] = TAGS[\"Image\"];\n  TAGS[\"1st\"] = TAGS[\"Image\"];\n  that.TAGS = TAGS;\n  that.ImageIFD = {\n    ProcessingSoftware: 11,\n    NewSubfileType: 254,\n    SubfileType: 255,\n    ImageWidth: 256,\n    ImageLength: 257,\n    BitsPerSample: 258,\n    Compression: 259,\n    PhotometricInterpretation: 262,\n    Threshholding: 263,\n    CellWidth: 264,\n    CellLength: 265,\n    FillOrder: 266,\n    DocumentName: 269,\n    ImageDescription: 270,\n    Make: 271,\n    Model: 272,\n    StripOffsets: 273,\n    Orientation: 274,\n    SamplesPerPixel: 277,\n    RowsPerStrip: 278,\n    StripByteCounts: 279,\n    XResolution: 282,\n    YResolution: 283,\n    PlanarConfiguration: 284,\n    GrayResponseUnit: 290,\n    GrayResponseCurve: 291,\n    T4Options: 292,\n    T6Options: 293,\n    ResolutionUnit: 296,\n    TransferFunction: 301,\n    Software: 305,\n    DateTime: 306,\n    Artist: 315,\n    HostComputer: 316,\n    Predictor: 317,\n    WhitePoint: 318,\n    PrimaryChromaticities: 319,\n    ColorMap: 320,\n    HalftoneHints: 321,\n    TileWidth: 322,\n    TileLength: 323,\n    TileOffsets: 324,\n    TileByteCounts: 325,\n    SubIFDs: 330,\n    InkSet: 332,\n    InkNames: 333,\n    NumberOfInks: 334,\n    DotRange: 336,\n    TargetPrinter: 337,\n    ExtraSamples: 338,\n    SampleFormat: 339,\n    SMinSampleValue: 340,\n    SMaxSampleValue: 341,\n    TransferRange: 342,\n    ClipPath: 343,\n    XClipPathUnits: 344,\n    YClipPathUnits: 345,\n    Indexed: 346,\n    JPEGTables: 347,\n    OPIProxy: 351,\n    JPEGProc: 512,\n    JPEGInterchangeFormat: 513,\n    JPEGInterchangeFormatLength: 514,\n    JPEGRestartInterval: 515,\n    JPEGLosslessPredictors: 517,\n    JPEGPointTransforms: 518,\n    JPEGQTables: 519,\n    JPEGDCTables: 520,\n    JPEGACTables: 521,\n    YCbCrCoefficients: 529,\n    YCbCrSubSampling: 530,\n    YCbCrPositioning: 531,\n    ReferenceBlackWhite: 532,\n    XMLPacket: 700,\n    Rating: 18246,\n    RatingPercent: 18249,\n    ImageID: 32781,\n    CFARepeatPatternDim: 33421,\n    CFAPattern: 33422,\n    BatteryLevel: 33423,\n    Copyright: 33432,\n    ExposureTime: 33434,\n    ImageResources: 34377,\n    ExifTag: 34665,\n    InterColorProfile: 34675,\n    GPSTag: 34853,\n    Interlace: 34857,\n    TimeZoneOffset: 34858,\n    SelfTimerMode: 34859,\n    FlashEnergy: 37387,\n    SpatialFrequencyResponse: 37388,\n    Noise: 37389,\n    FocalPlaneXResolution: 37390,\n    FocalPlaneYResolution: 37391,\n    FocalPlaneResolutionUnit: 37392,\n    ImageNumber: 37393,\n    SecurityClassification: 37394,\n    ImageHistory: 37395,\n    ExposureIndex: 37397,\n    TIFFEPStandardID: 37398,\n    SensingMethod: 37399,\n    XPTitle: 40091,\n    XPComment: 40092,\n    XPAuthor: 40093,\n    XPKeywords: 40094,\n    XPSubject: 40095,\n    PrintImageMatching: 50341,\n    DNGVersion: 50706,\n    DNGBackwardVersion: 50707,\n    UniqueCameraModel: 50708,\n    LocalizedCameraModel: 50709,\n    CFAPlaneColor: 50710,\n    CFALayout: 50711,\n    LinearizationTable: 50712,\n    BlackLevelRepeatDim: 50713,\n    BlackLevel: 50714,\n    BlackLevelDeltaH: 50715,\n    BlackLevelDeltaV: 50716,\n    WhiteLevel: 50717,\n    DefaultScale: 50718,\n    DefaultCropOrigin: 50719,\n    DefaultCropSize: 50720,\n    ColorMatrix1: 50721,\n    ColorMatrix2: 50722,\n    CameraCalibration1: 50723,\n    CameraCalibration2: 50724,\n    ReductionMatrix1: 50725,\n    ReductionMatrix2: 50726,\n    AnalogBalance: 50727,\n    AsShotNeutral: 50728,\n    AsShotWhiteXY: 50729,\n    BaselineExposure: 50730,\n    BaselineNoise: 50731,\n    BaselineSharpness: 50732,\n    BayerGreenSplit: 50733,\n    LinearResponseLimit: 50734,\n    CameraSerialNumber: 50735,\n    LensInfo: 50736,\n    ChromaBlurRadius: 50737,\n    AntiAliasStrength: 50738,\n    ShadowScale: 50739,\n    DNGPrivateData: 50740,\n    MakerNoteSafety: 50741,\n    CalibrationIlluminant1: 50778,\n    CalibrationIlluminant2: 50779,\n    BestQualityScale: 50780,\n    RawDataUniqueID: 50781,\n    OriginalRawFileName: 50827,\n    OriginalRawFileData: 50828,\n    ActiveArea: 50829,\n    MaskedAreas: 50830,\n    AsShotICCProfile: 50831,\n    AsShotPreProfileMatrix: 50832,\n    CurrentICCProfile: 50833,\n    CurrentPreProfileMatrix: 50834,\n    ColorimetricReference: 50879,\n    CameraCalibrationSignature: 50931,\n    ProfileCalibrationSignature: 50932,\n    AsShotProfileName: 50934,\n    NoiseReductionApplied: 50935,\n    ProfileName: 50936,\n    ProfileHueSatMapDims: 50937,\n    ProfileHueSatMapData1: 50938,\n    ProfileHueSatMapData2: 50939,\n    ProfileToneCurve: 50940,\n    ProfileEmbedPolicy: 50941,\n    ProfileCopyright: 50942,\n    ForwardMatrix1: 50964,\n    ForwardMatrix2: 50965,\n    PreviewApplicationName: 50966,\n    PreviewApplicationVersion: 50967,\n    PreviewSettingsName: 50968,\n    PreviewSettingsDigest: 50969,\n    PreviewColorSpace: 50970,\n    PreviewDateTime: 50971,\n    RawImageDigest: 50972,\n    OriginalRawFileDigest: 50973,\n    SubTileBlockSize: 50974,\n    RowInterleaveFactor: 50975,\n    ProfileLookTableDims: 50981,\n    ProfileLookTableData: 50982,\n    OpcodeList1: 51008,\n    OpcodeList2: 51009,\n    OpcodeList3: 51022,\n    NoiseProfile: 51041\n  };\n  that.ExifIFD = {\n    ExposureTime: 33434,\n    FNumber: 33437,\n    ExposureProgram: 34850,\n    SpectralSensitivity: 34852,\n    ISOSpeedRatings: 34855,\n    OECF: 34856,\n    SensitivityType: 34864,\n    StandardOutputSensitivity: 34865,\n    RecommendedExposureIndex: 34866,\n    ISOSpeed: 34867,\n    ISOSpeedLatitudeyyy: 34868,\n    ISOSpeedLatitudezzz: 34869,\n    ExifVersion: 36864,\n    DateTimeOriginal: 36867,\n    DateTimeDigitized: 36868,\n    ComponentsConfiguration: 37121,\n    CompressedBitsPerPixel: 37122,\n    ShutterSpeedValue: 37377,\n    ApertureValue: 37378,\n    BrightnessValue: 37379,\n    ExposureBiasValue: 37380,\n    MaxApertureValue: 37381,\n    SubjectDistance: 37382,\n    MeteringMode: 37383,\n    LightSource: 37384,\n    Flash: 37385,\n    FocalLength: 37386,\n    SubjectArea: 37396,\n    MakerNote: 37500,\n    UserComment: 37510,\n    SubSecTime: 37520,\n    SubSecTimeOriginal: 37521,\n    SubSecTimeDigitized: 37522,\n    FlashpixVersion: 40960,\n    ColorSpace: 40961,\n    PixelXDimension: 40962,\n    PixelYDimension: 40963,\n    RelatedSoundFile: 40964,\n    InteroperabilityTag: 40965,\n    FlashEnergy: 41483,\n    SpatialFrequencyResponse: 41484,\n    FocalPlaneXResolution: 41486,\n    FocalPlaneYResolution: 41487,\n    FocalPlaneResolutionUnit: 41488,\n    SubjectLocation: 41492,\n    ExposureIndex: 41493,\n    SensingMethod: 41495,\n    FileSource: 41728,\n    SceneType: 41729,\n    CFAPattern: 41730,\n    CustomRendered: 41985,\n    ExposureMode: 41986,\n    WhiteBalance: 41987,\n    DigitalZoomRatio: 41988,\n    FocalLengthIn35mmFilm: 41989,\n    SceneCaptureType: 41990,\n    GainControl: 41991,\n    Contrast: 41992,\n    Saturation: 41993,\n    Sharpness: 41994,\n    DeviceSettingDescription: 41995,\n    SubjectDistanceRange: 41996,\n    ImageUniqueID: 42016,\n    CameraOwnerName: 42032,\n    BodySerialNumber: 42033,\n    LensSpecification: 42034,\n    LensMake: 42035,\n    LensModel: 42036,\n    LensSerialNumber: 42037,\n    Gamma: 42240\n  };\n  that.GPSIFD = {\n    GPSVersionID: 0,\n    GPSLatitudeRef: 1,\n    GPSLatitude: 2,\n    GPSLongitudeRef: 3,\n    GPSLongitude: 4,\n    GPSAltitudeRef: 5,\n    GPSAltitude: 6,\n    GPSTimeStamp: 7,\n    GPSSatellites: 8,\n    GPSStatus: 9,\n    GPSMeasureMode: 10,\n    GPSDOP: 11,\n    GPSSpeedRef: 12,\n    GPSSpeed: 13,\n    GPSTrackRef: 14,\n    GPSTrack: 15,\n    GPSImgDirectionRef: 16,\n    GPSImgDirection: 17,\n    GPSMapDatum: 18,\n    GPSDestLatitudeRef: 19,\n    GPSDestLatitude: 20,\n    GPSDestLongitudeRef: 21,\n    GPSDestLongitude: 22,\n    GPSDestBearingRef: 23,\n    GPSDestBearing: 24,\n    GPSDestDistanceRef: 25,\n    GPSDestDistance: 26,\n    GPSProcessingMethod: 27,\n    GPSAreaInformation: 28,\n    GPSDateStamp: 29,\n    GPSDifferential: 30,\n    GPSHPositioningError: 31\n  };\n  that.InteropIFD = {\n    InteroperabilityIndex: 1\n  };\n  that.GPSHelper = {\n    degToDmsRational: function (degFloat) {\n      var degAbs = Math.abs(degFloat);\n      var minFloat = degAbs % 1 * 60;\n      var secFloat = minFloat % 1 * 60;\n      var deg = Math.floor(degAbs);\n      var min = Math.floor(minFloat);\n      var sec = Math.round(secFloat * 100);\n      return [[deg, 1], [min, 1], [sec, 100]];\n    },\n    dmsRationalToDeg: function (dmsArray, ref) {\n      var sign = ref === 'S' || ref === 'W' ? -1.0 : 1.0;\n      var deg = dmsArray[0][0] / dmsArray[0][1] + dmsArray[1][0] / dmsArray[1][1] / 60.0 + dmsArray[2][0] / dmsArray[2][1] / 3600.0;\n      return deg * sign;\n    }\n  };\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = that;\n    }\n    exports.piexif = that;\n  } else {\n    window.piexif = that;\n  }\n})();","map":{"version":3,"names":["that","version","remove","jpeg","b64","slice","atob","split","Error","segments","splitIntoSegments","newSegments","filter","seg","new_data","join","btoa","insert","exif","exifStr","pack","length","mergeSegments","load","data","input_data","exifDict","exif_dict","exifReader","ExifReader","tiftag","endian_mark","pointer","unpack","get_ifd","first_ifd_pointer","end","thumb","dump","exif_dict_original","TIFF_HEADER_LENGTH","copy","header","exif_is","gps_is","interop_is","first_is","zeroth_ifd","exif_ifd","interop_ifd","gps_ifd","first_ifd","Object","keys","indexOf","ExifIFD","InteroperabilityTag","toString","ImageIFD","ExifTag","GPSTag","zeroth_set","_dict_to_bytes","zeroth_length","exif_set","exif_bytes","exif_length","gps_set","gps_bytes","gps_length","interop_set","interop_bytes","interop_length","first_set","first_bytes","thumbnail","offset","_get_thumbnail","exif_pointer","gps_pointer","interop_pointer","pointer_value","pointer_str","key","key_str","type_str","TYPES","length_str","thumbnail_pointer","thumbnail_p_bytes","thumbnail_length_bytes","zeroth_bytes","obj","JSON","parse","stringify","concat","_pack_byte","array","nStr","_pack_short","_pack_long","_value_to_bytes","raw_value","value_type","four_bytes_over","value_str","new_value","num","den","n","ifd_dict","ifd","ifd_offset","tag_count","entry_header","entries_length","entries","values","parseInt","TAGS","b","app1","getExifSeg","prototype","ifd_name","t","x","tag","value_num","value","v_set","convert_value","val","push","Array","window","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","keyStr","charCodeAt","isNaN","charAt","replace","String","fromCharCode","getImageSize","imageArray","slice2Segments","width","height","SOF","mark","littleEndian","packed","p","c","valStr","toLowerCase","Math","floor","reverse","str","l","markPointer","unpacked","strPointer","sliced","ch","head","endPoint","hasExifSegment","additionalAPP1ExifSegments","forEach","segment","unshift","segmentIndex","splice","toHex","hexStr","h","hex","ProcessingSoftware","NewSubfileType","SubfileType","ImageWidth","ImageLength","BitsPerSample","Compression","PhotometricInterpretation","Threshholding","CellWidth","CellLength","FillOrder","DocumentName","ImageDescription","Make","Model","StripOffsets","Orientation","SamplesPerPixel","RowsPerStrip","StripByteCounts","XResolution","YResolution","PlanarConfiguration","GrayResponseUnit","GrayResponseCurve","T4Options","T6Options","ResolutionUnit","TransferFunction","Software","DateTime","Artist","HostComputer","Predictor","WhitePoint","PrimaryChromaticities","ColorMap","HalftoneHints","TileWidth","TileLength","TileOffsets","TileByteCounts","SubIFDs","InkSet","InkNames","NumberOfInks","DotRange","TargetPrinter","ExtraSamples","SampleFormat","SMinSampleValue","SMaxSampleValue","TransferRange","ClipPath","XClipPathUnits","YClipPathUnits","Indexed","JPEGTables","OPIProxy","JPEGProc","JPEGInterchangeFormat","JPEGInterchangeFormatLength","JPEGRestartInterval","JPEGLosslessPredictors","JPEGPointTransforms","JPEGQTables","JPEGDCTables","JPEGACTables","YCbCrCoefficients","YCbCrSubSampling","YCbCrPositioning","ReferenceBlackWhite","XMLPacket","Rating","RatingPercent","ImageID","CFARepeatPatternDim","CFAPattern","BatteryLevel","Copyright","ExposureTime","ImageResources","InterColorProfile","Interlace","TimeZoneOffset","SelfTimerMode","FlashEnergy","SpatialFrequencyResponse","Noise","FocalPlaneXResolution","FocalPlaneYResolution","FocalPlaneResolutionUnit","ImageNumber","SecurityClassification","ImageHistory","ExposureIndex","TIFFEPStandardID","SensingMethod","XPTitle","XPComment","XPAuthor","XPKeywords","XPSubject","PrintImageMatching","DNGVersion","DNGBackwardVersion","UniqueCameraModel","LocalizedCameraModel","CFAPlaneColor","CFALayout","LinearizationTable","BlackLevelRepeatDim","BlackLevel","BlackLevelDeltaH","BlackLevelDeltaV","WhiteLevel","DefaultScale","DefaultCropOrigin","DefaultCropSize","ColorMatrix1","ColorMatrix2","CameraCalibration1","CameraCalibration2","ReductionMatrix1","ReductionMatrix2","AnalogBalance","AsShotNeutral","AsShotWhiteXY","BaselineExposure","BaselineNoise","BaselineSharpness","BayerGreenSplit","LinearResponseLimit","CameraSerialNumber","LensInfo","ChromaBlurRadius","AntiAliasStrength","ShadowScale","DNGPrivateData","MakerNoteSafety","CalibrationIlluminant1","CalibrationIlluminant2","BestQualityScale","RawDataUniqueID","OriginalRawFileName","OriginalRawFileData","ActiveArea","MaskedAreas","AsShotICCProfile","AsShotPreProfileMatrix","CurrentICCProfile","CurrentPreProfileMatrix","ColorimetricReference","CameraCalibrationSignature","ProfileCalibrationSignature","AsShotProfileName","NoiseReductionApplied","ProfileName","ProfileHueSatMapDims","ProfileHueSatMapData1","ProfileHueSatMapData2","ProfileToneCurve","ProfileEmbedPolicy","ProfileCopyright","ForwardMatrix1","ForwardMatrix2","PreviewApplicationName","PreviewApplicationVersion","PreviewSettingsName","PreviewSettingsDigest","PreviewColorSpace","PreviewDateTime","RawImageDigest","OriginalRawFileDigest","SubTileBlockSize","RowInterleaveFactor","ProfileLookTableDims","ProfileLookTableData","OpcodeList1","OpcodeList2","OpcodeList3","NoiseProfile","FNumber","ExposureProgram","SpectralSensitivity","ISOSpeedRatings","OECF","SensitivityType","StandardOutputSensitivity","RecommendedExposureIndex","ISOSpeed","ISOSpeedLatitudeyyy","ISOSpeedLatitudezzz","ExifVersion","DateTimeOriginal","DateTimeDigitized","ComponentsConfiguration","CompressedBitsPerPixel","ShutterSpeedValue","ApertureValue","BrightnessValue","ExposureBiasValue","MaxApertureValue","SubjectDistance","MeteringMode","LightSource","Flash","FocalLength","SubjectArea","MakerNote","UserComment","SubSecTime","SubSecTimeOriginal","SubSecTimeDigitized","FlashpixVersion","ColorSpace","PixelXDimension","PixelYDimension","RelatedSoundFile","SubjectLocation","FileSource","SceneType","CustomRendered","ExposureMode","WhiteBalance","DigitalZoomRatio","FocalLengthIn35mmFilm","SceneCaptureType","GainControl","Contrast","Saturation","Sharpness","DeviceSettingDescription","SubjectDistanceRange","ImageUniqueID","CameraOwnerName","BodySerialNumber","LensSpecification","LensMake","LensModel","LensSerialNumber","Gamma","GPSIFD","GPSVersionID","GPSLatitudeRef","GPSLatitude","GPSLongitudeRef","GPSLongitude","GPSAltitudeRef","GPSAltitude","GPSTimeStamp","GPSSatellites","GPSStatus","GPSMeasureMode","GPSDOP","GPSSpeedRef","GPSSpeed","GPSTrackRef","GPSTrack","GPSImgDirectionRef","GPSImgDirection","GPSMapDatum","GPSDestLatitudeRef","GPSDestLatitude","GPSDestLongitudeRef","GPSDestLongitude","GPSDestBearingRef","GPSDestBearing","GPSDestDistanceRef","GPSDestDistance","GPSProcessingMethod","GPSAreaInformation","GPSDateStamp","GPSDifferential","GPSHPositioningError","InteropIFD","InteroperabilityIndex","GPSHelper","degToDmsRational","degFloat","degAbs","abs","minFloat","secFloat","deg","min","sec","round","dmsRationalToDeg","dmsArray","ref","sign","exports","module","piexif"],"sources":["C:/Users/wjx19/Documents/GitHub/I-Prompt/node_modules/piexifjs/piexif.js"],"sourcesContent":["/* piexifjs\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014, 2015 hMatoba(https://github.com/hMatoba)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\n(function () {\r\n    \"use strict\";\r\n    var that = {};\r\n    that.version = \"1.0.4\";\r\n\r\n    that.remove = function (jpeg) {\r\n        var b64 = false;\r\n        if (jpeg.slice(0, 2) == \"\\xff\\xd8\") {\r\n        } else if (jpeg.slice(0, 23) == \"data:image/jpeg;base64,\" || jpeg.slice(0, 22) == \"data:image/jpg;base64,\") {\r\n            jpeg = atob(jpeg.split(\",\")[1]);\r\n            b64 = true;\r\n        } else {\r\n            throw new Error(\"Given data is not jpeg.\");\r\n        }\r\n        \r\n        var segments = splitIntoSegments(jpeg);\r\n        var newSegments = segments.filter(function(seg){\r\n          return  !(seg.slice(0, 2) == \"\\xff\\xe1\" &&\r\n                   seg.slice(4, 10) == \"Exif\\x00\\x00\"); \r\n        });\r\n        \r\n        var new_data = newSegments.join(\"\");\r\n        if (b64) {\r\n            new_data = \"data:image/jpeg;base64,\" + btoa(new_data);\r\n        }\r\n\r\n        return new_data;\r\n    };\r\n\r\n\r\n    that.insert = function (exif, jpeg) {\r\n        var b64 = false;\r\n        if (exif.slice(0, 6) != \"\\x45\\x78\\x69\\x66\\x00\\x00\") {\r\n            throw new Error(\"Given data is not exif.\");\r\n        }\r\n        if (jpeg.slice(0, 2) == \"\\xff\\xd8\") {\r\n        } else if (jpeg.slice(0, 23) == \"data:image/jpeg;base64,\" || jpeg.slice(0, 22) == \"data:image/jpg;base64,\") {\r\n            jpeg = atob(jpeg.split(\",\")[1]);\r\n            b64 = true;\r\n        } else {\r\n            throw new Error(\"Given data is not jpeg.\");\r\n        }\r\n\r\n        var exifStr = \"\\xff\\xe1\" + pack(\">H\", [exif.length + 2]) + exif;\r\n        var segments = splitIntoSegments(jpeg);\r\n        var new_data = mergeSegments(segments, exifStr);\r\n        if (b64) {\r\n            new_data = \"data:image/jpeg;base64,\" + btoa(new_data);\r\n        }\r\n\r\n        return new_data;\r\n    };\r\n\r\n\r\n    that.load = function (data) {\r\n        var input_data;\r\n        if (typeof (data) == \"string\") {\r\n            if (data.slice(0, 2) == \"\\xff\\xd8\") {\r\n                input_data = data;\r\n            } else if (data.slice(0, 23) == \"data:image/jpeg;base64,\" || data.slice(0, 22) == \"data:image/jpg;base64,\") {\r\n                input_data = atob(data.split(\",\")[1]);\r\n            } else if (data.slice(0, 4) == \"Exif\") {\r\n                input_data = data.slice(6);\r\n            } else {\r\n                throw new Error(\"'load' gots invalid file data.\");\r\n            }\r\n        } else {\r\n            throw new Error(\"'load' gots invalid type argument.\");\r\n        }\r\n\r\n        var exifDict = {};\r\n        var exif_dict = {\r\n            \"0th\": {},\r\n            \"Exif\": {},\r\n            \"GPS\": {},\r\n            \"Interop\": {},\r\n            \"1st\": {},\r\n            \"thumbnail\": null\r\n        };\r\n        var exifReader = new ExifReader(input_data);\r\n        if (exifReader.tiftag === null) {\r\n            return exif_dict;\r\n        }\r\n\r\n        if (exifReader.tiftag.slice(0, 2) == \"\\x49\\x49\") {\r\n            exifReader.endian_mark = \"<\";\r\n        } else {\r\n            exifReader.endian_mark = \">\";\r\n        }\r\n\r\n        var pointer = unpack(exifReader.endian_mark + \"L\",\r\n            exifReader.tiftag.slice(4, 8))[0];\r\n        exif_dict[\"0th\"] = exifReader.get_ifd(pointer, \"0th\");\r\n\r\n        var first_ifd_pointer = exif_dict[\"0th\"][\"first_ifd_pointer\"];\r\n        delete exif_dict[\"0th\"][\"first_ifd_pointer\"];\r\n\r\n        if (34665 in exif_dict[\"0th\"]) {\r\n            pointer = exif_dict[\"0th\"][34665];\r\n            exif_dict[\"Exif\"] = exifReader.get_ifd(pointer, \"Exif\");\r\n        }\r\n        if (34853 in exif_dict[\"0th\"]) {\r\n            pointer = exif_dict[\"0th\"][34853];\r\n            exif_dict[\"GPS\"] = exifReader.get_ifd(pointer, \"GPS\");\r\n        }\r\n        if (40965 in exif_dict[\"Exif\"]) {\r\n            pointer = exif_dict[\"Exif\"][40965];\r\n            exif_dict[\"Interop\"] = exifReader.get_ifd(pointer, \"Interop\");\r\n        }\r\n        if (first_ifd_pointer != \"\\x00\\x00\\x00\\x00\") {\r\n            pointer = unpack(exifReader.endian_mark + \"L\",\r\n                first_ifd_pointer)[0];\r\n            exif_dict[\"1st\"] = exifReader.get_ifd(pointer, \"1st\");\r\n            if ((513 in exif_dict[\"1st\"]) && (514 in exif_dict[\"1st\"])) {\r\n                var end = exif_dict[\"1st\"][513] + exif_dict[\"1st\"][514];\r\n                var thumb = exifReader.tiftag.slice(exif_dict[\"1st\"][513], end);\r\n                exif_dict[\"thumbnail\"] = thumb;\r\n            }\r\n        }\r\n\r\n        return exif_dict;\r\n    };\r\n\r\n\r\n    that.dump = function (exif_dict_original) {\r\n        var TIFF_HEADER_LENGTH = 8;\r\n\r\n        var exif_dict = copy(exif_dict_original);\r\n        var header = \"Exif\\x00\\x00\\x4d\\x4d\\x00\\x2a\\x00\\x00\\x00\\x08\";\r\n        var exif_is = false;\r\n        var gps_is = false;\r\n        var interop_is = false;\r\n        var first_is = false;\r\n\r\n        var zeroth_ifd,\r\n            exif_ifd,\r\n            interop_ifd,\r\n            gps_ifd,\r\n            first_ifd;\r\n        \r\n        if (\"0th\" in exif_dict) {\r\n            zeroth_ifd = exif_dict[\"0th\"];\r\n        } else {\r\n            zeroth_ifd = {};\r\n        }\r\n        \r\n        if (((\"Exif\" in exif_dict) && (Object.keys(exif_dict[\"Exif\"]).length)) ||\r\n            ((\"Interop\" in exif_dict) && (Object.keys(exif_dict[\"Interop\"]).length))) {\r\n            zeroth_ifd[34665] = 1;\r\n            exif_is = true;\r\n            exif_ifd = exif_dict[\"Exif\"];\r\n            if ((\"Interop\" in exif_dict) && Object.keys(exif_dict[\"Interop\"]).length) {\r\n                exif_ifd[40965] = 1;\r\n                interop_is = true;\r\n                interop_ifd = exif_dict[\"Interop\"];\r\n            } else if (Object.keys(exif_ifd).indexOf(that.ExifIFD.InteroperabilityTag.toString()) > -1) {\r\n                delete exif_ifd[40965];\r\n            }\r\n        } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.ExifTag.toString()) > -1) {\r\n            delete zeroth_ifd[34665];\r\n        }\r\n\r\n        if ((\"GPS\" in exif_dict) && (Object.keys(exif_dict[\"GPS\"]).length)) {\r\n            zeroth_ifd[that.ImageIFD.GPSTag] = 1;\r\n            gps_is = true;\r\n            gps_ifd = exif_dict[\"GPS\"];\r\n        } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.GPSTag.toString()) > -1) {\r\n            delete zeroth_ifd[that.ImageIFD.GPSTag];\r\n        }\r\n        \r\n        if ((\"1st\" in exif_dict) &&\r\n            (\"thumbnail\" in exif_dict) &&\r\n            (exif_dict[\"thumbnail\"] != null)) {\r\n            first_is = true;\r\n            exif_dict[\"1st\"][513] = 1;\r\n            exif_dict[\"1st\"][514] = 1;\r\n            first_ifd = exif_dict[\"1st\"];\r\n        }\r\n        \r\n        var zeroth_set = _dict_to_bytes(zeroth_ifd, \"0th\", 0);\r\n        var zeroth_length = (zeroth_set[0].length + exif_is * 12 + gps_is * 12 + 4 +\r\n            zeroth_set[1].length);\r\n\r\n        var exif_set,\r\n            exif_bytes = \"\",\r\n            exif_length = 0,\r\n            gps_set,\r\n            gps_bytes = \"\",\r\n            gps_length = 0,\r\n            interop_set,\r\n            interop_bytes = \"\",\r\n            interop_length = 0,\r\n            first_set,\r\n            first_bytes = \"\",\r\n            thumbnail;\r\n        if (exif_is) {\r\n            exif_set = _dict_to_bytes(exif_ifd, \"Exif\", zeroth_length);\r\n            exif_length = exif_set[0].length + interop_is * 12 + exif_set[1].length;\r\n        }\r\n        if (gps_is) {\r\n            gps_set = _dict_to_bytes(gps_ifd, \"GPS\", zeroth_length + exif_length);\r\n            gps_bytes = gps_set.join(\"\");\r\n            gps_length = gps_bytes.length;\r\n        }\r\n        if (interop_is) {\r\n            var offset = zeroth_length + exif_length + gps_length;\r\n            interop_set = _dict_to_bytes(interop_ifd, \"Interop\", offset);\r\n            interop_bytes = interop_set.join(\"\");\r\n            interop_length = interop_bytes.length;\r\n        }\r\n        if (first_is) {\r\n            var offset = zeroth_length + exif_length + gps_length + interop_length;\r\n            first_set = _dict_to_bytes(first_ifd, \"1st\", offset);\r\n            thumbnail = _get_thumbnail(exif_dict[\"thumbnail\"]);\r\n            if (thumbnail.length > 64000) {\r\n                throw new Error(\"Given thumbnail is too large. max 64kB\");\r\n            }\r\n        }\r\n\r\n        var exif_pointer = \"\",\r\n            gps_pointer = \"\",\r\n            interop_pointer = \"\",\r\n            first_ifd_pointer = \"\\x00\\x00\\x00\\x00\";\r\n        if (exif_is) {\r\n            var pointer_value = TIFF_HEADER_LENGTH + zeroth_length;\r\n            var pointer_str = pack(\">L\", [pointer_value]);\r\n            var key = 34665;\r\n            var key_str = pack(\">H\", [key]);\r\n            var type_str = pack(\">H\", [TYPES[\"Long\"]]);\r\n            var length_str = pack(\">L\", [1]);\r\n            exif_pointer = key_str + type_str + length_str + pointer_str;\r\n        }\r\n        if (gps_is) {\r\n            var pointer_value = TIFF_HEADER_LENGTH + zeroth_length + exif_length;\r\n            var pointer_str = pack(\">L\", [pointer_value]);\r\n            var key = 34853;\r\n            var key_str = pack(\">H\", [key]);\r\n            var type_str = pack(\">H\", [TYPES[\"Long\"]]);\r\n            var length_str = pack(\">L\", [1]);\r\n            gps_pointer = key_str + type_str + length_str + pointer_str;\r\n        }\r\n        if (interop_is) {\r\n            var pointer_value = (TIFF_HEADER_LENGTH +\r\n                zeroth_length + exif_length + gps_length);\r\n            var pointer_str = pack(\">L\", [pointer_value]);\r\n            var key = 40965;\r\n            var key_str = pack(\">H\", [key]);\r\n            var type_str = pack(\">H\", [TYPES[\"Long\"]]);\r\n            var length_str = pack(\">L\", [1]);\r\n            interop_pointer = key_str + type_str + length_str + pointer_str;\r\n        }\r\n        if (first_is) {\r\n            var pointer_value = (TIFF_HEADER_LENGTH + zeroth_length +\r\n                exif_length + gps_length + interop_length);\r\n            first_ifd_pointer = pack(\">L\", [pointer_value]);\r\n            var thumbnail_pointer = (pointer_value + first_set[0].length + 24 +\r\n                4 + first_set[1].length);\r\n            var thumbnail_p_bytes = (\"\\x02\\x01\\x00\\x04\\x00\\x00\\x00\\x01\" +\r\n                pack(\">L\", [thumbnail_pointer]));\r\n            var thumbnail_length_bytes = (\"\\x02\\x02\\x00\\x04\\x00\\x00\\x00\\x01\" +\r\n                pack(\">L\", [thumbnail.length]));\r\n            first_bytes = (first_set[0] + thumbnail_p_bytes +\r\n                thumbnail_length_bytes + \"\\x00\\x00\\x00\\x00\" +\r\n                first_set[1] + thumbnail);\r\n        }\r\n\r\n        var zeroth_bytes = (zeroth_set[0] + exif_pointer + gps_pointer +\r\n            first_ifd_pointer + zeroth_set[1]);\r\n        if (exif_is) {\r\n            exif_bytes = exif_set[0] + interop_pointer + exif_set[1];\r\n        }\r\n\r\n        return (header + zeroth_bytes + exif_bytes + gps_bytes +\r\n            interop_bytes + first_bytes);\r\n    };\r\n\r\n\r\n    function copy(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n\r\n    function _get_thumbnail(jpeg) {\r\n        var segments = splitIntoSegments(jpeg);\r\n        while ((\"\\xff\\xe0\" <= segments[1].slice(0, 2)) && (segments[1].slice(0, 2) <= \"\\xff\\xef\")) {\r\n            segments = [segments[0]].concat(segments.slice(2));\r\n        }\r\n        return segments.join(\"\");\r\n    }\r\n\r\n\r\n    function _pack_byte(array) {\r\n        return pack(\">\" + nStr(\"B\", array.length), array);\r\n    }\r\n\r\n\r\n    function _pack_short(array) {\r\n        return pack(\">\" + nStr(\"H\", array.length), array);\r\n    }\r\n\r\n\r\n    function _pack_long(array) {\r\n        return pack(\">\" + nStr(\"L\", array.length), array);\r\n    }\r\n\r\n\r\n    function _value_to_bytes(raw_value, value_type, offset) {\r\n        var four_bytes_over = \"\";\r\n        var value_str = \"\";\r\n        var length,\r\n            new_value,\r\n            num,\r\n            den;\r\n\r\n        if (value_type == \"Byte\") {\r\n            length = raw_value.length;\r\n            if (length <= 4) {\r\n                value_str = (_pack_byte(raw_value) +\r\n                    nStr(\"\\x00\", 4 - length));\r\n            } else {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = _pack_byte(raw_value);\r\n            }\r\n        } else if (value_type == \"Short\") {\r\n            length = raw_value.length;\r\n            if (length <= 2) {\r\n                value_str = (_pack_short(raw_value) +\r\n                    nStr(\"\\x00\\x00\", 2 - length));\r\n            } else {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = _pack_short(raw_value);\r\n            }\r\n        } else if (value_type == \"Long\") {\r\n            length = raw_value.length;\r\n            if (length <= 1) {\r\n                value_str = _pack_long(raw_value);\r\n            } else {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = _pack_long(raw_value);\r\n            }\r\n        } else if (value_type == \"Ascii\") {\r\n            new_value = raw_value + \"\\x00\";\r\n            length = new_value.length;\r\n            if (length > 4) {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = new_value;\r\n            } else {\r\n                value_str = new_value + nStr(\"\\x00\", 4 - length);\r\n            }\r\n        } else if (value_type == \"Rational\") {\r\n            if (typeof (raw_value[0]) == \"number\") {\r\n                length = 1;\r\n                num = raw_value[0];\r\n                den = raw_value[1];\r\n                new_value = pack(\">L\", [num]) + pack(\">L\", [den]);\r\n            } else {\r\n                length = raw_value.length;\r\n                new_value = \"\";\r\n                for (var n = 0; n < length; n++) {\r\n                    num = raw_value[n][0];\r\n                    den = raw_value[n][1];\r\n                    new_value += (pack(\">L\", [num]) +\r\n                        pack(\">L\", [den]));\r\n                }\r\n            }\r\n            value_str = pack(\">L\", [offset]);\r\n            four_bytes_over = new_value;\r\n        } else if (value_type == \"SRational\") {\r\n            if (typeof (raw_value[0]) == \"number\") {\r\n                length = 1;\r\n                num = raw_value[0];\r\n                den = raw_value[1];\r\n                new_value = pack(\">l\", [num]) + pack(\">l\", [den]);\r\n            } else {\r\n                length = raw_value.length;\r\n                new_value = \"\";\r\n                for (var n = 0; n < length; n++) {\r\n                    num = raw_value[n][0];\r\n                    den = raw_value[n][1];\r\n                    new_value += (pack(\">l\", [num]) +\r\n                        pack(\">l\", [den]));\r\n                }\r\n            }\r\n            value_str = pack(\">L\", [offset]);\r\n            four_bytes_over = new_value;\r\n        } else if (value_type == \"Undefined\") {\r\n            length = raw_value.length;\r\n            if (length > 4) {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = raw_value;\r\n            } else {\r\n                value_str = raw_value + nStr(\"\\x00\", 4 - length);\r\n            }\r\n        }\r\n\r\n        var length_str = pack(\">L\", [length]);\r\n\r\n        return [length_str, value_str, four_bytes_over];\r\n    }\r\n\r\n    function _dict_to_bytes(ifd_dict, ifd, ifd_offset) {\r\n        var TIFF_HEADER_LENGTH = 8;\r\n        var tag_count = Object.keys(ifd_dict).length;\r\n        var entry_header = pack(\">H\", [tag_count]);\r\n        var entries_length;\r\n        if ([\"0th\", \"1st\"].indexOf(ifd) > -1) {\r\n            entries_length = 2 + tag_count * 12 + 4;\r\n        } else {\r\n            entries_length = 2 + tag_count * 12;\r\n        }\r\n        var entries = \"\";\r\n        var values = \"\";\r\n        var key;\r\n\r\n        for (var key in ifd_dict) {\r\n            if (typeof (key) == \"string\") {\r\n                key = parseInt(key);\r\n            }\r\n            if ((ifd == \"0th\") && ([34665, 34853].indexOf(key) > -1)) {\r\n                continue;\r\n            } else if ((ifd == \"Exif\") && (key == 40965)) {\r\n                continue;\r\n            } else if ((ifd == \"1st\") && ([513, 514].indexOf(key) > -1)) {\r\n                continue;\r\n            }\r\n\r\n            var raw_value = ifd_dict[key];\r\n            var key_str = pack(\">H\", [key]);\r\n            var value_type = TAGS[ifd][key][\"type\"];\r\n            var type_str = pack(\">H\", [TYPES[value_type]]);\r\n\r\n            if (typeof (raw_value) == \"number\") {\r\n                raw_value = [raw_value];\r\n            }\r\n            var offset = TIFF_HEADER_LENGTH + entries_length + ifd_offset + values.length;\r\n            var b = _value_to_bytes(raw_value, value_type, offset);\r\n            var length_str = b[0];\r\n            var value_str = b[1];\r\n            var four_bytes_over = b[2];\r\n\r\n            entries += key_str + type_str + length_str + value_str;\r\n            values += four_bytes_over;\r\n        }\r\n\r\n        return [entry_header + entries, values];\r\n    }\r\n\r\n\r\n\r\n    function ExifReader(data) {\r\n        var segments,\r\n            app1;\r\n        if (data.slice(0, 2) == \"\\xff\\xd8\") { // JPEG\r\n            segments = splitIntoSegments(data);\r\n            app1 = getExifSeg(segments);\r\n            if (app1) {\r\n                this.tiftag = app1.slice(10);\r\n            } else {\r\n                this.tiftag = null;\r\n            }\r\n        } else if ([\"\\x49\\x49\", \"\\x4d\\x4d\"].indexOf(data.slice(0, 2)) > -1) { // TIFF\r\n            this.tiftag = data;\r\n        } else if (data.slice(0, 4) == \"Exif\") { // Exif\r\n            this.tiftag = data.slice(6);\r\n        } else {\r\n            throw new Error(\"Given file is neither JPEG nor TIFF.\");\r\n        }\r\n    }\r\n\r\n    ExifReader.prototype = {\r\n        get_ifd: function (pointer, ifd_name) {\r\n            var ifd_dict = {};\r\n            var tag_count = unpack(this.endian_mark + \"H\",\r\n                this.tiftag.slice(pointer, pointer + 2))[0];\r\n            var offset = pointer + 2;\r\n            var t;\r\n            if ([\"0th\", \"1st\"].indexOf(ifd_name) > -1) {\r\n                t = \"Image\";\r\n            } else {\r\n                t = ifd_name;\r\n            }\r\n\r\n            for (var x = 0; x < tag_count; x++) {\r\n                pointer = offset + 12 * x;\r\n                var tag = unpack(this.endian_mark + \"H\",\r\n                    this.tiftag.slice(pointer, pointer + 2))[0];\r\n                var value_type = unpack(this.endian_mark + \"H\",\r\n                    this.tiftag.slice(pointer + 2, pointer + 4))[0];\r\n                var value_num = unpack(this.endian_mark + \"L\",\r\n                    this.tiftag.slice(pointer + 4, pointer + 8))[0];\r\n                var value = this.tiftag.slice(pointer + 8, pointer + 12);\r\n\r\n                var v_set = [value_type, value_num, value];\r\n                if (tag in TAGS[t]) {\r\n                    ifd_dict[tag] = this.convert_value(v_set);\r\n                }\r\n            }\r\n\r\n            if (ifd_name == \"0th\") {\r\n                pointer = offset + 12 * tag_count;\r\n                ifd_dict[\"first_ifd_pointer\"] = this.tiftag.slice(pointer, pointer + 4);\r\n            }\r\n\r\n            return ifd_dict;\r\n        },\r\n\r\n        convert_value: function (val) {\r\n            var data = null;\r\n            var t = val[0];\r\n            var length = val[1];\r\n            var value = val[2];\r\n            var pointer;\r\n\r\n            if (t == 1) { // BYTE\r\n                if (length > 4) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"B\", length),\r\n                        this.tiftag.slice(pointer, pointer + length));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"B\", length), value.slice(0, length));\r\n                }\r\n            } else if (t == 2) { // ASCII\r\n                if (length > 4) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = this.tiftag.slice(pointer, pointer + length - 1);\r\n                } else {\r\n                    data = value.slice(0, length - 1);\r\n                }\r\n            } else if (t == 3) { // SHORT\r\n                if (length > 2) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"H\", length),\r\n                        this.tiftag.slice(pointer, pointer + length * 2));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"H\", length),\r\n                        value.slice(0, length * 2));\r\n                }\r\n            } else if (t == 4) { // LONG\r\n                if (length > 1) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"L\", length),\r\n                        this.tiftag.slice(pointer, pointer + length * 4));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"L\", length),\r\n                        value);\r\n                }\r\n            } else if (t == 5) { // RATIONAL\r\n                pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                if (length > 1) {\r\n                    data = [];\r\n                    for (var x = 0; x < length; x++) {\r\n                        data.push([unpack(this.endian_mark + \"L\",\r\n                                this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0],\r\n                                   unpack(this.endian_mark + \"L\",\r\n                                this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]\r\n                                   ]);\r\n                    }\r\n                } else {\r\n                    data = [unpack(this.endian_mark + \"L\",\r\n                            this.tiftag.slice(pointer, pointer + 4))[0],\r\n                            unpack(this.endian_mark + \"L\",\r\n                            this.tiftag.slice(pointer + 4, pointer + 8))[0]\r\n                            ];\r\n                }\r\n            } else if (t == 7) { // UNDEFINED BYTES\r\n                if (length > 4) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = this.tiftag.slice(pointer, pointer + length);\r\n                } else {\r\n                    data = value.slice(0, length);\r\n                }\r\n            } else if (t == 9) { // SLONG\r\n                if (length > 1) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"l\", length),\r\n                        this.tiftag.slice(pointer, pointer + length * 4));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"l\", length),\r\n                        value);\r\n                }\r\n            } else if (t == 10) { // SRATIONAL\r\n                pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                if (length > 1) {\r\n                    data = [];\r\n                    for (var x = 0; x < length; x++) {\r\n                        data.push([unpack(this.endian_mark + \"l\",\r\n                                this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0],\r\n                                   unpack(this.endian_mark + \"l\",\r\n                                this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]\r\n                                  ]);\r\n                    }\r\n                } else {\r\n                    data = [unpack(this.endian_mark + \"l\",\r\n                            this.tiftag.slice(pointer, pointer + 4))[0],\r\n                            unpack(this.endian_mark + \"l\",\r\n                            this.tiftag.slice(pointer + 4, pointer + 8))[0]\r\n                           ];\r\n                }\r\n            } else {\r\n                throw new Error(\"Exif might be wrong. Got incorrect value \" +\r\n                    \"type to decode. type:\" + t);\r\n            }\r\n\r\n            if ((data instanceof Array) && (data.length == 1)) {\r\n                return data[0];\r\n            } else {\r\n                return data;\r\n            }\r\n        },\r\n    };\r\n\r\n\r\n    if (typeof window !== \"undefined\" && typeof window.btoa === \"function\") {\r\n        var btoa = window.btoa;\r\n    }\r\n    if (typeof btoa === \"undefined\") {\r\n        var btoa = function (input) {        var output = \"\";\r\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n            var i = 0;\r\n            var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n            while (i < input.length) {\r\n\r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n\r\n                enc1 = chr1 >> 2;\r\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n                enc4 = chr3 & 63;\r\n\r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n\r\n                output = output +\r\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\r\n            }\r\n\r\n            return output;\r\n        };\r\n    }\r\n    \r\n    \r\n    if (typeof window !== \"undefined\" && typeof window.atob === \"function\") {\r\n        var atob = window.atob;\r\n    }\r\n    if (typeof atob === \"undefined\") {\r\n        var atob = function (input) {\r\n            var output = \"\";\r\n            var chr1, chr2, chr3;\r\n            var enc1, enc2, enc3, enc4;\r\n            var i = 0;\r\n            var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n            while (i < input.length) {\r\n\r\n                enc1 = keyStr.indexOf(input.charAt(i++));\r\n                enc2 = keyStr.indexOf(input.charAt(i++));\r\n                enc3 = keyStr.indexOf(input.charAt(i++));\r\n                enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n                chr1 = (enc1 << 2) | (enc2 >> 4);\r\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n                chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n                output = output + String.fromCharCode(chr1);\r\n\r\n                if (enc3 != 64) {\r\n                    output = output + String.fromCharCode(chr2);\r\n                }\r\n                if (enc4 != 64) {\r\n                    output = output + String.fromCharCode(chr3);\r\n                }\r\n\r\n            }\r\n\r\n            return output;\r\n        };\r\n    }\r\n\r\n\r\n    function getImageSize(imageArray) {\r\n        var segments = slice2Segments(imageArray);\r\n        var seg,\r\n            width,\r\n            height,\r\n            SOF = [192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207];\r\n\r\n        for (var x = 0; x < segments.length; x++) {\r\n            seg = segments[x];\r\n            if (SOF.indexOf(seg[1]) >= 0) {\r\n                height = seg[5] * 256 + seg[6];\r\n                width = seg[7] * 256 + seg[8];\r\n                break;\r\n            }\r\n        }\r\n        return [width, height];\r\n    }\r\n\r\n\r\n    function pack(mark, array) {\r\n        if (!(array instanceof Array)) {\r\n            throw new Error(\"'pack' error. Got invalid type argument.\");\r\n        }\r\n        if ((mark.length - 1) != array.length) {\r\n            throw new Error(\"'pack' error. \" + (mark.length - 1) + \" marks, \" + array.length + \" elements.\");\r\n        }\r\n\r\n        var littleEndian;\r\n        if (mark[0] == \"<\") {\r\n            littleEndian = true;\r\n        } else if (mark[0] == \">\") {\r\n            littleEndian = false;\r\n        } else {\r\n            throw new Error(\"\");\r\n        }\r\n        var packed = \"\";\r\n        var p = 1;\r\n        var val = null;\r\n        var c = null;\r\n        var valStr = null;\r\n\r\n        while (c = mark[p]) {\r\n            if (c.toLowerCase() == \"b\") {\r\n                val = array[p - 1];\r\n                if ((c == \"b\") && (val < 0)) {\r\n                    val += 0x100;\r\n                }\r\n                if ((val > 0xff) || (val < 0)) {\r\n                    throw new Error(\"'pack' error.\");\r\n                } else {\r\n                    valStr = String.fromCharCode(val);\r\n                }\r\n            } else if (c == \"H\") {\r\n                val = array[p - 1];\r\n                if ((val > 0xffff) || (val < 0)) {\r\n                    throw new Error(\"'pack' error.\");\r\n                } else {\r\n                    valStr = String.fromCharCode(Math.floor((val % 0x10000) / 0x100)) +\r\n                        String.fromCharCode(val % 0x100);\r\n                    if (littleEndian) {\r\n                        valStr = valStr.split(\"\").reverse().join(\"\");\r\n                    }\r\n                }\r\n            } else if (c.toLowerCase() == \"l\") {\r\n                val = array[p - 1];\r\n                if ((c == \"l\") && (val < 0)) {\r\n                    val += 0x100000000;\r\n                }\r\n                if ((val > 0xffffffff) || (val < 0)) {\r\n                    throw new Error(\"'pack' error.\");\r\n                } else {\r\n                    valStr = String.fromCharCode(Math.floor(val / 0x1000000)) +\r\n                        String.fromCharCode(Math.floor((val % 0x1000000) / 0x10000)) +\r\n                        String.fromCharCode(Math.floor((val % 0x10000) / 0x100)) +\r\n                        String.fromCharCode(val % 0x100);\r\n                    if (littleEndian) {\r\n                        valStr = valStr.split(\"\").reverse().join(\"\");\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"'pack' error.\");\r\n            }\r\n\r\n            packed += valStr;\r\n            p += 1;\r\n        }\r\n\r\n        return packed;\r\n    }\r\n\r\n    function unpack(mark, str) {\r\n        if (typeof (str) != \"string\") {\r\n            throw new Error(\"'unpack' error. Got invalid type argument.\");\r\n        }\r\n        var l = 0;\r\n        for (var markPointer = 1; markPointer < mark.length; markPointer++) {\r\n            if (mark[markPointer].toLowerCase() == \"b\") {\r\n                l += 1;\r\n            } else if (mark[markPointer].toLowerCase() == \"h\") {\r\n                l += 2;\r\n            } else if (mark[markPointer].toLowerCase() == \"l\") {\r\n                l += 4;\r\n            } else {\r\n                throw new Error(\"'unpack' error. Got invalid mark.\");\r\n            }\r\n        }\r\n\r\n        if (l != str.length) {\r\n            throw new Error(\"'unpack' error. Mismatch between symbol and string length. \" + l + \":\" + str.length);\r\n        }\r\n\r\n        var littleEndian;\r\n        if (mark[0] == \"<\") {\r\n            littleEndian = true;\r\n        } else if (mark[0] == \">\") {\r\n            littleEndian = false;\r\n        } else {\r\n            throw new Error(\"'unpack' error.\");\r\n        }\r\n        var unpacked = [];\r\n        var strPointer = 0;\r\n        var p = 1;\r\n        var val = null;\r\n        var c = null;\r\n        var length = null;\r\n        var sliced = \"\";\r\n\r\n        while (c = mark[p]) {\r\n            if (c.toLowerCase() == \"b\") {\r\n                length = 1;\r\n                sliced = str.slice(strPointer, strPointer + length);\r\n                val = sliced.charCodeAt(0);\r\n                if ((c == \"b\") && (val >= 0x80)) {\r\n                    val -= 0x100;\r\n                }\r\n            } else if (c == \"H\") {\r\n                length = 2;\r\n                sliced = str.slice(strPointer, strPointer + length);\r\n                if (littleEndian) {\r\n                    sliced = sliced.split(\"\").reverse().join(\"\");\r\n                }\r\n                val = sliced.charCodeAt(0) * 0x100 +\r\n                    sliced.charCodeAt(1);\r\n            } else if (c.toLowerCase() == \"l\") {\r\n                length = 4;\r\n                sliced = str.slice(strPointer, strPointer + length);\r\n                if (littleEndian) {\r\n                    sliced = sliced.split(\"\").reverse().join(\"\");\r\n                }\r\n                val = sliced.charCodeAt(0) * 0x1000000 +\r\n                    sliced.charCodeAt(1) * 0x10000 +\r\n                    sliced.charCodeAt(2) * 0x100 +\r\n                    sliced.charCodeAt(3);\r\n                if ((c == \"l\") && (val >= 0x80000000)) {\r\n                    val -= 0x100000000;\r\n                }\r\n            } else {\r\n                throw new Error(\"'unpack' error. \" + c);\r\n            }\r\n\r\n            unpacked.push(val);\r\n            strPointer += length;\r\n            p += 1;\r\n        }\r\n\r\n        return unpacked;\r\n    }\r\n\r\n    function nStr(ch, num) {\r\n        var str = \"\";\r\n        for (var i = 0; i < num; i++) {\r\n            str += ch;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    function splitIntoSegments(data) {\r\n        if (data.slice(0, 2) != \"\\xff\\xd8\") {\r\n            throw new Error(\"Given data isn't JPEG.\");\r\n        }\r\n\r\n        var head = 2;\r\n        var segments = [\"\\xff\\xd8\"];\r\n        while (true) {\r\n            if (data.slice(head, head + 2) == \"\\xff\\xda\") {\r\n                segments.push(data.slice(head));\r\n                break;\r\n            } else {\r\n                var length = unpack(\">H\", data.slice(head + 2, head + 4))[0];\r\n                var endPoint = head + length + 2;\r\n                segments.push(data.slice(head, endPoint));\r\n                head = endPoint;\r\n            }\r\n\r\n            if (head >= data.length) {\r\n                throw new Error(\"Wrong JPEG data.\");\r\n            }\r\n        }\r\n        return segments;\r\n    }\r\n\r\n\r\n    function getExifSeg(segments) {\r\n        var seg;\r\n        for (var i = 0; i < segments.length; i++) {\r\n            seg = segments[i];\r\n            if (seg.slice(0, 2) == \"\\xff\\xe1\" &&\r\n                   seg.slice(4, 10) == \"Exif\\x00\\x00\") {\r\n                return seg;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    function mergeSegments(segments, exif) {\r\n        var hasExifSegment = false;\r\n        var additionalAPP1ExifSegments = [];\r\n\r\n        segments.forEach(function(segment, i) {\r\n            // Replace first occurence of APP1:Exif segment\r\n            if (segment.slice(0, 2) == \"\\xff\\xe1\" &&\r\n                segment.slice(4, 10) == \"Exif\\x00\\x00\"\r\n            ) {\r\n                if (!hasExifSegment) {\r\n                    segments[i] = exif;\r\n                    hasExifSegment = true;\r\n                } else {\r\n                    additionalAPP1ExifSegments.unshift(i);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Remove additional occurences of APP1:Exif segment\r\n        additionalAPP1ExifSegments.forEach(function(segmentIndex) {\r\n            segments.splice(segmentIndex, 1);\r\n        });\r\n\r\n        if (!hasExifSegment && exif) {\r\n            segments = [segments[0], exif].concat(segments.slice(1));\r\n        }\r\n\r\n        return segments.join(\"\");\r\n    }\r\n\r\n\r\n    function toHex(str) {\r\n        var hexStr = \"\";\r\n        for (var i = 0; i < str.length; i++) {\r\n            var h = str.charCodeAt(i);\r\n            var hex = ((h < 10) ? \"0\" : \"\") + h.toString(16);\r\n            hexStr += hex + \" \";\r\n        }\r\n        return hexStr;\r\n    }\r\n\r\n\r\n    var TYPES = {\r\n        \"Byte\": 1,\r\n        \"Ascii\": 2,\r\n        \"Short\": 3,\r\n        \"Long\": 4,\r\n        \"Rational\": 5,\r\n        \"Undefined\": 7,\r\n        \"SLong\": 9,\r\n        \"SRational\": 10\r\n    };\r\n\r\n\r\n    var TAGS = {\r\n        'Image': {\r\n            11: {\r\n                'name': 'ProcessingSoftware',\r\n                'type': 'Ascii'\r\n            },\r\n            254: {\r\n                'name': 'NewSubfileType',\r\n                'type': 'Long'\r\n            },\r\n            255: {\r\n                'name': 'SubfileType',\r\n                'type': 'Short'\r\n            },\r\n            256: {\r\n                'name': 'ImageWidth',\r\n                'type': 'Long'\r\n            },\r\n            257: {\r\n                'name': 'ImageLength',\r\n                'type': 'Long'\r\n            },\r\n            258: {\r\n                'name': 'BitsPerSample',\r\n                'type': 'Short'\r\n            },\r\n            259: {\r\n                'name': 'Compression',\r\n                'type': 'Short'\r\n            },\r\n            262: {\r\n                'name': 'PhotometricInterpretation',\r\n                'type': 'Short'\r\n            },\r\n            263: {\r\n                'name': 'Threshholding',\r\n                'type': 'Short'\r\n            },\r\n            264: {\r\n                'name': 'CellWidth',\r\n                'type': 'Short'\r\n            },\r\n            265: {\r\n                'name': 'CellLength',\r\n                'type': 'Short'\r\n            },\r\n            266: {\r\n                'name': 'FillOrder',\r\n                'type': 'Short'\r\n            },\r\n            269: {\r\n                'name': 'DocumentName',\r\n                'type': 'Ascii'\r\n            },\r\n            270: {\r\n                'name': 'ImageDescription',\r\n                'type': 'Ascii'\r\n            },\r\n            271: {\r\n                'name': 'Make',\r\n                'type': 'Ascii'\r\n            },\r\n            272: {\r\n                'name': 'Model',\r\n                'type': 'Ascii'\r\n            },\r\n            273: {\r\n                'name': 'StripOffsets',\r\n                'type': 'Long'\r\n            },\r\n            274: {\r\n                'name': 'Orientation',\r\n                'type': 'Short'\r\n            },\r\n            277: {\r\n                'name': 'SamplesPerPixel',\r\n                'type': 'Short'\r\n            },\r\n            278: {\r\n                'name': 'RowsPerStrip',\r\n                'type': 'Long'\r\n            },\r\n            279: {\r\n                'name': 'StripByteCounts',\r\n                'type': 'Long'\r\n            },\r\n            282: {\r\n                'name': 'XResolution',\r\n                'type': 'Rational'\r\n            },\r\n            283: {\r\n                'name': 'YResolution',\r\n                'type': 'Rational'\r\n            },\r\n            284: {\r\n                'name': 'PlanarConfiguration',\r\n                'type': 'Short'\r\n            },\r\n            290: {\r\n                'name': 'GrayResponseUnit',\r\n                'type': 'Short'\r\n            },\r\n            291: {\r\n                'name': 'GrayResponseCurve',\r\n                'type': 'Short'\r\n            },\r\n            292: {\r\n                'name': 'T4Options',\r\n                'type': 'Long'\r\n            },\r\n            293: {\r\n                'name': 'T6Options',\r\n                'type': 'Long'\r\n            },\r\n            296: {\r\n                'name': 'ResolutionUnit',\r\n                'type': 'Short'\r\n            },\r\n            301: {\r\n                'name': 'TransferFunction',\r\n                'type': 'Short'\r\n            },\r\n            305: {\r\n                'name': 'Software',\r\n                'type': 'Ascii'\r\n            },\r\n            306: {\r\n                'name': 'DateTime',\r\n                'type': 'Ascii'\r\n            },\r\n            315: {\r\n                'name': 'Artist',\r\n                'type': 'Ascii'\r\n            },\r\n            316: {\r\n                'name': 'HostComputer',\r\n                'type': 'Ascii'\r\n            },\r\n            317: {\r\n                'name': 'Predictor',\r\n                'type': 'Short'\r\n            },\r\n            318: {\r\n                'name': 'WhitePoint',\r\n                'type': 'Rational'\r\n            },\r\n            319: {\r\n                'name': 'PrimaryChromaticities',\r\n                'type': 'Rational'\r\n            },\r\n            320: {\r\n                'name': 'ColorMap',\r\n                'type': 'Short'\r\n            },\r\n            321: {\r\n                'name': 'HalftoneHints',\r\n                'type': 'Short'\r\n            },\r\n            322: {\r\n                'name': 'TileWidth',\r\n                'type': 'Short'\r\n            },\r\n            323: {\r\n                'name': 'TileLength',\r\n                'type': 'Short'\r\n            },\r\n            324: {\r\n                'name': 'TileOffsets',\r\n                'type': 'Short'\r\n            },\r\n            325: {\r\n                'name': 'TileByteCounts',\r\n                'type': 'Short'\r\n            },\r\n            330: {\r\n                'name': 'SubIFDs',\r\n                'type': 'Long'\r\n            },\r\n            332: {\r\n                'name': 'InkSet',\r\n                'type': 'Short'\r\n            },\r\n            333: {\r\n                'name': 'InkNames',\r\n                'type': 'Ascii'\r\n            },\r\n            334: {\r\n                'name': 'NumberOfInks',\r\n                'type': 'Short'\r\n            },\r\n            336: {\r\n                'name': 'DotRange',\r\n                'type': 'Byte'\r\n            },\r\n            337: {\r\n                'name': 'TargetPrinter',\r\n                'type': 'Ascii'\r\n            },\r\n            338: {\r\n                'name': 'ExtraSamples',\r\n                'type': 'Short'\r\n            },\r\n            339: {\r\n                'name': 'SampleFormat',\r\n                'type': 'Short'\r\n            },\r\n            340: {\r\n                'name': 'SMinSampleValue',\r\n                'type': 'Short'\r\n            },\r\n            341: {\r\n                'name': 'SMaxSampleValue',\r\n                'type': 'Short'\r\n            },\r\n            342: {\r\n                'name': 'TransferRange',\r\n                'type': 'Short'\r\n            },\r\n            343: {\r\n                'name': 'ClipPath',\r\n                'type': 'Byte'\r\n            },\r\n            344: {\r\n                'name': 'XClipPathUnits',\r\n                'type': 'Long'\r\n            },\r\n            345: {\r\n                'name': 'YClipPathUnits',\r\n                'type': 'Long'\r\n            },\r\n            346: {\r\n                'name': 'Indexed',\r\n                'type': 'Short'\r\n            },\r\n            347: {\r\n                'name': 'JPEGTables',\r\n                'type': 'Undefined'\r\n            },\r\n            351: {\r\n                'name': 'OPIProxy',\r\n                'type': 'Short'\r\n            },\r\n            512: {\r\n                'name': 'JPEGProc',\r\n                'type': 'Long'\r\n            },\r\n            513: {\r\n                'name': 'JPEGInterchangeFormat',\r\n                'type': 'Long'\r\n            },\r\n            514: {\r\n                'name': 'JPEGInterchangeFormatLength',\r\n                'type': 'Long'\r\n            },\r\n            515: {\r\n                'name': 'JPEGRestartInterval',\r\n                'type': 'Short'\r\n            },\r\n            517: {\r\n                'name': 'JPEGLosslessPredictors',\r\n                'type': 'Short'\r\n            },\r\n            518: {\r\n                'name': 'JPEGPointTransforms',\r\n                'type': 'Short'\r\n            },\r\n            519: {\r\n                'name': 'JPEGQTables',\r\n                'type': 'Long'\r\n            },\r\n            520: {\r\n                'name': 'JPEGDCTables',\r\n                'type': 'Long'\r\n            },\r\n            521: {\r\n                'name': 'JPEGACTables',\r\n                'type': 'Long'\r\n            },\r\n            529: {\r\n                'name': 'YCbCrCoefficients',\r\n                'type': 'Rational'\r\n            },\r\n            530: {\r\n                'name': 'YCbCrSubSampling',\r\n                'type': 'Short'\r\n            },\r\n            531: {\r\n                'name': 'YCbCrPositioning',\r\n                'type': 'Short'\r\n            },\r\n            532: {\r\n                'name': 'ReferenceBlackWhite',\r\n                'type': 'Rational'\r\n            },\r\n            700: {\r\n                'name': 'XMLPacket',\r\n                'type': 'Byte'\r\n            },\r\n            18246: {\r\n                'name': 'Rating',\r\n                'type': 'Short'\r\n            },\r\n            18249: {\r\n                'name': 'RatingPercent',\r\n                'type': 'Short'\r\n            },\r\n            32781: {\r\n                'name': 'ImageID',\r\n                'type': 'Ascii'\r\n            },\r\n            33421: {\r\n                'name': 'CFARepeatPatternDim',\r\n                'type': 'Short'\r\n            },\r\n            33422: {\r\n                'name': 'CFAPattern',\r\n                'type': 'Byte'\r\n            },\r\n            33423: {\r\n                'name': 'BatteryLevel',\r\n                'type': 'Rational'\r\n            },\r\n            33432: {\r\n                'name': 'Copyright',\r\n                'type': 'Ascii'\r\n            },\r\n            33434: {\r\n                'name': 'ExposureTime',\r\n                'type': 'Rational'\r\n            },\r\n            34377: {\r\n                'name': 'ImageResources',\r\n                'type': 'Byte'\r\n            },\r\n            34665: {\r\n                'name': 'ExifTag',\r\n                'type': 'Long'\r\n            },\r\n            34675: {\r\n                'name': 'InterColorProfile',\r\n                'type': 'Undefined'\r\n            },\r\n            34853: {\r\n                'name': 'GPSTag',\r\n                'type': 'Long'\r\n            },\r\n            34857: {\r\n                'name': 'Interlace',\r\n                'type': 'Short'\r\n            },\r\n            34858: {\r\n                'name': 'TimeZoneOffset',\r\n                'type': 'Long'\r\n            },\r\n            34859: {\r\n                'name': 'SelfTimerMode',\r\n                'type': 'Short'\r\n            },\r\n            37387: {\r\n                'name': 'FlashEnergy',\r\n                'type': 'Rational'\r\n            },\r\n            37388: {\r\n                'name': 'SpatialFrequencyResponse',\r\n                'type': 'Undefined'\r\n            },\r\n            37389: {\r\n                'name': 'Noise',\r\n                'type': 'Undefined'\r\n            },\r\n            37390: {\r\n                'name': 'FocalPlaneXResolution',\r\n                'type': 'Rational'\r\n            },\r\n            37391: {\r\n                'name': 'FocalPlaneYResolution',\r\n                'type': 'Rational'\r\n            },\r\n            37392: {\r\n                'name': 'FocalPlaneResolutionUnit',\r\n                'type': 'Short'\r\n            },\r\n            37393: {\r\n                'name': 'ImageNumber',\r\n                'type': 'Long'\r\n            },\r\n            37394: {\r\n                'name': 'SecurityClassification',\r\n                'type': 'Ascii'\r\n            },\r\n            37395: {\r\n                'name': 'ImageHistory',\r\n                'type': 'Ascii'\r\n            },\r\n            37397: {\r\n                'name': 'ExposureIndex',\r\n                'type': 'Rational'\r\n            },\r\n            37398: {\r\n                'name': 'TIFFEPStandardID',\r\n                'type': 'Byte'\r\n            },\r\n            37399: {\r\n                'name': 'SensingMethod',\r\n                'type': 'Short'\r\n            },\r\n            40091: {\r\n                'name': 'XPTitle',\r\n                'type': 'Byte'\r\n            },\r\n            40092: {\r\n                'name': 'XPComment',\r\n                'type': 'Byte'\r\n            },\r\n            40093: {\r\n                'name': 'XPAuthor',\r\n                'type': 'Byte'\r\n            },\r\n            40094: {\r\n                'name': 'XPKeywords',\r\n                'type': 'Byte'\r\n            },\r\n            40095: {\r\n                'name': 'XPSubject',\r\n                'type': 'Byte'\r\n            },\r\n            50341: {\r\n                'name': 'PrintImageMatching',\r\n                'type': 'Undefined'\r\n            },\r\n            50706: {\r\n                'name': 'DNGVersion',\r\n                'type': 'Byte'\r\n            },\r\n            50707: {\r\n                'name': 'DNGBackwardVersion',\r\n                'type': 'Byte'\r\n            },\r\n            50708: {\r\n                'name': 'UniqueCameraModel',\r\n                'type': 'Ascii'\r\n            },\r\n            50709: {\r\n                'name': 'LocalizedCameraModel',\r\n                'type': 'Byte'\r\n            },\r\n            50710: {\r\n                'name': 'CFAPlaneColor',\r\n                'type': 'Byte'\r\n            },\r\n            50711: {\r\n                'name': 'CFALayout',\r\n                'type': 'Short'\r\n            },\r\n            50712: {\r\n                'name': 'LinearizationTable',\r\n                'type': 'Short'\r\n            },\r\n            50713: {\r\n                'name': 'BlackLevelRepeatDim',\r\n                'type': 'Short'\r\n            },\r\n            50714: {\r\n                'name': 'BlackLevel',\r\n                'type': 'Rational'\r\n            },\r\n            50715: {\r\n                'name': 'BlackLevelDeltaH',\r\n                'type': 'SRational'\r\n            },\r\n            50716: {\r\n                'name': 'BlackLevelDeltaV',\r\n                'type': 'SRational'\r\n            },\r\n            50717: {\r\n                'name': 'WhiteLevel',\r\n                'type': 'Short'\r\n            },\r\n            50718: {\r\n                'name': 'DefaultScale',\r\n                'type': 'Rational'\r\n            },\r\n            50719: {\r\n                'name': 'DefaultCropOrigin',\r\n                'type': 'Short'\r\n            },\r\n            50720: {\r\n                'name': 'DefaultCropSize',\r\n                'type': 'Short'\r\n            },\r\n            50721: {\r\n                'name': 'ColorMatrix1',\r\n                'type': 'SRational'\r\n            },\r\n            50722: {\r\n                'name': 'ColorMatrix2',\r\n                'type': 'SRational'\r\n            },\r\n            50723: {\r\n                'name': 'CameraCalibration1',\r\n                'type': 'SRational'\r\n            },\r\n            50724: {\r\n                'name': 'CameraCalibration2',\r\n                'type': 'SRational'\r\n            },\r\n            50725: {\r\n                'name': 'ReductionMatrix1',\r\n                'type': 'SRational'\r\n            },\r\n            50726: {\r\n                'name': 'ReductionMatrix2',\r\n                'type': 'SRational'\r\n            },\r\n            50727: {\r\n                'name': 'AnalogBalance',\r\n                'type': 'Rational'\r\n            },\r\n            50728: {\r\n                'name': 'AsShotNeutral',\r\n                'type': 'Short'\r\n            },\r\n            50729: {\r\n                'name': 'AsShotWhiteXY',\r\n                'type': 'Rational'\r\n            },\r\n            50730: {\r\n                'name': 'BaselineExposure',\r\n                'type': 'SRational'\r\n            },\r\n            50731: {\r\n                'name': 'BaselineNoise',\r\n                'type': 'Rational'\r\n            },\r\n            50732: {\r\n                'name': 'BaselineSharpness',\r\n                'type': 'Rational'\r\n            },\r\n            50733: {\r\n                'name': 'BayerGreenSplit',\r\n                'type': 'Long'\r\n            },\r\n            50734: {\r\n                'name': 'LinearResponseLimit',\r\n                'type': 'Rational'\r\n            },\r\n            50735: {\r\n                'name': 'CameraSerialNumber',\r\n                'type': 'Ascii'\r\n            },\r\n            50736: {\r\n                'name': 'LensInfo',\r\n                'type': 'Rational'\r\n            },\r\n            50737: {\r\n                'name': 'ChromaBlurRadius',\r\n                'type': 'Rational'\r\n            },\r\n            50738: {\r\n                'name': 'AntiAliasStrength',\r\n                'type': 'Rational'\r\n            },\r\n            50739: {\r\n                'name': 'ShadowScale',\r\n                'type': 'SRational'\r\n            },\r\n            50740: {\r\n                'name': 'DNGPrivateData',\r\n                'type': 'Byte'\r\n            },\r\n            50741: {\r\n                'name': 'MakerNoteSafety',\r\n                'type': 'Short'\r\n            },\r\n            50778: {\r\n                'name': 'CalibrationIlluminant1',\r\n                'type': 'Short'\r\n            },\r\n            50779: {\r\n                'name': 'CalibrationIlluminant2',\r\n                'type': 'Short'\r\n            },\r\n            50780: {\r\n                'name': 'BestQualityScale',\r\n                'type': 'Rational'\r\n            },\r\n            50781: {\r\n                'name': 'RawDataUniqueID',\r\n                'type': 'Byte'\r\n            },\r\n            50827: {\r\n                'name': 'OriginalRawFileName',\r\n                'type': 'Byte'\r\n            },\r\n            50828: {\r\n                'name': 'OriginalRawFileData',\r\n                'type': 'Undefined'\r\n            },\r\n            50829: {\r\n                'name': 'ActiveArea',\r\n                'type': 'Short'\r\n            },\r\n            50830: {\r\n                'name': 'MaskedAreas',\r\n                'type': 'Short'\r\n            },\r\n            50831: {\r\n                'name': 'AsShotICCProfile',\r\n                'type': 'Undefined'\r\n            },\r\n            50832: {\r\n                'name': 'AsShotPreProfileMatrix',\r\n                'type': 'SRational'\r\n            },\r\n            50833: {\r\n                'name': 'CurrentICCProfile',\r\n                'type': 'Undefined'\r\n            },\r\n            50834: {\r\n                'name': 'CurrentPreProfileMatrix',\r\n                'type': 'SRational'\r\n            },\r\n            50879: {\r\n                'name': 'ColorimetricReference',\r\n                'type': 'Short'\r\n            },\r\n            50931: {\r\n                'name': 'CameraCalibrationSignature',\r\n                'type': 'Byte'\r\n            },\r\n            50932: {\r\n                'name': 'ProfileCalibrationSignature',\r\n                'type': 'Byte'\r\n            },\r\n            50934: {\r\n                'name': 'AsShotProfileName',\r\n                'type': 'Byte'\r\n            },\r\n            50935: {\r\n                'name': 'NoiseReductionApplied',\r\n                'type': 'Rational'\r\n            },\r\n            50936: {\r\n                'name': 'ProfileName',\r\n                'type': 'Byte'\r\n            },\r\n            50937: {\r\n                'name': 'ProfileHueSatMapDims',\r\n                'type': 'Long'\r\n            },\r\n            50938: {\r\n                'name': 'ProfileHueSatMapData1',\r\n                'type': 'Float'\r\n            },\r\n            50939: {\r\n                'name': 'ProfileHueSatMapData2',\r\n                'type': 'Float'\r\n            },\r\n            50940: {\r\n                'name': 'ProfileToneCurve',\r\n                'type': 'Float'\r\n            },\r\n            50941: {\r\n                'name': 'ProfileEmbedPolicy',\r\n                'type': 'Long'\r\n            },\r\n            50942: {\r\n                'name': 'ProfileCopyright',\r\n                'type': 'Byte'\r\n            },\r\n            50964: {\r\n                'name': 'ForwardMatrix1',\r\n                'type': 'SRational'\r\n            },\r\n            50965: {\r\n                'name': 'ForwardMatrix2',\r\n                'type': 'SRational'\r\n            },\r\n            50966: {\r\n                'name': 'PreviewApplicationName',\r\n                'type': 'Byte'\r\n            },\r\n            50967: {\r\n                'name': 'PreviewApplicationVersion',\r\n                'type': 'Byte'\r\n            },\r\n            50968: {\r\n                'name': 'PreviewSettingsName',\r\n                'type': 'Byte'\r\n            },\r\n            50969: {\r\n                'name': 'PreviewSettingsDigest',\r\n                'type': 'Byte'\r\n            },\r\n            50970: {\r\n                'name': 'PreviewColorSpace',\r\n                'type': 'Long'\r\n            },\r\n            50971: {\r\n                'name': 'PreviewDateTime',\r\n                'type': 'Ascii'\r\n            },\r\n            50972: {\r\n                'name': 'RawImageDigest',\r\n                'type': 'Undefined'\r\n            },\r\n            50973: {\r\n                'name': 'OriginalRawFileDigest',\r\n                'type': 'Undefined'\r\n            },\r\n            50974: {\r\n                'name': 'SubTileBlockSize',\r\n                'type': 'Long'\r\n            },\r\n            50975: {\r\n                'name': 'RowInterleaveFactor',\r\n                'type': 'Long'\r\n            },\r\n            50981: {\r\n                'name': 'ProfileLookTableDims',\r\n                'type': 'Long'\r\n            },\r\n            50982: {\r\n                'name': 'ProfileLookTableData',\r\n                'type': 'Float'\r\n            },\r\n            51008: {\r\n                'name': 'OpcodeList1',\r\n                'type': 'Undefined'\r\n            },\r\n            51009: {\r\n                'name': 'OpcodeList2',\r\n                'type': 'Undefined'\r\n            },\r\n            51022: {\r\n                'name': 'OpcodeList3',\r\n                'type': 'Undefined'\r\n            }\r\n        },\r\n        'Exif': {\r\n            33434: {\r\n                'name': 'ExposureTime',\r\n                'type': 'Rational'\r\n            },\r\n            33437: {\r\n                'name': 'FNumber',\r\n                'type': 'Rational'\r\n            },\r\n            34850: {\r\n                'name': 'ExposureProgram',\r\n                'type': 'Short'\r\n            },\r\n            34852: {\r\n                'name': 'SpectralSensitivity',\r\n                'type': 'Ascii'\r\n            },\r\n            34855: {\r\n                'name': 'ISOSpeedRatings',\r\n                'type': 'Short'\r\n            },\r\n            34856: {\r\n                'name': 'OECF',\r\n                'type': 'Undefined'\r\n            },\r\n            34864: {\r\n                'name': 'SensitivityType',\r\n                'type': 'Short'\r\n            },\r\n            34865: {\r\n                'name': 'StandardOutputSensitivity',\r\n                'type': 'Long'\r\n            },\r\n            34866: {\r\n                'name': 'RecommendedExposureIndex',\r\n                'type': 'Long'\r\n            },\r\n            34867: {\r\n                'name': 'ISOSpeed',\r\n                'type': 'Long'\r\n            },\r\n            34868: {\r\n                'name': 'ISOSpeedLatitudeyyy',\r\n                'type': 'Long'\r\n            },\r\n            34869: {\r\n                'name': 'ISOSpeedLatitudezzz',\r\n                'type': 'Long'\r\n            },\r\n            36864: {\r\n                'name': 'ExifVersion',\r\n                'type': 'Undefined'\r\n            },\r\n            36867: {\r\n                'name': 'DateTimeOriginal',\r\n                'type': 'Ascii'\r\n            },\r\n            36868: {\r\n                'name': 'DateTimeDigitized',\r\n                'type': 'Ascii'\r\n            },\r\n            37121: {\r\n                'name': 'ComponentsConfiguration',\r\n                'type': 'Undefined'\r\n            },\r\n            37122: {\r\n                'name': 'CompressedBitsPerPixel',\r\n                'type': 'Rational'\r\n            },\r\n            37377: {\r\n                'name': 'ShutterSpeedValue',\r\n                'type': 'SRational'\r\n            },\r\n            37378: {\r\n                'name': 'ApertureValue',\r\n                'type': 'Rational'\r\n            },\r\n            37379: {\r\n                'name': 'BrightnessValue',\r\n                'type': 'SRational'\r\n            },\r\n            37380: {\r\n                'name': 'ExposureBiasValue',\r\n                'type': 'SRational'\r\n            },\r\n            37381: {\r\n                'name': 'MaxApertureValue',\r\n                'type': 'Rational'\r\n            },\r\n            37382: {\r\n                'name': 'SubjectDistance',\r\n                'type': 'Rational'\r\n            },\r\n            37383: {\r\n                'name': 'MeteringMode',\r\n                'type': 'Short'\r\n            },\r\n            37384: {\r\n                'name': 'LightSource',\r\n                'type': 'Short'\r\n            },\r\n            37385: {\r\n                'name': 'Flash',\r\n                'type': 'Short'\r\n            },\r\n            37386: {\r\n                'name': 'FocalLength',\r\n                'type': 'Rational'\r\n            },\r\n            37396: {\r\n                'name': 'SubjectArea',\r\n                'type': 'Short'\r\n            },\r\n            37500: {\r\n                'name': 'MakerNote',\r\n                'type': 'Undefined'\r\n            },\r\n            37510: {\r\n                'name': 'UserComment',\r\n                'type': 'Ascii'\r\n            },\r\n            37520: {\r\n                'name': 'SubSecTime',\r\n                'type': 'Ascii'\r\n            },\r\n            37521: {\r\n                'name': 'SubSecTimeOriginal',\r\n                'type': 'Ascii'\r\n            },\r\n            37522: {\r\n                'name': 'SubSecTimeDigitized',\r\n                'type': 'Ascii'\r\n            },\r\n            40960: {\r\n                'name': 'FlashpixVersion',\r\n                'type': 'Undefined'\r\n            },\r\n            40961: {\r\n                'name': 'ColorSpace',\r\n                'type': 'Short'\r\n            },\r\n            40962: {\r\n                'name': 'PixelXDimension',\r\n                'type': 'Long'\r\n            },\r\n            40963: {\r\n                'name': 'PixelYDimension',\r\n                'type': 'Long'\r\n            },\r\n            40964: {\r\n                'name': 'RelatedSoundFile',\r\n                'type': 'Ascii'\r\n            },\r\n            40965: {\r\n                'name': 'InteroperabilityTag',\r\n                'type': 'Long'\r\n            },\r\n            41483: {\r\n                'name': 'FlashEnergy',\r\n                'type': 'Rational'\r\n            },\r\n            41484: {\r\n                'name': 'SpatialFrequencyResponse',\r\n                'type': 'Undefined'\r\n            },\r\n            41486: {\r\n                'name': 'FocalPlaneXResolution',\r\n                'type': 'Rational'\r\n            },\r\n            41487: {\r\n                'name': 'FocalPlaneYResolution',\r\n                'type': 'Rational'\r\n            },\r\n            41488: {\r\n                'name': 'FocalPlaneResolutionUnit',\r\n                'type': 'Short'\r\n            },\r\n            41492: {\r\n                'name': 'SubjectLocation',\r\n                'type': 'Short'\r\n            },\r\n            41493: {\r\n                'name': 'ExposureIndex',\r\n                'type': 'Rational'\r\n            },\r\n            41495: {\r\n                'name': 'SensingMethod',\r\n                'type': 'Short'\r\n            },\r\n            41728: {\r\n                'name': 'FileSource',\r\n                'type': 'Undefined'\r\n            },\r\n            41729: {\r\n                'name': 'SceneType',\r\n                'type': 'Undefined'\r\n            },\r\n            41730: {\r\n                'name': 'CFAPattern',\r\n                'type': 'Undefined'\r\n            },\r\n            41985: {\r\n                'name': 'CustomRendered',\r\n                'type': 'Short'\r\n            },\r\n            41986: {\r\n                'name': 'ExposureMode',\r\n                'type': 'Short'\r\n            },\r\n            41987: {\r\n                'name': 'WhiteBalance',\r\n                'type': 'Short'\r\n            },\r\n            41988: {\r\n                'name': 'DigitalZoomRatio',\r\n                'type': 'Rational'\r\n            },\r\n            41989: {\r\n                'name': 'FocalLengthIn35mmFilm',\r\n                'type': 'Short'\r\n            },\r\n            41990: {\r\n                'name': 'SceneCaptureType',\r\n                'type': 'Short'\r\n            },\r\n            41991: {\r\n                'name': 'GainControl',\r\n                'type': 'Short'\r\n            },\r\n            41992: {\r\n                'name': 'Contrast',\r\n                'type': 'Short'\r\n            },\r\n            41993: {\r\n                'name': 'Saturation',\r\n                'type': 'Short'\r\n            },\r\n            41994: {\r\n                'name': 'Sharpness',\r\n                'type': 'Short'\r\n            },\r\n            41995: {\r\n                'name': 'DeviceSettingDescription',\r\n                'type': 'Undefined'\r\n            },\r\n            41996: {\r\n                'name': 'SubjectDistanceRange',\r\n                'type': 'Short'\r\n            },\r\n            42016: {\r\n                'name': 'ImageUniqueID',\r\n                'type': 'Ascii'\r\n            },\r\n            42032: {\r\n                'name': 'CameraOwnerName',\r\n                'type': 'Ascii'\r\n            },\r\n            42033: {\r\n                'name': 'BodySerialNumber',\r\n                'type': 'Ascii'\r\n            },\r\n            42034: {\r\n                'name': 'LensSpecification',\r\n                'type': 'Rational'\r\n            },\r\n            42035: {\r\n                'name': 'LensMake',\r\n                'type': 'Ascii'\r\n            },\r\n            42036: {\r\n                'name': 'LensModel',\r\n                'type': 'Ascii'\r\n            },\r\n            42037: {\r\n                'name': 'LensSerialNumber',\r\n                'type': 'Ascii'\r\n            },\r\n            42240: {\r\n                'name': 'Gamma',\r\n                'type': 'Rational'\r\n            }\r\n        },\r\n        'GPS': {\r\n            0: {\r\n                'name': 'GPSVersionID',\r\n                'type': 'Byte'\r\n            },\r\n            1: {\r\n                'name': 'GPSLatitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            2: {\r\n                'name': 'GPSLatitude',\r\n                'type': 'Rational'\r\n            },\r\n            3: {\r\n                'name': 'GPSLongitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            4: {\r\n                'name': 'GPSLongitude',\r\n                'type': 'Rational'\r\n            },\r\n            5: {\r\n                'name': 'GPSAltitudeRef',\r\n                'type': 'Byte'\r\n            },\r\n            6: {\r\n                'name': 'GPSAltitude',\r\n                'type': 'Rational'\r\n            },\r\n            7: {\r\n                'name': 'GPSTimeStamp',\r\n                'type': 'Rational'\r\n            },\r\n            8: {\r\n                'name': 'GPSSatellites',\r\n                'type': 'Ascii'\r\n            },\r\n            9: {\r\n                'name': 'GPSStatus',\r\n                'type': 'Ascii'\r\n            },\r\n            10: {\r\n                'name': 'GPSMeasureMode',\r\n                'type': 'Ascii'\r\n            },\r\n            11: {\r\n                'name': 'GPSDOP',\r\n                'type': 'Rational'\r\n            },\r\n            12: {\r\n                'name': 'GPSSpeedRef',\r\n                'type': 'Ascii'\r\n            },\r\n            13: {\r\n                'name': 'GPSSpeed',\r\n                'type': 'Rational'\r\n            },\r\n            14: {\r\n                'name': 'GPSTrackRef',\r\n                'type': 'Ascii'\r\n            },\r\n            15: {\r\n                'name': 'GPSTrack',\r\n                'type': 'Rational'\r\n            },\r\n            16: {\r\n                'name': 'GPSImgDirectionRef',\r\n                'type': 'Ascii'\r\n            },\r\n            17: {\r\n                'name': 'GPSImgDirection',\r\n                'type': 'Rational'\r\n            },\r\n            18: {\r\n                'name': 'GPSMapDatum',\r\n                'type': 'Ascii'\r\n            },\r\n            19: {\r\n                'name': 'GPSDestLatitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            20: {\r\n                'name': 'GPSDestLatitude',\r\n                'type': 'Rational'\r\n            },\r\n            21: {\r\n                'name': 'GPSDestLongitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            22: {\r\n                'name': 'GPSDestLongitude',\r\n                'type': 'Rational'\r\n            },\r\n            23: {\r\n                'name': 'GPSDestBearingRef',\r\n                'type': 'Ascii'\r\n            },\r\n            24: {\r\n                'name': 'GPSDestBearing',\r\n                'type': 'Rational'\r\n            },\r\n            25: {\r\n                'name': 'GPSDestDistanceRef',\r\n                'type': 'Ascii'\r\n            },\r\n            26: {\r\n                'name': 'GPSDestDistance',\r\n                'type': 'Rational'\r\n            },\r\n            27: {\r\n                'name': 'GPSProcessingMethod',\r\n                'type': 'Undefined'\r\n            },\r\n            28: {\r\n                'name': 'GPSAreaInformation',\r\n                'type': 'Undefined'\r\n            },\r\n            29: {\r\n                'name': 'GPSDateStamp',\r\n                'type': 'Ascii'\r\n            },\r\n            30: {\r\n                'name': 'GPSDifferential',\r\n                'type': 'Short'\r\n            },\r\n            31: {\r\n                'name': 'GPSHPositioningError',\r\n                'type': 'Rational'\r\n            }\r\n        },\r\n        'Interop': {\r\n            1: {\r\n                'name': 'InteroperabilityIndex',\r\n                'type': 'Ascii'\r\n            }\r\n        },\r\n    };\r\n    TAGS[\"0th\"] = TAGS[\"Image\"];\r\n    TAGS[\"1st\"] = TAGS[\"Image\"];\r\n    that.TAGS = TAGS;\r\n\r\n    \r\n    that.ImageIFD = {\r\n        ProcessingSoftware:11,\r\n        NewSubfileType:254,\r\n        SubfileType:255,\r\n        ImageWidth:256,\r\n        ImageLength:257,\r\n        BitsPerSample:258,\r\n        Compression:259,\r\n        PhotometricInterpretation:262,\r\n        Threshholding:263,\r\n        CellWidth:264,\r\n        CellLength:265,\r\n        FillOrder:266,\r\n        DocumentName:269,\r\n        ImageDescription:270,\r\n        Make:271,\r\n        Model:272,\r\n        StripOffsets:273,\r\n        Orientation:274,\r\n        SamplesPerPixel:277,\r\n        RowsPerStrip:278,\r\n        StripByteCounts:279,\r\n        XResolution:282,\r\n        YResolution:283,\r\n        PlanarConfiguration:284,\r\n        GrayResponseUnit:290,\r\n        GrayResponseCurve:291,\r\n        T4Options:292,\r\n        T6Options:293,\r\n        ResolutionUnit:296,\r\n        TransferFunction:301,\r\n        Software:305,\r\n        DateTime:306,\r\n        Artist:315,\r\n        HostComputer:316,\r\n        Predictor:317,\r\n        WhitePoint:318,\r\n        PrimaryChromaticities:319,\r\n        ColorMap:320,\r\n        HalftoneHints:321,\r\n        TileWidth:322,\r\n        TileLength:323,\r\n        TileOffsets:324,\r\n        TileByteCounts:325,\r\n        SubIFDs:330,\r\n        InkSet:332,\r\n        InkNames:333,\r\n        NumberOfInks:334,\r\n        DotRange:336,\r\n        TargetPrinter:337,\r\n        ExtraSamples:338,\r\n        SampleFormat:339,\r\n        SMinSampleValue:340,\r\n        SMaxSampleValue:341,\r\n        TransferRange:342,\r\n        ClipPath:343,\r\n        XClipPathUnits:344,\r\n        YClipPathUnits:345,\r\n        Indexed:346,\r\n        JPEGTables:347,\r\n        OPIProxy:351,\r\n        JPEGProc:512,\r\n        JPEGInterchangeFormat:513,\r\n        JPEGInterchangeFormatLength:514,\r\n        JPEGRestartInterval:515,\r\n        JPEGLosslessPredictors:517,\r\n        JPEGPointTransforms:518,\r\n        JPEGQTables:519,\r\n        JPEGDCTables:520,\r\n        JPEGACTables:521,\r\n        YCbCrCoefficients:529,\r\n        YCbCrSubSampling:530,\r\n        YCbCrPositioning:531,\r\n        ReferenceBlackWhite:532,\r\n        XMLPacket:700,\r\n        Rating:18246,\r\n        RatingPercent:18249,\r\n        ImageID:32781,\r\n        CFARepeatPatternDim:33421,\r\n        CFAPattern:33422,\r\n        BatteryLevel:33423,\r\n        Copyright:33432,\r\n        ExposureTime:33434,\r\n        ImageResources:34377,\r\n        ExifTag:34665,\r\n        InterColorProfile:34675,\r\n        GPSTag:34853,\r\n        Interlace:34857,\r\n        TimeZoneOffset:34858,\r\n        SelfTimerMode:34859,\r\n        FlashEnergy:37387,\r\n        SpatialFrequencyResponse:37388,\r\n        Noise:37389,\r\n        FocalPlaneXResolution:37390,\r\n        FocalPlaneYResolution:37391,\r\n        FocalPlaneResolutionUnit:37392,\r\n        ImageNumber:37393,\r\n        SecurityClassification:37394,\r\n        ImageHistory:37395,\r\n        ExposureIndex:37397,\r\n        TIFFEPStandardID:37398,\r\n        SensingMethod:37399,\r\n        XPTitle:40091,\r\n        XPComment:40092,\r\n        XPAuthor:40093,\r\n        XPKeywords:40094,\r\n        XPSubject:40095,\r\n        PrintImageMatching:50341,\r\n        DNGVersion:50706,\r\n        DNGBackwardVersion:50707,\r\n        UniqueCameraModel:50708,\r\n        LocalizedCameraModel:50709,\r\n        CFAPlaneColor:50710,\r\n        CFALayout:50711,\r\n        LinearizationTable:50712,\r\n        BlackLevelRepeatDim:50713,\r\n        BlackLevel:50714,\r\n        BlackLevelDeltaH:50715,\r\n        BlackLevelDeltaV:50716,\r\n        WhiteLevel:50717,\r\n        DefaultScale:50718,\r\n        DefaultCropOrigin:50719,\r\n        DefaultCropSize:50720,\r\n        ColorMatrix1:50721,\r\n        ColorMatrix2:50722,\r\n        CameraCalibration1:50723,\r\n        CameraCalibration2:50724,\r\n        ReductionMatrix1:50725,\r\n        ReductionMatrix2:50726,\r\n        AnalogBalance:50727,\r\n        AsShotNeutral:50728,\r\n        AsShotWhiteXY:50729,\r\n        BaselineExposure:50730,\r\n        BaselineNoise:50731,\r\n        BaselineSharpness:50732,\r\n        BayerGreenSplit:50733,\r\n        LinearResponseLimit:50734,\r\n        CameraSerialNumber:50735,\r\n        LensInfo:50736,\r\n        ChromaBlurRadius:50737,\r\n        AntiAliasStrength:50738,\r\n        ShadowScale:50739,\r\n        DNGPrivateData:50740,\r\n        MakerNoteSafety:50741,\r\n        CalibrationIlluminant1:50778,\r\n        CalibrationIlluminant2:50779,\r\n        BestQualityScale:50780,\r\n        RawDataUniqueID:50781,\r\n        OriginalRawFileName:50827,\r\n        OriginalRawFileData:50828,\r\n        ActiveArea:50829,\r\n        MaskedAreas:50830,\r\n        AsShotICCProfile:50831,\r\n        AsShotPreProfileMatrix:50832,\r\n        CurrentICCProfile:50833,\r\n        CurrentPreProfileMatrix:50834,\r\n        ColorimetricReference:50879,\r\n        CameraCalibrationSignature:50931,\r\n        ProfileCalibrationSignature:50932,\r\n        AsShotProfileName:50934,\r\n        NoiseReductionApplied:50935,\r\n        ProfileName:50936,\r\n        ProfileHueSatMapDims:50937,\r\n        ProfileHueSatMapData1:50938,\r\n        ProfileHueSatMapData2:50939,\r\n        ProfileToneCurve:50940,\r\n        ProfileEmbedPolicy:50941,\r\n        ProfileCopyright:50942,\r\n        ForwardMatrix1:50964,\r\n        ForwardMatrix2:50965,\r\n        PreviewApplicationName:50966,\r\n        PreviewApplicationVersion:50967,\r\n        PreviewSettingsName:50968,\r\n        PreviewSettingsDigest:50969,\r\n        PreviewColorSpace:50970,\r\n        PreviewDateTime:50971,\r\n        RawImageDigest:50972,\r\n        OriginalRawFileDigest:50973,\r\n        SubTileBlockSize:50974,\r\n        RowInterleaveFactor:50975,\r\n        ProfileLookTableDims:50981,\r\n        ProfileLookTableData:50982,\r\n        OpcodeList1:51008,\r\n        OpcodeList2:51009,\r\n        OpcodeList3:51022,\r\n        NoiseProfile:51041,\r\n    };\r\n\r\n    \r\n    that.ExifIFD = {\r\n        ExposureTime:33434,\r\n        FNumber:33437,\r\n        ExposureProgram:34850,\r\n        SpectralSensitivity:34852,\r\n        ISOSpeedRatings:34855,\r\n        OECF:34856,\r\n        SensitivityType:34864,\r\n        StandardOutputSensitivity:34865,\r\n        RecommendedExposureIndex:34866,\r\n        ISOSpeed:34867,\r\n        ISOSpeedLatitudeyyy:34868,\r\n        ISOSpeedLatitudezzz:34869,\r\n        ExifVersion:36864,\r\n        DateTimeOriginal:36867,\r\n        DateTimeDigitized:36868,\r\n        ComponentsConfiguration:37121,\r\n        CompressedBitsPerPixel:37122,\r\n        ShutterSpeedValue:37377,\r\n        ApertureValue:37378,\r\n        BrightnessValue:37379,\r\n        ExposureBiasValue:37380,\r\n        MaxApertureValue:37381,\r\n        SubjectDistance:37382,\r\n        MeteringMode:37383,\r\n        LightSource:37384,\r\n        Flash:37385,\r\n        FocalLength:37386,\r\n        SubjectArea:37396,\r\n        MakerNote:37500,\r\n        UserComment:37510,\r\n        SubSecTime:37520,\r\n        SubSecTimeOriginal:37521,\r\n        SubSecTimeDigitized:37522,\r\n        FlashpixVersion:40960,\r\n        ColorSpace:40961,\r\n        PixelXDimension:40962,\r\n        PixelYDimension:40963,\r\n        RelatedSoundFile:40964,\r\n        InteroperabilityTag:40965,\r\n        FlashEnergy:41483,\r\n        SpatialFrequencyResponse:41484,\r\n        FocalPlaneXResolution:41486,\r\n        FocalPlaneYResolution:41487,\r\n        FocalPlaneResolutionUnit:41488,\r\n        SubjectLocation:41492,\r\n        ExposureIndex:41493,\r\n        SensingMethod:41495,\r\n        FileSource:41728,\r\n        SceneType:41729,\r\n        CFAPattern:41730,\r\n        CustomRendered:41985,\r\n        ExposureMode:41986,\r\n        WhiteBalance:41987,\r\n        DigitalZoomRatio:41988,\r\n        FocalLengthIn35mmFilm:41989,\r\n        SceneCaptureType:41990,\r\n        GainControl:41991,\r\n        Contrast:41992,\r\n        Saturation:41993,\r\n        Sharpness:41994,\r\n        DeviceSettingDescription:41995,\r\n        SubjectDistanceRange:41996,\r\n        ImageUniqueID:42016,\r\n        CameraOwnerName:42032,\r\n        BodySerialNumber:42033,\r\n        LensSpecification:42034,\r\n        LensMake:42035,\r\n        LensModel:42036,\r\n        LensSerialNumber:42037,\r\n        Gamma:42240,\r\n    };\r\n\r\n\r\n    that.GPSIFD = {\r\n        GPSVersionID:0,\r\n        GPSLatitudeRef:1,\r\n        GPSLatitude:2,\r\n        GPSLongitudeRef:3,\r\n        GPSLongitude:4,\r\n        GPSAltitudeRef:5,\r\n        GPSAltitude:6,\r\n        GPSTimeStamp:7,\r\n        GPSSatellites:8,\r\n        GPSStatus:9,\r\n        GPSMeasureMode:10,\r\n        GPSDOP:11,\r\n        GPSSpeedRef:12,\r\n        GPSSpeed:13,\r\n        GPSTrackRef:14,\r\n        GPSTrack:15,\r\n        GPSImgDirectionRef:16,\r\n        GPSImgDirection:17,\r\n        GPSMapDatum:18,\r\n        GPSDestLatitudeRef:19,\r\n        GPSDestLatitude:20,\r\n        GPSDestLongitudeRef:21,\r\n        GPSDestLongitude:22,\r\n        GPSDestBearingRef:23,\r\n        GPSDestBearing:24,\r\n        GPSDestDistanceRef:25,\r\n        GPSDestDistance:26,\r\n        GPSProcessingMethod:27,\r\n        GPSAreaInformation:28,\r\n        GPSDateStamp:29,\r\n        GPSDifferential:30,\r\n        GPSHPositioningError:31,\r\n    };\r\n\r\n\r\n    that.InteropIFD = {\r\n        InteroperabilityIndex:1,\r\n    };\r\n\r\n    that.GPSHelper = {\r\n        degToDmsRational:function (degFloat) {\r\n            var degAbs = Math.abs(degFloat);\r\n            var minFloat = degAbs % 1 * 60;\r\n            var secFloat = minFloat % 1 * 60;\r\n            var deg = Math.floor(degAbs);\r\n            var min = Math.floor(minFloat);\r\n            var sec = Math.round(secFloat * 100);\r\n\r\n            return [[deg, 1], [min, 1], [sec, 100]];\r\n        },\r\n\r\n        dmsRationalToDeg:function (dmsArray, ref) {\r\n            var sign = (ref === 'S' || ref === 'W') ? -1.0 : 1.0;\r\n            var deg = dmsArray[0][0] / dmsArray[0][1] +\r\n                      dmsArray[1][0] / dmsArray[1][1] / 60.0 +\r\n                      dmsArray[2][0] / dmsArray[2][1] / 3600.0;\r\n\r\n            return deg * sign;\r\n        }\r\n    };\r\n    \r\n    \r\n    if (typeof exports !== 'undefined') {\r\n        if (typeof module !== 'undefined' && module.exports) {\r\n            exports = module.exports = that;\r\n        }\r\n        exports.piexif = that;\r\n    } else {\r\n        window.piexif = that;\r\n    }\r\n\r\n})();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}